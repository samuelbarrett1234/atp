2020-05-16 07:17:31.102742 [Thread 0x000018b8] trace : Starting up application...
2020-05-16 07:17:31.105737 [Thread 0x000018b8] trace : Successfully loaded database file at "../Data/DB/eqlogic.db"
2020-05-16 07:17:31.105737 [Thread 0x000018b8] debug : Querying SQLite database for model context name "group-theory".
2020-05-16 07:17:31.105737 [Thread 0x000018b8] trace : Beginning a transaction...
2020-05-16 07:17:31.106732 [Thread 0x000018b8] debug : Successfully built SQLite statement from "SELECT filename FROM model_contexts WHERE name = "group-theory";".
2020-05-16 07:17:31.106732 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.106732 [Thread 0x000018b8] debug : Finishing SQLite query...
2020-05-16 07:17:31.106732 [Thread 0x000018b8] debug : Querying SQLite database for model context name "group-theory".
2020-05-16 07:17:31.106732 [Thread 0x000018b8] trace : Beginning a transaction...
2020-05-16 07:17:31.106732 [Thread 0x000018b8] debug : Successfully built SQLite statement from "SELECT ctx_id FROM model_contexts WHERE name = "group-theory";".
2020-05-16 07:17:31.106732 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.106732 [Thread 0x000018b8] debug : Finishing SQLite query...
2020-05-16 07:17:31.107717 [Thread 0x000018b8] trace : Successfully loaded the context file "Group Theory".
2020-05-16 07:17:31.107717 [Thread 0x000018b8] trace : Checking that the model context's axioms are loaded in the database properly, before we begin...
2020-05-16 07:17:31.107717 [Thread 0x000018b8] trace : Beginning a transaction...
2020-05-16 07:17:31.107717 [Thread 0x000018b8] debug : Successfully built SQLite statement from "INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(*(x0, x1), x2) = *(x0, *(x1, x2))', 1);".
2020-05-16 07:17:31.107717 [Thread 0x000018b8] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(*(x0, x1), x2) = *(x0, *(x1, x2))'), 1);".
2020-05-16 07:17:31.107717 [Thread 0x000018b8] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(x0, e) = x0', 1);".
2020-05-16 07:17:31.107717 [Thread 0x000018b8] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(x0, e) = x0'), 1);".
2020-05-16 07:17:31.107717 [Thread 0x000018b8] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(e, x0) = x0', 1);".
2020-05-16 07:17:31.107717 [Thread 0x000018b8] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(e, x0) = x0'), 1);".
2020-05-16 07:17:31.107717 [Thread 0x000018b8] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(x0, i(x0)) = e', 1);".
2020-05-16 07:17:31.108724 [Thread 0x000018b8] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(x0, i(x0)) = e'), 1);".
2020-05-16 07:17:31.108724 [Thread 0x000018b8] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(i(x0), x0) = e', 1);".
2020-05-16 07:17:31.108724 [Thread 0x000018b8] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(i(x0), x0) = e'), 1);".
2020-05-16 07:17:31.108724 [Thread 0x000018b8] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(x0, *(x1, x2)) = *(*(x0, x1), x2)', 1);".
2020-05-16 07:17:31.108724 [Thread 0x000018b8] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(x0, *(x1, x2)) = *(*(x0, x1), x2)'), 1);".
2020-05-16 07:17:31.108724 [Thread 0x000018b8] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(x0, *(x1, x2)) = *(*(x0, x1), x2)', 1);".
2020-05-16 07:17:31.108724 [Thread 0x000018b8] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(x0, *(x1, x2)) = *(*(x0, x1), x2)'), 1);".
2020-05-16 07:17:31.108724 [Thread 0x000018b8] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(x0, *(x1, x2)) = *(*(x0, x1), x2)', 1);".
2020-05-16 07:17:31.108724 [Thread 0x000018b8] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(x0, *(x1, x2)) = *(*(x0, x1), x2)'), 1);".
2020-05-16 07:17:31.108724 [Thread 0x000018b8] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(x0, *(x1, x2)) = *(*(x0, x1), x2)', 1);".
2020-05-16 07:17:31.108724 [Thread 0x000018b8] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(x0, *(x1, x2)) = *(*(x0, x1), x2)'), 1);".
2020-05-16 07:17:31.108724 [Thread 0x000018b8] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(x0, *(x1, x2)) = *(*(x0, x1), x2)', 1);".
2020-05-16 07:17:31.108724 [Thread 0x000018b8] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(x0, *(x1, x2)) = *(*(x0, x1), x2)'), 1);".
2020-05-16 07:17:31.108724 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.118669 [Thread 0x000018b8] debug : Finishing SQLite query...
2020-05-16 07:17:31.118669 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.119667 [Thread 0x000018b8] debug : Finishing SQLite query...
2020-05-16 07:17:31.119667 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.128640 [Thread 0x000018b8] debug : Finishing SQLite query...
2020-05-16 07:17:31.129637 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.129637 [Thread 0x000018b8] debug : Finishing SQLite query...
2020-05-16 07:17:31.129637 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.144597 [Thread 0x000018b8] debug : Finishing SQLite query...
2020-05-16 07:17:31.144597 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.145593 [Thread 0x000018b8] debug : Finishing SQLite query...
2020-05-16 07:17:31.145593 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.154827 [Thread 0x000018b8] debug : Finishing SQLite query...
2020-05-16 07:17:31.154827 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.154827 [Thread 0x000018b8] debug : Finishing SQLite query...
2020-05-16 07:17:31.154827 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.164800 [Thread 0x000018b8] debug : Finishing SQLite query...
2020-05-16 07:17:31.164800 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.164800 [Thread 0x000018b8] debug : Finishing SQLite query...
2020-05-16 07:17:31.164800 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.173847 [Thread 0x000018b8] debug : Finishing SQLite query...
2020-05-16 07:17:31.173847 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.174812 [Thread 0x000018b8] debug : Finishing SQLite query...
2020-05-16 07:17:31.174812 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.183749 [Thread 0x000018b8] debug : Finishing SQLite query...
2020-05-16 07:17:31.183749 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.183749 [Thread 0x000018b8] debug : Finishing SQLite query...
2020-05-16 07:17:31.183749 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.193727 [Thread 0x000018b8] debug : Finishing SQLite query...
2020-05-16 07:17:31.193727 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.193727 [Thread 0x000018b8] debug : Finishing SQLite query...
2020-05-16 07:17:31.193727 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.203696 [Thread 0x000018b8] debug : Finishing SQLite query...
2020-05-16 07:17:31.203696 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.203696 [Thread 0x000018b8] debug : Finishing SQLite query...
2020-05-16 07:17:31.203696 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.212676 [Thread 0x000018b8] debug : Finishing SQLite query...
2020-05-16 07:17:31.212676 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.212676 [Thread 0x000018b8] debug : Finishing SQLite query...
2020-05-16 07:17:31.213675 [Thread 0x000018b8] trace : Successfully checked the axioms are set up in the database properly.
2020-05-16 07:17:31.213675 [Thread 0x000018b8] debug : Querying SQLite database for model context name "ids-informed-limited".
2020-05-16 07:17:31.213675 [Thread 0x000018b8] trace : Beginning a transaction...
2020-05-16 07:17:31.213675 [Thread 0x000018b8] debug : Successfully built SQLite statement from "SELECT filename FROM search_settings WHERE name = "ids-informed-limited";".
2020-05-16 07:17:31.213675 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.213675 [Thread 0x000018b8] debug : Finishing SQLite query...
2020-05-16 07:17:31.213675 [Thread 0x000018b8] debug : Querying SQLite database for model context name "ids-informed-limited".
2020-05-16 07:17:31.213675 [Thread 0x000018b8] trace : Beginning a transaction...
2020-05-16 07:17:31.213675 [Thread 0x000018b8] debug : Successfully built SQLite statement from "SELECT ss_id FROM search_settings WHERE name = "ids-informed-limited";".
2020-05-16 07:17:31.213675 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.213675 [Thread 0x000018b8] debug : Finishing SQLite query...
2020-05-16 07:17:31.214703 [Thread 0x000018b8] trace : Successfully loaded search settings "Informed Limited Iterative-Deepening Solver"
2020-05-16 07:17:31.217659 [Thread 0x000018b8] trace : Successfully loaded statements "i(i(x0))=x0". Creating corresponding proof process...
2020-05-16 07:17:31.217659 [Thread 0x000018b8] trace : Committing main thread...
2020-05-16 07:17:31.217659 [Thread 0x000018b8] trace : Creating proof initialisation process...
2020-05-16 07:17:31.217659 [Thread 0x000018b8] trace : Creating knowledge kernel...
2020-05-16 07:17:31.217659 [Thread 0x000018b8] trace : Creating solver...
2020-05-16 07:17:31.220651 [Thread 0x000018b8] debug : Building query for query process...
2020-05-16 07:17:31.220651 [Thread 0x000018b8] trace : Setting up kernel initialisation query...
2020-05-16 07:17:31.220651 [Thread 0x000018b8] debug : Obtained query builder.
2020-05-16 07:17:31.220651 [Thread 0x000018b8] debug : Built query "SELECT stmt FROM theorems WHERE ctx = 1 AND  EXISTS (SELECT 1 FROM proofs WHERE thm_id=id AND is_axiom = 0) ORDER BY RANDOM() LIMIT 50;".
2020-05-16 07:17:31.220651 [Thread 0x000018b8] trace : Beginning a transaction...
2020-05-16 07:17:31.220651 [Thread 0x000018b8] debug : Successfully built SQLite statement from "SELECT stmt FROM theorems WHERE ctx = 1 AND  EXISTS (SELECT 1 FROM proofs WHERE thm_id=id AND is_axiom = 0) ORDER BY RANDOM() LIMIT 50;".
2020-05-16 07:17:31.220651 [Thread 0x000018b8] debug : Successfully built query!
2020-05-16 07:17:31.220651 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.224641 [Thread 0x000018b8] debug : Extracting values from query...
2020-05-16 07:17:31.224641 [Thread 0x000018b8] trace : Adding '*(x0, i(x0)) = *(e, e)' to helper theorems.
2020-05-16 07:17:31.224641 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.224641 [Thread 0x000018b8] debug : Extracting values from query...
2020-05-16 07:17:31.224641 [Thread 0x000018b8] trace : Adding '*(e, x0) = *(e, x0)' to helper theorems.
2020-05-16 07:17:31.224641 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.224641 [Thread 0x000018b8] debug : Extracting values from query...
2020-05-16 07:17:31.224641 [Thread 0x000018b8] trace : Adding 'e = *(i(x0), *(e, x0))' to helper theorems.
2020-05-16 07:17:31.224641 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.224641 [Thread 0x000018b8] debug : Extracting values from query...
2020-05-16 07:17:31.224641 [Thread 0x000018b8] trace : Adding 'i(e) = *(e, *(x0, i(x0)))' to helper theorems.
2020-05-16 07:17:31.224641 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.224641 [Thread 0x000018b8] debug : Extracting values from query...
2020-05-16 07:17:31.224641 [Thread 0x000018b8] trace : Adding 'e = *(e, i(i(i(e))))' to helper theorems.
2020-05-16 07:17:31.224641 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.224641 [Thread 0x000018b8] debug : Extracting values from query...
2020-05-16 07:17:31.224641 [Thread 0x000018b8] trace : Adding 'i(i(e)) = *(e, i(e))' to helper theorems.
2020-05-16 07:17:31.224641 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.224641 [Thread 0x000018b8] debug : Extracting values from query...
2020-05-16 07:17:31.224641 [Thread 0x000018b8] trace : Adding '*(x0, *(e, *(x0, i(x0)))) = x0' to helper theorems.
2020-05-16 07:17:31.225676 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.225676 [Thread 0x000018b8] debug : Extracting values from query...
2020-05-16 07:17:31.225676 [Thread 0x000018b8] trace : Adding '*(x0, *(e, e)) = *(x0, e)' to helper theorems.
2020-05-16 07:17:31.225676 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.225676 [Thread 0x000018b8] debug : Extracting values from query...
2020-05-16 07:17:31.225676 [Thread 0x000018b8] trace : Adding '*(i(*(*(i(x0), x0), e)), e) = e' to helper theorems.
2020-05-16 07:17:31.225676 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.225676 [Thread 0x000018b8] debug : Extracting values from query...
2020-05-16 07:17:31.225676 [Thread 0x000018b8] trace : Adding 'e = *(i(x0), x0)' to helper theorems.
2020-05-16 07:17:31.225676 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.225676 [Thread 0x000018b8] debug : Extracting values from query...
2020-05-16 07:17:31.225676 [Thread 0x000018b8] trace : Adding 'i(i(i(e))) = *(e, i(i(i(e))))' to helper theorems.
2020-05-16 07:17:31.225676 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.225676 [Thread 0x000018b8] debug : Extracting values from query...
2020-05-16 07:17:31.225676 [Thread 0x000018b8] trace : Adding '*(*(i(e), e), x0) = x0' to helper theorems.
2020-05-16 07:17:31.225676 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.225676 [Thread 0x000018b8] debug : Extracting values from query...
2020-05-16 07:17:31.225676 [Thread 0x000018b8] trace : Adding 'i(e) = *(i(i(*(e, i(e)))), e)' to helper theorems.
2020-05-16 07:17:31.225676 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.225676 [Thread 0x000018b8] debug : Extracting values from query...
2020-05-16 07:17:31.225676 [Thread 0x000018b8] trace : Adding 'e = *(i(i(*(e, e))), e)' to helper theorems.
2020-05-16 07:17:31.225676 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.225676 [Thread 0x000018b8] debug : Extracting values from query...
2020-05-16 07:17:31.225676 [Thread 0x000018b8] trace : Adding '*(i(x0), x0) = i(e)' to helper theorems.
2020-05-16 07:17:31.225676 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.225676 [Thread 0x000018b8] debug : Extracting values from query...
2020-05-16 07:17:31.225676 [Thread 0x000018b8] trace : Adding 'e = e' to helper theorems.
2020-05-16 07:17:31.225676 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.225676 [Thread 0x000018b8] debug : Extracting values from query...
2020-05-16 07:17:31.225676 [Thread 0x000018b8] trace : Adding '*(i(x1), *(*(i(x0), x0), *(x1, i(*(x0, x1))))) = i(*(x0, x1))' to helper theorems.
2020-05-16 07:17:31.225676 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.225676 [Thread 0x000018b8] debug : Extracting values from query...
2020-05-16 07:17:31.225676 [Thread 0x000018b8] trace : Adding 'i(x0) = i(i(*(e, i(x0))))' to helper theorems.
2020-05-16 07:17:31.225676 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.225676 [Thread 0x000018b8] debug : Extracting values from query...
2020-05-16 07:17:31.225676 [Thread 0x000018b8] trace : Adding 'i(*(x0, i(x0))) = e' to helper theorems.
2020-05-16 07:17:31.225676 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.225676 [Thread 0x000018b8] debug : Extracting values from query...
2020-05-16 07:17:31.225676 [Thread 0x000018b8] trace : Adding '*(e, i(i(e))) = e' to helper theorems.
2020-05-16 07:17:31.225676 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.225676 [Thread 0x000018b8] debug : Extracting values from query...
2020-05-16 07:17:31.225676 [Thread 0x000018b8] trace : Adding 'x0 = *(i(i(*(x0, e))), e)' to helper theorems.
2020-05-16 07:17:31.225676 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.225676 [Thread 0x000018b8] debug : Extracting values from query...
2020-05-16 07:17:31.226670 [Thread 0x000018b8] trace : Adding 'x0 = i(i(*(e, x0)))' to helper theorems.
2020-05-16 07:17:31.226670 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.226670 [Thread 0x000018b8] debug : Extracting values from query...
2020-05-16 07:17:31.226670 [Thread 0x000018b8] trace : Adding 'x0 = i(i(*(x0, e)))' to helper theorems.
2020-05-16 07:17:31.226670 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.226670 [Thread 0x000018b8] debug : Extracting values from query...
2020-05-16 07:17:31.226670 [Thread 0x000018b8] trace : Adding 'e = i(i(e))' to helper theorems.
2020-05-16 07:17:31.226670 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.226670 [Thread 0x000018b8] debug : Extracting values from query...
2020-05-16 07:17:31.226670 [Thread 0x000018b8] trace : Adding 'x0 = *(*(e, i(*(e, e))), x0)' to helper theorems.
2020-05-16 07:17:31.226670 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.226670 [Thread 0x000018b8] debug : Extracting values from query...
2020-05-16 07:17:31.226670 [Thread 0x000018b8] trace : Adding '*(i(e), i(e)) = e' to helper theorems.
2020-05-16 07:17:31.226670 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.226670 [Thread 0x000018b8] debug : Extracting values from query...
2020-05-16 07:17:31.226670 [Thread 0x000018b8] trace : Adding 'e = i(*(*(e, i(e)), e))' to helper theorems.
2020-05-16 07:17:31.226670 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.226670 [Thread 0x000018b8] debug : Extracting values from query...
2020-05-16 07:17:31.226670 [Thread 0x000018b8] trace : Adding 'i(*(e, e)) = e' to helper theorems.
2020-05-16 07:17:31.226670 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.226670 [Thread 0x000018b8] debug : Extracting values from query...
2020-05-16 07:17:31.226670 [Thread 0x000018b8] trace : Adding '*(i(i(*(e, e))), x0) = x0' to helper theorems.
2020-05-16 07:17:31.226670 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.226670 [Thread 0x000018b8] debug : Extracting values from query...
2020-05-16 07:17:31.226670 [Thread 0x000018b8] trace : Adding 'i(x0) = i(i(i(x0)))' to helper theorems.
2020-05-16 07:17:31.226670 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.226670 [Thread 0x000018b8] debug : Extracting values from query...
2020-05-16 07:17:31.226670 [Thread 0x000018b8] trace : Adding 'i(i(i(e))) = *(i(e), e)' to helper theorems.
2020-05-16 07:17:31.226670 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.226670 [Thread 0x000018b8] debug : Extracting values from query...
2020-05-16 07:17:31.226670 [Thread 0x000018b8] trace : Adding 'e = *(i(*(e, e)), e)' to helper theorems.
2020-05-16 07:17:31.226670 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.226670 [Thread 0x000018b8] debug : Extracting values from query...
2020-05-16 07:17:31.226670 [Thread 0x000018b8] trace : Adding 'e = *(i(i(e)), e)' to helper theorems.
2020-05-16 07:17:31.226670 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.226670 [Thread 0x000018b8] debug : Extracting values from query...
2020-05-16 07:17:31.226670 [Thread 0x000018b8] trace : Adding '*(*(i(x0), x0), e) = e' to helper theorems.
2020-05-16 07:17:31.226670 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.226670 [Thread 0x000018b8] debug : Extracting values from query...
2020-05-16 07:17:31.226670 [Thread 0x000018b8] trace : Adding 'i(*(i(*(e, e)), e)) = e' to helper theorems.
2020-05-16 07:17:31.226670 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.226670 [Thread 0x000018b8] debug : Extracting values from query...
2020-05-16 07:17:31.226670 [Thread 0x000018b8] trace : Adding 'e = *(*(e, i(*(e, i(e)))), e)' to helper theorems.
2020-05-16 07:17:31.226670 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.226670 [Thread 0x000018b8] debug : Extracting values from query...
2020-05-16 07:17:31.226670 [Thread 0x000018b8] trace : Adding 'i(*(e, i(e))) = e' to helper theorems.
2020-05-16 07:17:31.226670 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.226670 [Thread 0x000018b8] debug : Extracting values from query...
2020-05-16 07:17:31.226670 [Thread 0x000018b8] trace : Adding 'i(*(i(i(e)), e)) = e' to helper theorems.
2020-05-16 07:17:31.226670 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.226670 [Thread 0x000018b8] debug : Extracting values from query...
2020-05-16 07:17:31.226670 [Thread 0x000018b8] trace : Adding 'e = *(i(e), *(i(x0), x0))' to helper theorems.
2020-05-16 07:17:31.227667 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.227667 [Thread 0x000018b8] debug : Extracting values from query...
2020-05-16 07:17:31.227667 [Thread 0x000018b8] trace : Adding 'x0 = x0' to helper theorems.
2020-05-16 07:17:31.227667 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.227667 [Thread 0x000018b8] debug : Extracting values from query...
2020-05-16 07:17:31.227667 [Thread 0x000018b8] trace : Adding 'i(e) = *(*(e, e), i(e))' to helper theorems.
2020-05-16 07:17:31.227667 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.227667 [Thread 0x000018b8] debug : Extracting values from query...
2020-05-16 07:17:31.227667 [Thread 0x000018b8] trace : Adding 'i(e) = *(*(i(e), *(i(e), e)), e)' to helper theorems.
2020-05-16 07:17:31.227667 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.227667 [Thread 0x000018b8] debug : Extracting values from query...
2020-05-16 07:17:31.227667 [Thread 0x000018b8] trace : Adding '*(x0, *(i(x0), x0)) = x0' to helper theorems.
2020-05-16 07:17:31.227667 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.227667 [Thread 0x000018b8] debug : Extracting values from query...
2020-05-16 07:17:31.227667 [Thread 0x000018b8] trace : Adding 'i(*(x1, x0)) = *(i(x0), *(i(x1), *(*(x1, x0), i(*(x1, x0)))))' to helper theorems.
2020-05-16 07:17:31.227667 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.227667 [Thread 0x000018b8] debug : Extracting values from query...
2020-05-16 07:17:31.227667 [Thread 0x000018b8] trace : Adding 'e = *(i(x0), *(i(e), x0))' to helper theorems.
2020-05-16 07:17:31.227667 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.227667 [Thread 0x000018b8] debug : Extracting values from query...
2020-05-16 07:17:31.227667 [Thread 0x000018b8] trace : Adding 'x0 = i(i(i(i(x0))))' to helper theorems.
2020-05-16 07:17:31.227667 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.227667 [Thread 0x000018b8] debug : Extracting values from query...
2020-05-16 07:17:31.227667 [Thread 0x000018b8] trace : Adding '*(e, i(i(i(e)))) = e' to helper theorems.
2020-05-16 07:17:31.227667 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.227667 [Thread 0x000018b8] debug : Extracting values from query...
2020-05-16 07:17:31.227667 [Thread 0x000018b8] trace : Adding '*(x0, *(*(x1, x2), x3)) = *(x0, *(x1, *(x2, x3)))' to helper theorems.
2020-05-16 07:17:31.227667 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.227667 [Thread 0x000018b8] debug : Extracting values from query...
2020-05-16 07:17:31.227667 [Thread 0x000018b8] trace : Adding 'i(*(e, e)) = *(i(e), e)' to helper theorems.
2020-05-16 07:17:31.227667 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.227667 [Thread 0x000018b8] debug : Extracting values from query...
2020-05-16 07:17:31.227667 [Thread 0x000018b8] trace : Adding '*(i(x1), *(x1, i(*(x0, x1)))) = i(*(x0, x1))' to helper theorems.
2020-05-16 07:17:31.227667 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.227667 [Thread 0x000018b8] debug : Completed database transaction.
2020-05-16 07:17:31.227667 [Thread 0x000018b8] trace : Finishing loading of proof data...
2020-05-16 07:17:31.228702 [Thread 0x000018b8] info : Proof initialisation process loaded 50 theorems from the database. Now picking the best of them...
2020-05-16 07:17:31.228702 [Thread 0x000018b8] trace : Selected "x0 = i(i(i(i(x0))))" as a good statement to help prove the target theorems (utility was 0.5).
2020-05-16 07:17:31.228702 [Thread 0x000018b8] trace : Selected "x0 = x0" as a good statement to help prove the target theorems (utility was 0.5).
2020-05-16 07:17:31.228702 [Thread 0x000018b8] trace : Selected "x0 = i(i(*(x0, e)))" as a good statement to help prove the target theorems (utility was 0.5).
2020-05-16 07:17:31.228702 [Thread 0x000018b8] trace : Selected "x0 = i(i(*(e, x0)))" as a good statement to help prove the target theorems (utility was 0.5).
2020-05-16 07:17:31.228702 [Thread 0x000018b8] trace : Selected "*(x0, *(i(x0), x0)) = x0" as a good statement to help prove the target theorems (utility was 0.333333).
2020-05-16 07:17:31.228702 [Thread 0x000018b8] trace : Selected "i(i(i(e))) = *(i(e), e)" as a good statement to help prove the target theorems (utility was 0.333333).
2020-05-16 07:17:31.228702 [Thread 0x000018b8] trace : Selected "i(x0) = i(i(i(x0)))" as a good statement to help prove the target theorems (utility was 0.333333).
2020-05-16 07:17:31.228702 [Thread 0x000018b8] trace : Selected "*(i(i(*(e, e))), x0) = x0" as a good statement to help prove the target theorems (utility was 0.333333).
2020-05-16 07:17:31.228702 [Thread 0x000018b8] trace : Selected "x0 = *(*(e, i(*(e, e))), x0)" as a good statement to help prove the target theorems (utility was 0.333333).
2020-05-16 07:17:31.228702 [Thread 0x000018b8] trace : Selected "e = i(i(e))" as a good statement to help prove the target theorems (utility was 0.333333).
2020-05-16 07:17:31.228702 [Thread 0x000018b8] info : Proof Process loaded and selected 10 theorems from the database to aid in the proof.
2020-05-16 07:17:31.228702 [Thread 0x000018b8] debug : Finishing SQLite query...
2020-05-16 07:17:31.228702 [Thread 0x000018b8] info : Beginning proof sequence...
2020-05-16 07:17:31.560929 [Thread 0x000018b8] info : Proof Process: Step 1/10 : 0 proof(s) remaining.
2020-05-16 07:17:31.560929 [Thread 0x000018b8] trace : Finished running solver, for 1/10 steps.
2020-05-16 07:17:31.588972 [Thread 0x000018b8] info : Proof process finished proving! Results:
	1 theorem(s) were proven true,
	0 theorem(s) have no proof,
	0 theorem(s) did not finish in the allotted time.
2020-05-16 07:17:31.588972 [Thread 0x000018b8] trace : Proof of "i(i(x0)) = x0" was successful; the statement is true.
2020-05-16 07:17:31.588972 [Thread 0x000018b8] trace : 	Total time taken: 0.328125s
2020-05-16 07:17:31.588972 [Thread 0x000018b8] trace : 	Max nodes in memory: 68
2020-05-16 07:17:31.588972 [Thread 0x000018b8] trace : 	Total node expansions: 333
2020-05-16 07:17:31.588972 [Thread 0x000018b8] trace : Creating Save Proof Results process...
2020-05-16 07:17:31.588972 [Thread 0x000018b8] debug : Building query for query process...
2020-05-16 07:17:31.588972 [Thread 0x000018b8] trace : Setting up result-saving query...
2020-05-16 07:17:31.589829 [Thread 0x000018b8] debug : Obtained query builder.
2020-05-16 07:17:31.593817 [Thread 0x000018b8] debug : Built query "INSERT INTO theorems (stmt, ctx) SELECT 'i(i(x0)) = x0', 1 WHERE NOT EXISTS(SELECT 1 FROM theorems WHERE stmt == 'i(i(x0)) = x0');

WITH my_thm(my_id) AS (SELECT id FROM theorems WHERE stmt = 'i(i(x0)) = x0')
INSERT INTO proof_attempts(thm_id, ss_id, time_cost, max_mem, num_expansions) VALUES ((SELECT my_id FROM my_thm), 3, 0.328125, 68, 333);

WITH my_thm(my_id) AS (SELECT id FROM theorems WHERE stmt = 'i(i(x0)) = x0')
INSERT OR IGNORE INTO proofs (thm_id, proof) SELECT (SELECT my_id FROM my_thm), 'i(i(x3)) = x3
i(*(e, i(x3))) = x3
i(i(i(*(e, i(x3))))) = x3
i(i(i(i(x3)))) = x3' WHERE NOT EXISTS (SELECT 1 FROM proofs WHERE thm_id=(SELECT my_id FROM my_thm));

WITH my_thm(my_id) AS (SELECT id FROM theorems WHERE stmt = 'i(i(x0)) = x0')
, helper_thm(helper_id) AS (SELECT id FROM theorems WHERE stmt = 'i(x0) = i(i(i(x0)))')
INSERT OR IGNORE INTO theorem_usage (target_thm_id, used_thm_id, cnt) VALUES((SELECT my_id FROM my_thm), (SELECT helper_id FROM helper_thm), 1);

".
2020-05-16 07:17:31.594814 [Thread 0x000018b8] trace : Beginning a transaction...
2020-05-16 07:17:31.594814 [Thread 0x000018b8] debug : Successfully built SQLite statement from "INSERT INTO theorems (stmt, ctx) SELECT 'i(i(x0)) = x0', 1 WHERE NOT EXISTS(SELECT 1 FROM theorems WHERE stmt == 'i(i(x0)) = x0');".
2020-05-16 07:17:31.597810 [Thread 0x000018b8] debug : Successfully built SQLite statement from "

WITH my_thm(my_id) AS (SELECT id FROM theorems WHERE stmt = 'i(i(x0)) = x0')
INSERT INTO proof_attempts(thm_id, ss_id, time_cost, max_mem, num_expansions) VALUES ((SELECT my_id FROM my_thm), 3, 0.328125, 68, 333);".
2020-05-16 07:17:31.597810 [Thread 0x000018b8] debug : Successfully built SQLite statement from "

WITH my_thm(my_id) AS (SELECT id FROM theorems WHERE stmt = 'i(i(x0)) = x0')
INSERT OR IGNORE INTO proofs (thm_id, proof) SELECT (SELECT my_id FROM my_thm), 'i(i(x3)) = x3
i(*(e, i(x3))) = x3
i(i(i(*(e, i(x3))))) = x3
i(i(i(i(x3)))) = x3' WHERE NOT EXISTS (SELECT 1 FROM proofs WHERE thm_id=(SELECT my_id FROM my_thm));".
2020-05-16 07:17:31.597810 [Thread 0x000018b8] debug : Successfully built SQLite statement from "

WITH my_thm(my_id) AS (SELECT id FROM theorems WHERE stmt = 'i(i(x0)) = x0')
, helper_thm(helper_id) AS (SELECT id FROM theorems WHERE stmt = 'i(x0) = i(i(i(x0)))')
INSERT OR IGNORE INTO theorem_usage (target_thm_id, used_thm_id, cnt) VALUES((SELECT my_id FROM my_thm), (SELECT helper_id FROM helper_thm), 1);".
2020-05-16 07:17:31.597810 [Thread 0x000018b8] debug : Successfully built query!
2020-05-16 07:17:31.597810 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.598809 [Thread 0x000018b8] debug : Finishing SQLite query...
2020-05-16 07:17:31.598809 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.617755 [Thread 0x000018b8] debug : Finishing SQLite query...
2020-05-16 07:17:31.617755 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.618752 [Thread 0x000018b8] debug : Finishing SQLite query...
2020-05-16 07:17:31.618752 [Thread 0x000018b8] debug : Stepping SQLite statement...
2020-05-16 07:17:31.632713 [Thread 0x000018b8] debug : Finishing SQLite query...
2020-05-16 07:17:31.633711 [Thread 0x000018b8] debug : Completed database transaction.
2020-05-16 07:17:31.633711 [Thread 0x000018b8] trace : Finishing saving proof results data.
2020-05-16 07:17:31.637699 [Thread 0x000018b8] trace : Waiting for worker threads to join...
2020-05-16 07:17:31.637699 [Thread 0x000018b8] trace : Done. Exiting...
2020-05-16 07:17:31.639694 [Thread 0x000018b8] debug : Closing SQLite database...
2020-05-16 07:17:54.385197 [Thread 0x00002c84] trace : Starting up application...
2020-05-16 07:17:54.388157 [Thread 0x00002c84] trace : Successfully loaded database file at "../Data/DB/eqlogic.db"
2020-05-16 07:17:54.388157 [Thread 0x00002c84] debug : Querying SQLite database for model context name "group-theory".
2020-05-16 07:17:54.388157 [Thread 0x00002c84] trace : Beginning a transaction...
2020-05-16 07:17:54.389188 [Thread 0x00002c84] debug : Successfully built SQLite statement from "SELECT filename FROM model_contexts WHERE name = "group-theory";".
2020-05-16 07:17:54.389188 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.389188 [Thread 0x00002c84] debug : Finishing SQLite query...
2020-05-16 07:17:54.389188 [Thread 0x00002c84] debug : Querying SQLite database for model context name "group-theory".
2020-05-16 07:17:54.389188 [Thread 0x00002c84] trace : Beginning a transaction...
2020-05-16 07:17:54.389188 [Thread 0x00002c84] debug : Successfully built SQLite statement from "SELECT ctx_id FROM model_contexts WHERE name = "group-theory";".
2020-05-16 07:17:54.389188 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.390185 [Thread 0x00002c84] debug : Finishing SQLite query...
2020-05-16 07:17:54.390185 [Thread 0x00002c84] trace : Successfully loaded the context file "Group Theory".
2020-05-16 07:17:54.390185 [Thread 0x00002c84] trace : Checking that the model context's axioms are loaded in the database properly, before we begin...
2020-05-16 07:17:54.391180 [Thread 0x00002c84] trace : Beginning a transaction...
2020-05-16 07:17:54.391180 [Thread 0x00002c84] debug : Successfully built SQLite statement from "INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(*(x0, x1), x2) = *(x0, *(x1, x2))', 1);".
2020-05-16 07:17:54.391180 [Thread 0x00002c84] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(*(x0, x1), x2) = *(x0, *(x1, x2))'), 1);".
2020-05-16 07:17:54.391180 [Thread 0x00002c84] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(x0, e) = x0', 1);".
2020-05-16 07:17:54.391180 [Thread 0x00002c84] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(x0, e) = x0'), 1);".
2020-05-16 07:17:54.391180 [Thread 0x00002c84] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(e, x0) = x0', 1);".
2020-05-16 07:17:54.391180 [Thread 0x00002c84] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(e, x0) = x0'), 1);".
2020-05-16 07:17:54.391180 [Thread 0x00002c84] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(x0, i(x0)) = e', 1);".
2020-05-16 07:17:54.391180 [Thread 0x00002c84] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(x0, i(x0)) = e'), 1);".
2020-05-16 07:17:54.391180 [Thread 0x00002c84] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(i(x0), x0) = e', 1);".
2020-05-16 07:17:54.391180 [Thread 0x00002c84] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(i(x0), x0) = e'), 1);".
2020-05-16 07:17:54.391180 [Thread 0x00002c84] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(x0, *(x1, x2)) = *(*(x0, x1), x2)', 1);".
2020-05-16 07:17:54.391180 [Thread 0x00002c84] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(x0, *(x1, x2)) = *(*(x0, x1), x2)'), 1);".
2020-05-16 07:17:54.391180 [Thread 0x00002c84] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(x0, *(x1, x2)) = *(*(x0, x1), x2)', 1);".
2020-05-16 07:17:54.391180 [Thread 0x00002c84] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(x0, *(x1, x2)) = *(*(x0, x1), x2)'), 1);".
2020-05-16 07:17:54.391180 [Thread 0x00002c84] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(x0, *(x1, x2)) = *(*(x0, x1), x2)', 1);".
2020-05-16 07:17:54.391180 [Thread 0x00002c84] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(x0, *(x1, x2)) = *(*(x0, x1), x2)'), 1);".
2020-05-16 07:17:54.391180 [Thread 0x00002c84] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(x0, *(x1, x2)) = *(*(x0, x1), x2)', 1);".
2020-05-16 07:17:54.391180 [Thread 0x00002c84] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(x0, *(x1, x2)) = *(*(x0, x1), x2)'), 1);".
2020-05-16 07:17:54.391180 [Thread 0x00002c84] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(x0, *(x1, x2)) = *(*(x0, x1), x2)', 1);".
2020-05-16 07:17:54.391180 [Thread 0x00002c84] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(x0, *(x1, x2)) = *(*(x0, x1), x2)'), 1);".
2020-05-16 07:17:54.391180 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.400539 [Thread 0x00002c84] debug : Finishing SQLite query...
2020-05-16 07:17:54.400539 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.401346 [Thread 0x00002c84] debug : Finishing SQLite query...
2020-05-16 07:17:54.401346 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.410324 [Thread 0x00002c84] debug : Finishing SQLite query...
2020-05-16 07:17:54.410324 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.410324 [Thread 0x00002c84] debug : Finishing SQLite query...
2020-05-16 07:17:54.410324 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.419614 [Thread 0x00002c84] debug : Finishing SQLite query...
2020-05-16 07:17:54.419614 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.419614 [Thread 0x00002c84] debug : Finishing SQLite query...
2020-05-16 07:17:54.420627 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.430606 [Thread 0x00002c84] debug : Finishing SQLite query...
2020-05-16 07:17:54.430606 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.430606 [Thread 0x00002c84] debug : Finishing SQLite query...
2020-05-16 07:17:54.430606 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.440606 [Thread 0x00002c84] debug : Finishing SQLite query...
2020-05-16 07:17:54.440606 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.440606 [Thread 0x00002c84] debug : Finishing SQLite query...
2020-05-16 07:17:54.440606 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.449828 [Thread 0x00002c84] debug : Finishing SQLite query...
2020-05-16 07:17:54.449828 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.449828 [Thread 0x00002c84] debug : Finishing SQLite query...
2020-05-16 07:17:54.449828 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.458971 [Thread 0x00002c84] debug : Finishing SQLite query...
2020-05-16 07:17:54.458971 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.459973 [Thread 0x00002c84] debug : Finishing SQLite query...
2020-05-16 07:17:54.459973 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.468912 [Thread 0x00002c84] debug : Finishing SQLite query...
2020-05-16 07:17:54.468912 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.468912 [Thread 0x00002c84] debug : Finishing SQLite query...
2020-05-16 07:17:54.468912 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.478886 [Thread 0x00002c84] debug : Finishing SQLite query...
2020-05-16 07:17:54.478886 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.478886 [Thread 0x00002c84] debug : Finishing SQLite query...
2020-05-16 07:17:54.478886 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.488855 [Thread 0x00002c84] debug : Finishing SQLite query...
2020-05-16 07:17:54.488855 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.488855 [Thread 0x00002c84] debug : Finishing SQLite query...
2020-05-16 07:17:54.488855 [Thread 0x00002c84] trace : Successfully checked the axioms are set up in the database properly.
2020-05-16 07:17:54.488855 [Thread 0x00002c84] debug : Querying SQLite database for model context name "ids-informed-limited".
2020-05-16 07:17:54.488855 [Thread 0x00002c84] trace : Beginning a transaction...
2020-05-16 07:17:54.489853 [Thread 0x00002c84] debug : Successfully built SQLite statement from "SELECT filename FROM search_settings WHERE name = "ids-informed-limited";".
2020-05-16 07:17:54.489853 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.489853 [Thread 0x00002c84] debug : Finishing SQLite query...
2020-05-16 07:17:54.489853 [Thread 0x00002c84] debug : Querying SQLite database for model context name "ids-informed-limited".
2020-05-16 07:17:54.489853 [Thread 0x00002c84] trace : Beginning a transaction...
2020-05-16 07:17:54.489853 [Thread 0x00002c84] debug : Successfully built SQLite statement from "SELECT ss_id FROM search_settings WHERE name = "ids-informed-limited";".
2020-05-16 07:17:54.489853 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.489853 [Thread 0x00002c84] debug : Finishing SQLite query...
2020-05-16 07:17:54.490852 [Thread 0x00002c84] trace : Successfully loaded search settings "Informed Limited Iterative-Deepening Solver"
2020-05-16 07:17:54.490852 [Thread 0x00002c84] trace : Successfully loaded statements "i(i(x0))=x0". Creating corresponding proof process...
2020-05-16 07:17:54.490852 [Thread 0x00002c84] trace : Committing main thread...
2020-05-16 07:17:54.490852 [Thread 0x00002c84] trace : Creating proof initialisation process...
2020-05-16 07:17:54.490852 [Thread 0x00002c84] trace : Creating knowledge kernel...
2020-05-16 07:17:54.490852 [Thread 0x00002c84] trace : Creating solver...
2020-05-16 07:17:54.493842 [Thread 0x00002c84] debug : Building query for query process...
2020-05-16 07:17:54.493842 [Thread 0x00002c84] trace : Setting up kernel initialisation query...
2020-05-16 07:17:54.493842 [Thread 0x00002c84] debug : Obtained query builder.
2020-05-16 07:17:54.493842 [Thread 0x00002c84] debug : Built query "SELECT stmt FROM theorems WHERE ctx = 1 AND  EXISTS (SELECT 1 FROM proofs WHERE thm_id=id AND is_axiom = 0) ORDER BY RANDOM() LIMIT 50;".
2020-05-16 07:17:54.493842 [Thread 0x00002c84] trace : Beginning a transaction...
2020-05-16 07:17:54.493842 [Thread 0x00002c84] debug : Successfully built SQLite statement from "SELECT stmt FROM theorems WHERE ctx = 1 AND  EXISTS (SELECT 1 FROM proofs WHERE thm_id=id AND is_axiom = 0) ORDER BY RANDOM() LIMIT 50;".
2020-05-16 07:17:54.493842 [Thread 0x00002c84] debug : Successfully built query!
2020-05-16 07:17:54.493842 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.495837 [Thread 0x00002c84] debug : Extracting values from query...
2020-05-16 07:17:54.495837 [Thread 0x00002c84] trace : Adding 'e = *(*(e, i(i(e))), e)' to helper theorems.
2020-05-16 07:17:54.495837 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.495837 [Thread 0x00002c84] debug : Extracting values from query...
2020-05-16 07:17:54.495837 [Thread 0x00002c84] trace : Adding 'i(i(x0)) = *(e, x0)' to helper theorems.
2020-05-16 07:17:54.495837 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.495837 [Thread 0x00002c84] debug : Extracting values from query...
2020-05-16 07:17:54.495837 [Thread 0x00002c84] trace : Adding '*(i(e), e) = e' to helper theorems.
2020-05-16 07:17:54.495837 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.495837 [Thread 0x00002c84] debug : Extracting values from query...
2020-05-16 07:17:54.495837 [Thread 0x00002c84] trace : Adding '*(x0, *(e, e)) = *(x0, e)' to helper theorems.
2020-05-16 07:17:54.495837 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.495837 [Thread 0x00002c84] debug : Extracting values from query...
2020-05-16 07:17:54.495837 [Thread 0x00002c84] trace : Adding 'e = *(*(e, i(*(*(e, e), x0))), x0)' to helper theorems.
2020-05-16 07:17:54.495837 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.495837 [Thread 0x00002c84] debug : Extracting values from query...
2020-05-16 07:17:54.495837 [Thread 0x00002c84] trace : Adding 'e = i(i(i(i(e))))' to helper theorems.
2020-05-16 07:17:54.495837 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.495837 [Thread 0x00002c84] debug : Extracting values from query...
2020-05-16 07:17:54.495837 [Thread 0x00002c84] trace : Adding 'i(*(x1, x0)) = *(*(i(x0), i(x1)), e)' to helper theorems.
2020-05-16 07:17:54.495837 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.495837 [Thread 0x00002c84] debug : Extracting values from query...
2020-05-16 07:17:54.495837 [Thread 0x00002c84] trace : Adding 'i(i(x0)) = x0' to helper theorems.
2020-05-16 07:17:54.495837 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.495837 [Thread 0x00002c84] debug : Extracting values from query...
2020-05-16 07:17:54.495837 [Thread 0x00002c84] trace : Adding 'i(e) = *(i(i(*(e, i(e)))), e)' to helper theorems.
2020-05-16 07:17:54.495837 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.495837 [Thread 0x00002c84] debug : Extracting values from query...
2020-05-16 07:17:54.495837 [Thread 0x00002c84] trace : Adding 'i(e) = e' to helper theorems.
2020-05-16 07:17:54.495837 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.495837 [Thread 0x00002c84] debug : Extracting values from query...
2020-05-16 07:17:54.495837 [Thread 0x00002c84] trace : Adding 'i(e) = *(e, i(e))' to helper theorems.
2020-05-16 07:17:54.495837 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.495837 [Thread 0x00002c84] debug : Extracting values from query...
2020-05-16 07:17:54.495837 [Thread 0x00002c84] trace : Adding '*(x0, *(i(x0), x0)) = x0' to helper theorems.
2020-05-16 07:17:54.495837 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.495837 [Thread 0x00002c84] debug : Extracting values from query...
2020-05-16 07:17:54.495837 [Thread 0x00002c84] trace : Adding 'i(e) = *(e, e)' to helper theorems.
2020-05-16 07:17:54.495837 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.495837 [Thread 0x00002c84] debug : Extracting values from query...
2020-05-16 07:17:54.495837 [Thread 0x00002c84] trace : Adding 'e = e' to helper theorems.
2020-05-16 07:17:54.495837 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.495837 [Thread 0x00002c84] debug : Extracting values from query...
2020-05-16 07:17:54.495837 [Thread 0x00002c84] trace : Adding '*(i(i(*(e, e))), x0) = x0' to helper theorems.
2020-05-16 07:17:54.495837 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.495837 [Thread 0x00002c84] debug : Extracting values from query...
2020-05-16 07:17:54.495837 [Thread 0x00002c84] trace : Adding 'x0 = i(i(*(x0, e)))' to helper theorems.
2020-05-16 07:17:54.495837 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.495837 [Thread 0x00002c84] debug : Extracting values from query...
2020-05-16 07:17:54.495837 [Thread 0x00002c84] trace : Adding 'i(*(i(e), e)) = e' to helper theorems.
2020-05-16 07:17:54.495837 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.495837 [Thread 0x00002c84] debug : Extracting values from query...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] trace : Adding '*(i(e), x0) = x0' to helper theorems.
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Extracting values from query...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] trace : Adding '*(e, e) = e' to helper theorems.
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Extracting values from query...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] trace : Adding 'i(e) = *(i(e), e)' to helper theorems.
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Extracting values from query...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] trace : Adding 'i(i(e)) = *(i(*(e, e)), e)' to helper theorems.
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Extracting values from query...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] trace : Adding 'i(*(x1, x0)) = *(*(i(x0), x0), i(*(x1, x0)))' to helper theorems.
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Extracting values from query...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] trace : Adding '*(e, i(*(e, e))) = e' to helper theorems.
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Extracting values from query...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] trace : Adding 'x0 = i(i(*(e, x0)))' to helper theorems.
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Extracting values from query...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] trace : Adding 'e = *(*(i(e), e), e)' to helper theorems.
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Extracting values from query...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] trace : Adding 'i(i(e)) = *(e, i(e))' to helper theorems.
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Extracting values from query...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] trace : Adding 'i(*(e, e)) = e' to helper theorems.
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Extracting values from query...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] trace : Adding 'e = *(e, *(*(e, i(*(e, e))), e))' to helper theorems.
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Extracting values from query...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] trace : Adding 'e = i(*(e, e))' to helper theorems.
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Extracting values from query...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] trace : Adding 'x0 = *(x0, e)' to helper theorems.
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Extracting values from query...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] trace : Adding 'i(e) = *(*(e, e), i(e))' to helper theorems.
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Extracting values from query...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] trace : Adding 'e = i(e)' to helper theorems.
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Extracting values from query...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] trace : Adding '*(e, *(i(i(e)), e)) = i(e)' to helper theorems.
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Extracting values from query...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] trace : Adding 'x0 = *(*(e, i(*(e, e))), x0)' to helper theorems.
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Extracting values from query...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] trace : Adding 'i(i(i(e))) = *(e, i(i(i(e))))' to helper theorems.
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Extracting values from query...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] trace : Adding 'e = *(*(e, i(e)), e)' to helper theorems.
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Extracting values from query...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] trace : Adding 'e = i(*(i(e), e))' to helper theorems.
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Extracting values from query...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] trace : Adding '*(i(e), *(e, e)) = e' to helper theorems.
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Extracting values from query...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] trace : Adding '*(e, *(*(e, x0), i(x0))) = e' to helper theorems.
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Extracting values from query...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] trace : Adding 'x0 = *(e, x0)' to helper theorems.
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Extracting values from query...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] trace : Adding '*(i(x1), *(x1, i(*(x0, x1)))) = i(*(x0, x1))' to helper theorems.
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Extracting values from query...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] trace : Adding 'i(*(x0, i(x0))) = e' to helper theorems.
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Extracting values from query...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] trace : Adding '*(x0, *(i(x0), i(i(x0)))) = x0' to helper theorems.
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Extracting values from query...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] trace : Adding '*(*(e, e), e) = e' to helper theorems.
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Extracting values from query...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] trace : Adding 'i(i(e)) = i(e)' to helper theorems.
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Extracting values from query...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] trace : Adding 'e = *(i(x0), *(e, x0))' to helper theorems.
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Extracting values from query...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] trace : Adding 'e = i(*(e, i(i(i(e)))))' to helper theorems.
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Extracting values from query...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] trace : Adding 'e = *(i(x0), x0)' to helper theorems.
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Extracting values from query...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] trace : Adding 'e = *(x0, i(*(e, x0)))' to helper theorems.
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Extracting values from query...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] trace : Adding 'i(x0) = i(i(i(x0)))' to helper theorems.
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:54.496834 [Thread 0x00002c84] debug : Completed database transaction.
2020-05-16 07:17:54.496834 [Thread 0x00002c84] trace : Finishing loading of proof data...
2020-05-16 07:17:54.498828 [Thread 0x00002c84] info : Proof initialisation process loaded 50 theorems from the database. Now picking the best of them...
2020-05-16 07:17:54.500823 [Thread 0x00002c84] trace : Selected "i(i(x0)) = x0" as a good statement to help prove the target theorems (utility was 1).
2020-05-16 07:17:54.500823 [Thread 0x00002c84] trace : Selected "x0 = i(i(*(e, x0)))" as a good statement to help prove the target theorems (utility was 0.5).
2020-05-16 07:17:54.500823 [Thread 0x00002c84] trace : Selected "x0 = i(i(*(x0, e)))" as a good statement to help prove the target theorems (utility was 0.5).
2020-05-16 07:17:54.500823 [Thread 0x00002c84] trace : Selected "i(i(x0)) = *(e, x0)" as a good statement to help prove the target theorems (utility was 0.5).
2020-05-16 07:17:54.500823 [Thread 0x00002c84] trace : Selected "i(x0) = i(i(i(x0)))" as a good statement to help prove the target theorems (utility was 0.333333).
2020-05-16 07:17:54.500823 [Thread 0x00002c84] trace : Selected "i(i(e)) = i(e)" as a good statement to help prove the target theorems (utility was 0.333333).
2020-05-16 07:17:54.500823 [Thread 0x00002c84] trace : Selected "*(x0, *(i(x0), i(i(x0)))) = x0" as a good statement to help prove the target theorems (utility was 0.333333).
2020-05-16 07:17:54.500823 [Thread 0x00002c84] trace : Selected "x0 = *(e, x0)" as a good statement to help prove the target theorems (utility was 0.333333).
2020-05-16 07:17:54.500823 [Thread 0x00002c84] trace : Selected "i(i(i(e))) = *(e, i(i(i(e))))" as a good statement to help prove the target theorems (utility was 0.333333).
2020-05-16 07:17:54.500823 [Thread 0x00002c84] trace : Selected "x0 = *(*(e, i(*(e, e))), x0)" as a good statement to help prove the target theorems (utility was 0.333333).
2020-05-16 07:17:54.500823 [Thread 0x00002c84] info : Proof Process loaded and selected 10 theorems from the database to aid in the proof.
2020-05-16 07:17:54.500823 [Thread 0x00002c84] debug : Finishing SQLite query...
2020-05-16 07:17:54.500823 [Thread 0x00002c84] info : Beginning proof sequence...
2020-05-16 07:17:54.976549 [Thread 0x00002c84] info : Proof Process: Step 1/10 : 1 proof(s) remaining.
2020-05-16 07:17:55.323240 [Thread 0x00002c84] info : Proof Process: Step 2/10 : 1 proof(s) remaining.
2020-05-16 07:17:55.332253 [Thread 0x00002c84] info : Proof Process: Step 3/10 : 0 proof(s) remaining.
2020-05-16 07:17:55.332253 [Thread 0x00002c84] trace : Finished running solver, for 3/10 steps.
2020-05-16 07:17:55.332253 [Thread 0x00002c84] info : Proof process finished proving! Results:
	1 theorem(s) were proven true,
	0 theorem(s) have no proof,
	0 theorem(s) did not finish in the allotted time.
2020-05-16 07:17:55.332253 [Thread 0x00002c84] trace : Proof of "i(i(x0)) = x0" was successful; the statement is true.
2020-05-16 07:17:55.332253 [Thread 0x00002c84] trace : 	Total time taken: 0.84375s
2020-05-16 07:17:55.332253 [Thread 0x00002c84] trace : 	Max nodes in memory: 88
2020-05-16 07:17:55.332253 [Thread 0x00002c84] trace : 	Total node expansions: 1014
2020-05-16 07:17:55.332253 [Thread 0x00002c84] trace : Creating Save Proof Results process...
2020-05-16 07:17:55.332253 [Thread 0x00002c84] debug : Building query for query process...
2020-05-16 07:17:55.332253 [Thread 0x00002c84] trace : Setting up result-saving query...
2020-05-16 07:17:55.332253 [Thread 0x00002c84] debug : Obtained query builder.
2020-05-16 07:17:55.334212 [Thread 0x00002c84] debug : Built query "INSERT INTO theorems (stmt, ctx) SELECT 'i(i(x0)) = x0', 1 WHERE NOT EXISTS(SELECT 1 FROM theorems WHERE stmt == 'i(i(x0)) = x0');

WITH my_thm(my_id) AS (SELECT id FROM theorems WHERE stmt = 'i(i(x0)) = x0')
INSERT INTO proof_attempts(thm_id, ss_id, time_cost, max_mem, num_expansions) VALUES ((SELECT my_id FROM my_thm), 3, 0.84375, 88, 1014);

WITH my_thm(my_id) AS (SELECT id FROM theorems WHERE stmt = 'i(i(x0)) = x0')
INSERT OR IGNORE INTO proofs (thm_id, proof) SELECT (SELECT my_id FROM my_thm), 'i(i(x3)) = x3
i(*(e, i(x3))) = x3
i(i(i(i(x3)))) = x3
i(i(i(i(x3)))) = i(i(x3))' WHERE NOT EXISTS (SELECT 1 FROM proofs WHERE thm_id=(SELECT my_id FROM my_thm));

WITH my_thm(my_id) AS (SELECT id FROM theorems WHERE stmt = 'i(i(x0)) = x0')
, helper_thm(helper_id) AS (SELECT id FROM theorems WHERE stmt = 'i(i(x0)) = x0')
INSERT OR IGNORE INTO theorem_usage (target_thm_id, used_thm_id, cnt) VALUES((SELECT my_id FROM my_thm), (SELECT helper_id FROM helper_thm), 4);

WITH my_thm(my_id) AS (SELECT id FROM theorems WHERE stmt = 'i(i(x0)) = x0')
, helper_thm(helper_id) AS (SELECT id FROM theorems WHERE stmt = 'i(i(x0)) = *(e, x0)')
INSERT OR IGNORE INTO theorem_usage (target_thm_id, used_thm_id, cnt) VALUES((SELECT my_id FROM my_thm), (SELECT helper_id FROM helper_thm), 1);

WITH my_thm(my_id) AS (SELECT id FROM theorems WHERE stmt = 'i(i(x0)) = x0')
, helper_thm(helper_id) AS (SELECT id FROM theorems WHERE stmt = 'i(x0) = i(i(i(x0)))')
INSERT OR IGNORE INTO theorem_usage (target_thm_id, used_thm_id, cnt) VALUES((SELECT my_id FROM my_thm), (SELECT helper_id FROM helper_thm), 2);

WITH my_thm(my_id) AS (SELECT id FROM theorems WHERE stmt = 'i(i(x0)) = x0')
, helper_thm(helper_id) AS (SELECT id FROM theorems WHERE stmt = 'x0 = *(e, x0)')
INSERT OR IGNORE INTO theorem_usage (target_thm_id, used_thm_id, cnt) VALUES((SELECT my_id FROM my_thm), (SELECT helper_id FROM helper_thm), 1);

".
2020-05-16 07:17:55.334212 [Thread 0x00002c84] trace : Beginning a transaction...
2020-05-16 07:17:55.334212 [Thread 0x00002c84] debug : Successfully built SQLite statement from "INSERT INTO theorems (stmt, ctx) SELECT 'i(i(x0)) = x0', 1 WHERE NOT EXISTS(SELECT 1 FROM theorems WHERE stmt == 'i(i(x0)) = x0');".
2020-05-16 07:17:55.334212 [Thread 0x00002c84] debug : Successfully built SQLite statement from "

WITH my_thm(my_id) AS (SELECT id FROM theorems WHERE stmt = 'i(i(x0)) = x0')
INSERT INTO proof_attempts(thm_id, ss_id, time_cost, max_mem, num_expansions) VALUES ((SELECT my_id FROM my_thm), 3, 0.84375, 88, 1014);".
2020-05-16 07:17:55.334212 [Thread 0x00002c84] debug : Successfully built SQLite statement from "

WITH my_thm(my_id) AS (SELECT id FROM theorems WHERE stmt = 'i(i(x0)) = x0')
INSERT OR IGNORE INTO proofs (thm_id, proof) SELECT (SELECT my_id FROM my_thm), 'i(i(x3)) = x3
i(*(e, i(x3))) = x3
i(i(i(i(x3)))) = x3
i(i(i(i(x3)))) = i(i(x3))' WHERE NOT EXISTS (SELECT 1 FROM proofs WHERE thm_id=(SELECT my_id FROM my_thm));".
2020-05-16 07:17:55.335211 [Thread 0x00002c84] debug : Successfully built SQLite statement from "

WITH my_thm(my_id) AS (SELECT id FROM theorems WHERE stmt = 'i(i(x0)) = x0')
, helper_thm(helper_id) AS (SELECT id FROM theorems WHERE stmt = 'i(i(x0)) = x0')
INSERT OR IGNORE INTO theorem_usage (target_thm_id, used_thm_id, cnt) VALUES((SELECT my_id FROM my_thm), (SELECT helper_id FROM helper_thm), 4);".
2020-05-16 07:17:55.335211 [Thread 0x00002c84] debug : Successfully built SQLite statement from "

WITH my_thm(my_id) AS (SELECT id FROM theorems WHERE stmt = 'i(i(x0)) = x0')
, helper_thm(helper_id) AS (SELECT id FROM theorems WHERE stmt = 'i(i(x0)) = *(e, x0)')
INSERT OR IGNORE INTO theorem_usage (target_thm_id, used_thm_id, cnt) VALUES((SELECT my_id FROM my_thm), (SELECT helper_id FROM helper_thm), 1);".
2020-05-16 07:17:55.335211 [Thread 0x00002c84] debug : Successfully built SQLite statement from "

WITH my_thm(my_id) AS (SELECT id FROM theorems WHERE stmt = 'i(i(x0)) = x0')
, helper_thm(helper_id) AS (SELECT id FROM theorems WHERE stmt = 'i(x0) = i(i(i(x0)))')
INSERT OR IGNORE INTO theorem_usage (target_thm_id, used_thm_id, cnt) VALUES((SELECT my_id FROM my_thm), (SELECT helper_id FROM helper_thm), 2);".
2020-05-16 07:17:55.335211 [Thread 0x00002c84] debug : Successfully built SQLite statement from "

WITH my_thm(my_id) AS (SELECT id FROM theorems WHERE stmt = 'i(i(x0)) = x0')
, helper_thm(helper_id) AS (SELECT id FROM theorems WHERE stmt = 'x0 = *(e, x0)')
INSERT OR IGNORE INTO theorem_usage (target_thm_id, used_thm_id, cnt) VALUES((SELECT my_id FROM my_thm), (SELECT helper_id FROM helper_thm), 1);".
2020-05-16 07:17:55.335211 [Thread 0x00002c84] debug : Successfully built query!
2020-05-16 07:17:55.335211 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:55.335211 [Thread 0x00002c84] debug : Finishing SQLite query...
2020-05-16 07:17:55.335211 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:55.355651 [Thread 0x00002c84] debug : Finishing SQLite query...
2020-05-16 07:17:55.355651 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:55.355651 [Thread 0x00002c84] debug : Finishing SQLite query...
2020-05-16 07:17:55.355651 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:55.356647 [Thread 0x00002c84] debug : Finishing SQLite query...
2020-05-16 07:17:55.356647 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:55.365619 [Thread 0x00002c84] debug : Finishing SQLite query...
2020-05-16 07:17:55.365619 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:55.366619 [Thread 0x00002c84] debug : Finishing SQLite query...
2020-05-16 07:17:55.366619 [Thread 0x00002c84] debug : Stepping SQLite statement...
2020-05-16 07:17:55.375647 [Thread 0x00002c84] debug : Finishing SQLite query...
2020-05-16 07:17:55.375647 [Thread 0x00002c84] debug : Completed database transaction.
2020-05-16 07:17:55.375647 [Thread 0x00002c84] trace : Finishing saving proof results data.
2020-05-16 07:17:55.379633 [Thread 0x00002c84] trace : Waiting for worker threads to join...
2020-05-16 07:17:55.379633 [Thread 0x00002c84] trace : Done. Exiting...
2020-05-16 07:17:55.379633 [Thread 0x00002c84] debug : Closing SQLite database...
2020-05-16 07:19:06.426533 [Thread 0x00001828] trace : Starting up application...
2020-05-16 07:19:06.430523 [Thread 0x00001828] trace : Successfully loaded database file at "../Data/DB/eqlogic.db"
2020-05-16 07:19:06.430523 [Thread 0x00001828] debug : Querying SQLite database for model context name "group-theory".
2020-05-16 07:19:06.430523 [Thread 0x00001828] trace : Beginning a transaction...
2020-05-16 07:19:06.433517 [Thread 0x00001828] debug : Successfully built SQLite statement from "SELECT filename FROM model_contexts WHERE name = "group-theory";".
2020-05-16 07:19:06.433517 [Thread 0x00001828] debug : Stepping SQLite statement...
2020-05-16 07:19:06.434514 [Thread 0x00001828] debug : Finishing SQLite query...
2020-05-16 07:19:06.434514 [Thread 0x00001828] debug : Querying SQLite database for model context name "group-theory".
2020-05-16 07:19:06.434514 [Thread 0x00001828] trace : Beginning a transaction...
2020-05-16 07:19:06.434514 [Thread 0x00001828] debug : Successfully built SQLite statement from "SELECT ctx_id FROM model_contexts WHERE name = "group-theory";".
2020-05-16 07:19:06.434514 [Thread 0x00001828] debug : Stepping SQLite statement...
2020-05-16 07:19:06.434514 [Thread 0x00001828] debug : Finishing SQLite query...
2020-05-16 07:19:06.435509 [Thread 0x00001828] trace : Successfully loaded the context file "Group Theory".
2020-05-16 07:19:06.435509 [Thread 0x00001828] trace : Checking that the model context's axioms are loaded in the database properly, before we begin...
2020-05-16 07:19:06.436546 [Thread 0x00001828] trace : Beginning a transaction...
2020-05-16 07:19:06.436546 [Thread 0x00001828] debug : Successfully built SQLite statement from "INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(*(x0, x1), x2) = *(x0, *(x1, x2))', 1);".
2020-05-16 07:19:06.437541 [Thread 0x00001828] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(*(x0, x1), x2) = *(x0, *(x1, x2))'), 1);".
2020-05-16 07:19:06.437541 [Thread 0x00001828] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(x0, e) = x0', 1);".
2020-05-16 07:19:06.437614 [Thread 0x00001828] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(x0, e) = x0'), 1);".
2020-05-16 07:19:06.437614 [Thread 0x00001828] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(e, x0) = x0', 1);".
2020-05-16 07:19:06.437614 [Thread 0x00001828] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(e, x0) = x0'), 1);".
2020-05-16 07:19:06.437614 [Thread 0x00001828] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(x0, i(x0)) = e', 1);".
2020-05-16 07:19:06.437614 [Thread 0x00001828] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(x0, i(x0)) = e'), 1);".
2020-05-16 07:19:06.437614 [Thread 0x00001828] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(i(x0), x0) = e', 1);".
2020-05-16 07:19:06.437614 [Thread 0x00001828] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(i(x0), x0) = e'), 1);".
2020-05-16 07:19:06.437614 [Thread 0x00001828] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(x0, *(x1, x2)) = *(*(x0, x1), x2)', 1);".
2020-05-16 07:19:06.437614 [Thread 0x00001828] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(x0, *(x1, x2)) = *(*(x0, x1), x2)'), 1);".
2020-05-16 07:19:06.437614 [Thread 0x00001828] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(x0, *(x1, x2)) = *(*(x0, x1), x2)', 1);".
2020-05-16 07:19:06.437614 [Thread 0x00001828] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(x0, *(x1, x2)) = *(*(x0, x1), x2)'), 1);".
2020-05-16 07:19:06.437614 [Thread 0x00001828] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(x0, *(x1, x2)) = *(*(x0, x1), x2)', 1);".
2020-05-16 07:19:06.438542 [Thread 0x00001828] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(x0, *(x1, x2)) = *(*(x0, x1), x2)'), 1);".
2020-05-16 07:19:06.438542 [Thread 0x00001828] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(x0, *(x1, x2)) = *(*(x0, x1), x2)', 1);".
2020-05-16 07:19:06.438542 [Thread 0x00001828] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(x0, *(x1, x2)) = *(*(x0, x1), x2)'), 1);".
2020-05-16 07:19:06.438542 [Thread 0x00001828] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(x0, *(x1, x2)) = *(*(x0, x1), x2)', 1);".
2020-05-16 07:19:06.438542 [Thread 0x00001828] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(x0, *(x1, x2)) = *(*(x0, x1), x2)'), 1);".
2020-05-16 07:19:06.438542 [Thread 0x00001828] debug : Stepping SQLite statement...
2020-05-16 07:19:06.479862 [Thread 0x00001828] debug : Finishing SQLite query...
2020-05-16 07:19:06.479862 [Thread 0x00001828] debug : Stepping SQLite statement...
2020-05-16 07:19:06.480862 [Thread 0x00001828] debug : Finishing SQLite query...
2020-05-16 07:19:06.480862 [Thread 0x00001828] debug : Stepping SQLite statement...
2020-05-16 07:19:06.490834 [Thread 0x00001828] debug : Finishing SQLite query...
2020-05-16 07:19:06.490834 [Thread 0x00001828] debug : Stepping SQLite statement...
2020-05-16 07:19:06.490834 [Thread 0x00001828] debug : Finishing SQLite query...
2020-05-16 07:19:06.490834 [Thread 0x00001828] debug : Stepping SQLite statement...
2020-05-16 07:19:06.501803 [Thread 0x00001828] debug : Finishing SQLite query...
2020-05-16 07:19:06.501803 [Thread 0x00001828] debug : Stepping SQLite statement...
2020-05-16 07:19:06.501803 [Thread 0x00001828] debug : Finishing SQLite query...
2020-05-16 07:19:06.501803 [Thread 0x00001828] debug : Stepping SQLite statement...
2020-05-16 07:19:06.511796 [Thread 0x00001828] debug : Finishing SQLite query...
2020-05-16 07:19:06.511796 [Thread 0x00001828] debug : Stepping SQLite statement...
2020-05-16 07:19:06.512777 [Thread 0x00001828] debug : Finishing SQLite query...
2020-05-16 07:19:06.512777 [Thread 0x00001828] debug : Stepping SQLite statement...
2020-05-16 07:19:06.522749 [Thread 0x00001828] debug : Finishing SQLite query...
2020-05-16 07:19:06.522749 [Thread 0x00001828] debug : Stepping SQLite statement...
2020-05-16 07:19:06.522749 [Thread 0x00001828] debug : Finishing SQLite query...
2020-05-16 07:19:06.522749 [Thread 0x00001828] debug : Stepping SQLite statement...
2020-05-16 07:19:06.532719 [Thread 0x00001828] debug : Finishing SQLite query...
2020-05-16 07:19:06.532719 [Thread 0x00001828] debug : Stepping SQLite statement...
2020-05-16 07:19:06.533720 [Thread 0x00001828] debug : Finishing SQLite query...
2020-05-16 07:19:06.533720 [Thread 0x00001828] debug : Stepping SQLite statement...
2020-05-16 07:19:06.544726 [Thread 0x00001828] debug : Finishing SQLite query...
2020-05-16 07:19:06.544726 [Thread 0x00001828] debug : Stepping SQLite statement...
2020-05-16 07:19:06.544726 [Thread 0x00001828] debug : Finishing SQLite query...
2020-05-16 07:19:06.544726 [Thread 0x00001828] debug : Stepping SQLite statement...
2020-05-16 07:19:06.554717 [Thread 0x00001828] debug : Finishing SQLite query...
2020-05-16 07:19:06.554717 [Thread 0x00001828] debug : Stepping SQLite statement...
2020-05-16 07:19:06.555749 [Thread 0x00001828] debug : Finishing SQLite query...
2020-05-16 07:19:06.555749 [Thread 0x00001828] debug : Stepping SQLite statement...
2020-05-16 07:19:06.566874 [Thread 0x00001828] debug : Finishing SQLite query...
2020-05-16 07:19:06.566874 [Thread 0x00001828] debug : Stepping SQLite statement...
2020-05-16 07:19:06.566874 [Thread 0x00001828] debug : Finishing SQLite query...
2020-05-16 07:19:06.566874 [Thread 0x00001828] debug : Stepping SQLite statement...
2020-05-16 07:19:06.578913 [Thread 0x00001828] debug : Finishing SQLite query...
2020-05-16 07:19:06.578913 [Thread 0x00001828] debug : Stepping SQLite statement...
2020-05-16 07:19:06.578913 [Thread 0x00001828] debug : Finishing SQLite query...
2020-05-16 07:19:06.578913 [Thread 0x00001828] trace : Successfully checked the axioms are set up in the database properly.
2020-05-16 07:19:06.578913 [Thread 0x00001828] debug : Querying SQLite database for model context name "ids-informed-limited".
2020-05-16 07:19:06.578913 [Thread 0x00001828] trace : Beginning a transaction...
2020-05-16 07:19:06.578913 [Thread 0x00001828] debug : Successfully built SQLite statement from "SELECT filename FROM search_settings WHERE name = "ids-informed-limited";".
2020-05-16 07:19:06.578913 [Thread 0x00001828] debug : Stepping SQLite statement...
2020-05-16 07:19:06.578913 [Thread 0x00001828] debug : Finishing SQLite query...
2020-05-16 07:19:06.578913 [Thread 0x00001828] debug : Querying SQLite database for model context name "ids-informed-limited".
2020-05-16 07:19:06.578913 [Thread 0x00001828] trace : Beginning a transaction...
2020-05-16 07:19:06.578913 [Thread 0x00001828] debug : Successfully built SQLite statement from "SELECT ss_id FROM search_settings WHERE name = "ids-informed-limited";".
2020-05-16 07:19:06.578913 [Thread 0x00001828] debug : Stepping SQLite statement...
2020-05-16 07:19:06.579912 [Thread 0x00001828] debug : Finishing SQLite query...
2020-05-16 07:19:06.579912 [Thread 0x00001828] trace : Successfully loaded search settings "Informed Limited Iterative-Deepening Solver"
2020-05-16 07:19:06.580910 [Thread 0x00001828] error : Failed to load statements: "i(*(x0,". Check syntax and types.
2020-05-16 07:19:06.580910 [Thread 0x00001828] error : Failed to load proof task: 'i(*(x0,'
2020-05-16 07:19:06.580910 [Thread 0x00001828] debug : Closing SQLite database...
2020-05-16 07:19:32.947957 [Thread 0x000039ac] trace : Starting up application...
2020-05-16 07:19:32.949953 [Thread 0x000039ac] trace : Successfully loaded database file at "../Data/DB/eqlogic.db"
2020-05-16 07:19:32.949953 [Thread 0x000039ac] debug : Querying SQLite database for model context name "group-theory".
2020-05-16 07:19:32.949953 [Thread 0x000039ac] trace : Beginning a transaction...
2020-05-16 07:19:32.950949 [Thread 0x000039ac] debug : Successfully built SQLite statement from "SELECT filename FROM model_contexts WHERE name = "group-theory";".
2020-05-16 07:19:32.950949 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:32.950949 [Thread 0x000039ac] debug : Finishing SQLite query...
2020-05-16 07:19:32.950949 [Thread 0x000039ac] debug : Querying SQLite database for model context name "group-theory".
2020-05-16 07:19:32.950949 [Thread 0x000039ac] trace : Beginning a transaction...
2020-05-16 07:19:32.950949 [Thread 0x000039ac] debug : Successfully built SQLite statement from "SELECT ctx_id FROM model_contexts WHERE name = "group-theory";".
2020-05-16 07:19:32.950949 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:32.951945 [Thread 0x000039ac] debug : Finishing SQLite query...
2020-05-16 07:19:32.951945 [Thread 0x000039ac] trace : Successfully loaded the context file "Group Theory".
2020-05-16 07:19:32.951945 [Thread 0x000039ac] trace : Checking that the model context's axioms are loaded in the database properly, before we begin...
2020-05-16 07:19:32.952944 [Thread 0x000039ac] trace : Beginning a transaction...
2020-05-16 07:19:32.952944 [Thread 0x000039ac] debug : Successfully built SQLite statement from "INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(*(x0, x1), x2) = *(x0, *(x1, x2))', 1);".
2020-05-16 07:19:32.952944 [Thread 0x000039ac] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(*(x0, x1), x2) = *(x0, *(x1, x2))'), 1);".
2020-05-16 07:19:32.952944 [Thread 0x000039ac] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(x0, e) = x0', 1);".
2020-05-16 07:19:32.952944 [Thread 0x000039ac] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(x0, e) = x0'), 1);".
2020-05-16 07:19:32.952944 [Thread 0x000039ac] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(e, x0) = x0', 1);".
2020-05-16 07:19:32.952944 [Thread 0x000039ac] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(e, x0) = x0'), 1);".
2020-05-16 07:19:32.952944 [Thread 0x000039ac] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(x0, i(x0)) = e', 1);".
2020-05-16 07:19:32.952944 [Thread 0x000039ac] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(x0, i(x0)) = e'), 1);".
2020-05-16 07:19:32.952944 [Thread 0x000039ac] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(i(x0), x0) = e', 1);".
2020-05-16 07:19:32.952944 [Thread 0x000039ac] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(i(x0), x0) = e'), 1);".
2020-05-16 07:19:32.952944 [Thread 0x000039ac] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(x0, *(x1, x2)) = *(*(x0, x1), x2)', 1);".
2020-05-16 07:19:32.952944 [Thread 0x000039ac] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(x0, *(x1, x2)) = *(*(x0, x1), x2)'), 1);".
2020-05-16 07:19:32.952944 [Thread 0x000039ac] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(x0, *(x1, x2)) = *(*(x0, x1), x2)', 1);".
2020-05-16 07:19:32.952944 [Thread 0x000039ac] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(x0, *(x1, x2)) = *(*(x0, x1), x2)'), 1);".
2020-05-16 07:19:32.952944 [Thread 0x000039ac] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(x0, *(x1, x2)) = *(*(x0, x1), x2)', 1);".
2020-05-16 07:19:32.952944 [Thread 0x000039ac] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(x0, *(x1, x2)) = *(*(x0, x1), x2)'), 1);".
2020-05-16 07:19:32.952944 [Thread 0x000039ac] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(x0, *(x1, x2)) = *(*(x0, x1), x2)', 1);".
2020-05-16 07:19:32.952944 [Thread 0x000039ac] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(x0, *(x1, x2)) = *(*(x0, x1), x2)'), 1);".
2020-05-16 07:19:32.952944 [Thread 0x000039ac] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(x0, *(x1, x2)) = *(*(x0, x1), x2)', 1);".
2020-05-16 07:19:32.952944 [Thread 0x000039ac] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(x0, *(x1, x2)) = *(*(x0, x1), x2)'), 1);".
2020-05-16 07:19:32.952944 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:32.965874 [Thread 0x000039ac] debug : Finishing SQLite query...
2020-05-16 07:19:32.965874 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:32.965874 [Thread 0x000039ac] debug : Finishing SQLite query...
2020-05-16 07:19:32.965874 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:32.976844 [Thread 0x000039ac] debug : Finishing SQLite query...
2020-05-16 07:19:32.976844 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:32.977846 [Thread 0x000039ac] debug : Finishing SQLite query...
2020-05-16 07:19:32.977846 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:32.988812 [Thread 0x000039ac] debug : Finishing SQLite query...
2020-05-16 07:19:32.988812 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:32.989811 [Thread 0x000039ac] debug : Finishing SQLite query...
2020-05-16 07:19:32.989811 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:32.999782 [Thread 0x000039ac] debug : Finishing SQLite query...
2020-05-16 07:19:32.999782 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.000780 [Thread 0x000039ac] debug : Finishing SQLite query...
2020-05-16 07:19:33.000780 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.011752 [Thread 0x000039ac] debug : Finishing SQLite query...
2020-05-16 07:19:33.011752 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.011752 [Thread 0x000039ac] debug : Finishing SQLite query...
2020-05-16 07:19:33.011752 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.022720 [Thread 0x000039ac] debug : Finishing SQLite query...
2020-05-16 07:19:33.022720 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.023719 [Thread 0x000039ac] debug : Finishing SQLite query...
2020-05-16 07:19:33.023719 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.033692 [Thread 0x000039ac] debug : Finishing SQLite query...
2020-05-16 07:19:33.033692 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.033692 [Thread 0x000039ac] debug : Finishing SQLite query...
2020-05-16 07:19:33.033692 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.043678 [Thread 0x000039ac] debug : Finishing SQLite query...
2020-05-16 07:19:33.043678 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.043678 [Thread 0x000039ac] debug : Finishing SQLite query...
2020-05-16 07:19:33.043678 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.053837 [Thread 0x000039ac] debug : Finishing SQLite query...
2020-05-16 07:19:33.053837 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.054835 [Thread 0x000039ac] debug : Finishing SQLite query...
2020-05-16 07:19:33.054835 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.065805 [Thread 0x000039ac] debug : Finishing SQLite query...
2020-05-16 07:19:33.065805 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.065805 [Thread 0x000039ac] debug : Finishing SQLite query...
2020-05-16 07:19:33.065805 [Thread 0x000039ac] trace : Successfully checked the axioms are set up in the database properly.
2020-05-16 07:19:33.065805 [Thread 0x000039ac] debug : Querying SQLite database for model context name "ids-informed-limited".
2020-05-16 07:19:33.065805 [Thread 0x000039ac] trace : Beginning a transaction...
2020-05-16 07:19:33.065805 [Thread 0x000039ac] debug : Successfully built SQLite statement from "SELECT filename FROM search_settings WHERE name = "ids-informed-limited";".
2020-05-16 07:19:33.065805 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.065805 [Thread 0x000039ac] debug : Finishing SQLite query...
2020-05-16 07:19:33.065805 [Thread 0x000039ac] debug : Querying SQLite database for model context name "ids-informed-limited".
2020-05-16 07:19:33.065805 [Thread 0x000039ac] trace : Beginning a transaction...
2020-05-16 07:19:33.065805 [Thread 0x000039ac] debug : Successfully built SQLite statement from "SELECT ss_id FROM search_settings WHERE name = "ids-informed-limited";".
2020-05-16 07:19:33.065805 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.065805 [Thread 0x000039ac] debug : Finishing SQLite query...
2020-05-16 07:19:33.066803 [Thread 0x000039ac] trace : Successfully loaded search settings "Informed Limited Iterative-Deepening Solver"
2020-05-16 07:19:33.066803 [Thread 0x000039ac] trace : Successfully loaded statements " i(*(x0, x1)) = *(i(x1), i(x0)) ". Creating corresponding proof process...
2020-05-16 07:19:33.066803 [Thread 0x000039ac] trace : Committing main thread...
2020-05-16 07:19:33.066803 [Thread 0x000039ac] trace : Creating proof initialisation process...
2020-05-16 07:19:33.066803 [Thread 0x000039ac] trace : Creating knowledge kernel...
2020-05-16 07:19:33.066803 [Thread 0x000039ac] trace : Creating solver...
2020-05-16 07:19:33.070790 [Thread 0x000039ac] debug : Building query for query process...
2020-05-16 07:19:33.070790 [Thread 0x000039ac] trace : Setting up kernel initialisation query...
2020-05-16 07:19:33.070790 [Thread 0x000039ac] debug : Obtained query builder.
2020-05-16 07:19:33.070790 [Thread 0x000039ac] debug : Built query "SELECT stmt FROM theorems WHERE ctx = 1 AND  EXISTS (SELECT 1 FROM proofs WHERE thm_id=id AND is_axiom = 0) ORDER BY RANDOM() LIMIT 50;".
2020-05-16 07:19:33.070790 [Thread 0x000039ac] trace : Beginning a transaction...
2020-05-16 07:19:33.070790 [Thread 0x000039ac] debug : Successfully built SQLite statement from "SELECT stmt FROM theorems WHERE ctx = 1 AND  EXISTS (SELECT 1 FROM proofs WHERE thm_id=id AND is_axiom = 0) ORDER BY RANDOM() LIMIT 50;".
2020-05-16 07:19:33.070790 [Thread 0x000039ac] debug : Successfully built query!
2020-05-16 07:19:33.070790 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.072785 [Thread 0x000039ac] debug : Extracting values from query...
2020-05-16 07:19:33.072785 [Thread 0x000039ac] trace : Adding 'x0 = *(i(e), x0)' to helper theorems.
2020-05-16 07:19:33.072785 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.072785 [Thread 0x000039ac] debug : Extracting values from query...
2020-05-16 07:19:33.072785 [Thread 0x000039ac] trace : Adding '*(x0, *(e, *(x0, i(x0)))) = x0' to helper theorems.
2020-05-16 07:19:33.072785 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.072785 [Thread 0x000039ac] debug : Extracting values from query...
2020-05-16 07:19:33.072785 [Thread 0x000039ac] trace : Adding 'i(e) = *(*(e, i(e)), e)' to helper theorems.
2020-05-16 07:19:33.072785 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.072785 [Thread 0x000039ac] debug : Extracting values from query...
2020-05-16 07:19:33.072785 [Thread 0x000039ac] trace : Adding 'x0 = i(i(*(x0, e)))' to helper theorems.
2020-05-16 07:19:33.072785 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.072785 [Thread 0x000039ac] debug : Extracting values from query...
2020-05-16 07:19:33.072785 [Thread 0x000039ac] trace : Adding 'e = i(*(*(e, e), e))' to helper theorems.
2020-05-16 07:19:33.072785 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.072785 [Thread 0x000039ac] debug : Extracting values from query...
2020-05-16 07:19:33.072785 [Thread 0x000039ac] trace : Adding '*(i(x1), *(x1, i(*(x0, x1)))) = i(*(x0, x1))' to helper theorems.
2020-05-16 07:19:33.072785 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.072785 [Thread 0x000039ac] debug : Extracting values from query...
2020-05-16 07:19:33.072785 [Thread 0x000039ac] trace : Adding 'e = *(*(i(*(e, e)), e), e)' to helper theorems.
2020-05-16 07:19:33.072785 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.072785 [Thread 0x000039ac] debug : Extracting values from query...
2020-05-16 07:19:33.072785 [Thread 0x000039ac] trace : Adding 'e = *(e, *(*(e, i(*(e, e))), e))' to helper theorems.
2020-05-16 07:19:33.072785 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.072785 [Thread 0x000039ac] debug : Extracting values from query...
2020-05-16 07:19:33.072785 [Thread 0x000039ac] trace : Adding 'i(i(e)) = *(e, i(e))' to helper theorems.
2020-05-16 07:19:33.072785 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.072785 [Thread 0x000039ac] debug : Extracting values from query...
2020-05-16 07:19:33.072785 [Thread 0x000039ac] trace : Adding 'i(*(x1, x0)) = *(i(x0), *(*(i(x1), x1), *(x0, i(*(x1, x0)))))' to helper theorems.
2020-05-16 07:19:33.072785 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.072785 [Thread 0x000039ac] debug : Extracting values from query...
2020-05-16 07:19:33.072785 [Thread 0x000039ac] trace : Adding '*(e, e) = i(i(e))' to helper theorems.
2020-05-16 07:19:33.072785 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.072785 [Thread 0x000039ac] debug : Extracting values from query...
2020-05-16 07:19:33.072785 [Thread 0x000039ac] trace : Adding '*(*(e, i(e)), *(e, e)) = e' to helper theorems.
2020-05-16 07:19:33.072785 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.072785 [Thread 0x000039ac] debug : Extracting values from query...
2020-05-16 07:19:33.072785 [Thread 0x000039ac] trace : Adding '*(e, i(e)) = *(e, *(e, e))' to helper theorems.
2020-05-16 07:19:33.072785 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.072785 [Thread 0x000039ac] debug : Extracting values from query...
2020-05-16 07:19:33.072785 [Thread 0x000039ac] trace : Adding 'i(e) = *(i(e), e)' to helper theorems.
2020-05-16 07:19:33.072785 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.072785 [Thread 0x000039ac] debug : Extracting values from query...
2020-05-16 07:19:33.072785 [Thread 0x000039ac] trace : Adding 'e = i(*(i(e), e))' to helper theorems.
2020-05-16 07:19:33.072785 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.072785 [Thread 0x000039ac] debug : Extracting values from query...
2020-05-16 07:19:33.072785 [Thread 0x000039ac] trace : Adding 'e = *(i(x0), *(i(e), x0))' to helper theorems.
2020-05-16 07:19:33.072785 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.072785 [Thread 0x000039ac] debug : Extracting values from query...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] trace : Adding 'i(i(*(e, e))) = i(*(e, i(e)))' to helper theorems.
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Extracting values from query...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] trace : Adding 'i(e) = i(i(i(e)))' to helper theorems.
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Extracting values from query...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] trace : Adding 'i(i(e)) = *(i(e), e)' to helper theorems.
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Extracting values from query...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] trace : Adding '*(*(i(x0), x0), e) = e' to helper theorems.
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Extracting values from query...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] trace : Adding 'i(e) = i(*(e, e))' to helper theorems.
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Extracting values from query...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] trace : Adding 'i(x0) = i(i(i(x0)))' to helper theorems.
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Extracting values from query...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] trace : Adding '*(x0, *(i(x0), i(i(x0)))) = x0' to helper theorems.
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Extracting values from query...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] trace : Adding 'i(e) = *(*(e, e), e)' to helper theorems.
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Extracting values from query...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] trace : Adding '*(i(e), e) = *(i(e), e)' to helper theorems.
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Extracting values from query...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] trace : Adding '*(i(*(x0, i(x0))), e) = e' to helper theorems.
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Extracting values from query...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] trace : Adding 'i(*(e, e)) = i(e)' to helper theorems.
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Extracting values from query...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] trace : Adding 'i(i(*(e, e))) = e' to helper theorems.
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Extracting values from query...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] trace : Adding 'i(*(i(e), e)) = *(e, *(e, e))' to helper theorems.
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Extracting values from query...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] trace : Adding 'i(i(i(i(*(i(e), e))))) = e' to helper theorems.
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Extracting values from query...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] trace : Adding 'i(*(e, e)) = *(i(e), e)' to helper theorems.
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Extracting values from query...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] trace : Adding 'i(e) = i(*(e, *(e, *(*(i(i(x0)), i(x0)), e))))' to helper theorems.
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Extracting values from query...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] trace : Adding 'e = i(i(e))' to helper theorems.
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Extracting values from query...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] trace : Adding 'i(i(i(i(e)))) = e' to helper theorems.
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Extracting values from query...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] trace : Adding 'i(e) = *(*(e, e), i(e))' to helper theorems.
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Extracting values from query...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] trace : Adding 'i(*(e, i(i(e)))) = *(e, e)' to helper theorems.
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Extracting values from query...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] trace : Adding 'i(e) = e' to helper theorems.
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Extracting values from query...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] trace : Adding 'i(*(e, e)) = e' to helper theorems.
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Extracting values from query...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] trace : Adding 'i(*(i(e), e)) = e' to helper theorems.
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Extracting values from query...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] trace : Adding '*(i(e), *(i(*(e, *(i(e), e))), e)) = e' to helper theorems.
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Extracting values from query...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] trace : Adding '*(i(e), *(e, e)) = e' to helper theorems.
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Extracting values from query...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] trace : Adding 'x0 = *(e, *(e, x0))' to helper theorems.
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Extracting values from query...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] trace : Adding 'i(i(e)) = e' to helper theorems.
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Extracting values from query...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] trace : Adding 'e = *(*(i(e), i(e)), e)' to helper theorems.
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Extracting values from query...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] trace : Adding 'x0 = *(x0, *(e, e))' to helper theorems.
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Extracting values from query...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] trace : Adding 'e = *(i(e), i(i(e)))' to helper theorems.
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Extracting values from query...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] trace : Adding '*(*(e, *(x0, i(x0))), i(e)) = e' to helper theorems.
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Extracting values from query...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] trace : Adding '*(e, i(e)) = e' to helper theorems.
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Extracting values from query...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] trace : Adding 'e = *(*(e, i(*(*(e, e), x0))), x0)' to helper theorems.
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Extracting values from query...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] trace : Adding 'i(e) = *(*(i(i(e)), e), e)' to helper theorems.
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:33.073782 [Thread 0x000039ac] debug : Completed database transaction.
2020-05-16 07:19:33.073782 [Thread 0x000039ac] trace : Finishing loading of proof data...
2020-05-16 07:19:33.075779 [Thread 0x000039ac] info : Proof initialisation process loaded 50 theorems from the database. Now picking the best of them...
2020-05-16 07:19:33.078804 [Thread 0x000039ac] trace : Selected "x0 = *(i(e), x0)" as a good statement to help prove the target theorems (utility was 0.25).
2020-05-16 07:19:33.078804 [Thread 0x000039ac] trace : Selected "*(i(x1), *(x1, i(*(x0, x1)))) = i(*(x0, x1))" as a good statement to help prove the target theorems (utility was 0.166667).
2020-05-16 07:19:33.078804 [Thread 0x000039ac] trace : Selected "i(*(x1, x0)) = *(i(x0), *(*(i(x1), x1), *(x0, i(*(x1, x0)))))" as a good statement to help prove the target theorems (utility was 0.142857).
2020-05-16 07:19:33.078804 [Thread 0x000039ac] trace : Selected "e = *(i(e), i(i(e)))" as a good statement to help prove the target theorems (utility was 0.125).
2020-05-16 07:19:33.078804 [Thread 0x000039ac] trace : Selected "x0 = *(x0, *(e, e))" as a good statement to help prove the target theorems (utility was 0.125).
2020-05-16 07:19:33.078804 [Thread 0x000039ac] trace : Selected "x0 = *(e, *(e, x0))" as a good statement to help prove the target theorems (utility was 0.125).
2020-05-16 07:19:33.078804 [Thread 0x000039ac] trace : Selected "i(*(i(e), e)) = e" as a good statement to help prove the target theorems (utility was 0.125).
2020-05-16 07:19:33.078804 [Thread 0x000039ac] trace : Selected "i(*(e, e)) = e" as a good statement to help prove the target theorems (utility was 0.125).
2020-05-16 07:19:33.078804 [Thread 0x000039ac] trace : Selected "*(x0, *(i(x0), i(i(x0)))) = x0" as a good statement to help prove the target theorems (utility was 0.125).
2020-05-16 07:19:33.078804 [Thread 0x000039ac] trace : Selected "i(x0) = i(i(i(x0)))" as a good statement to help prove the target theorems (utility was 0.125).
2020-05-16 07:19:33.078804 [Thread 0x000039ac] info : Proof Process loaded and selected 10 theorems from the database to aid in the proof.
2020-05-16 07:19:33.079768 [Thread 0x000039ac] debug : Finishing SQLite query...
2020-05-16 07:19:33.079768 [Thread 0x000039ac] info : Beginning proof sequence...
2020-05-16 07:19:33.589447 [Thread 0x000039ac] info : Proof Process: Step 1/10 : 1 proof(s) remaining.
2020-05-16 07:19:33.913872 [Thread 0x000039ac] info : Proof Process: Step 2/10 : 1 proof(s) remaining.
2020-05-16 07:19:34.358646 [Thread 0x000039ac] info : Proof Process: Step 3/10 : 1 proof(s) remaining.
2020-05-16 07:19:34.696595 [Thread 0x000039ac] info : Proof Process: Step 4/10 : 1 proof(s) remaining.
2020-05-16 07:19:35.018769 [Thread 0x000039ac] info : Proof Process: Step 5/10 : 1 proof(s) remaining.
2020-05-16 07:19:35.584225 [Thread 0x000039ac] info : Proof Process: Step 6/10 : 1 proof(s) remaining.
2020-05-16 07:19:35.888834 [Thread 0x000039ac] info : Proof Process: Step 7/10 : 1 proof(s) remaining.
2020-05-16 07:19:36.201964 [Thread 0x000039ac] info : Proof Process: Step 8/10 : 1 proof(s) remaining.
2020-05-16 07:19:36.533513 [Thread 0x000039ac] info : Proof Process: Step 9/10 : 1 proof(s) remaining.
2020-05-16 07:19:36.781817 [Thread 0x000039ac] info : Proof Process: Step 10/10 : 1 proof(s) remaining.
2020-05-16 07:19:36.781817 [Thread 0x000039ac] trace : Finished running solver, for 10/10 steps.
2020-05-16 07:19:36.781817 [Thread 0x000039ac] info : Proof process finished proving! Results:
	0 theorem(s) were proven true,
	0 theorem(s) have no proof,
	1 theorem(s) did not finish in the allotted time.
2020-05-16 07:19:36.782814 [Thread 0x000039ac] trace : Proof of "i(*(x1, x0)) = *(i(x0), i(x1))" was unsuccessful; not enough time allocated.
2020-05-16 07:19:36.782814 [Thread 0x000039ac] trace : 	Total time taken: 3.625s
2020-05-16 07:19:36.782814 [Thread 0x000039ac] trace : 	Max nodes in memory: 110
2020-05-16 07:19:36.782814 [Thread 0x000039ac] trace : 	Total node expansions: 5001
2020-05-16 07:19:36.782814 [Thread 0x000039ac] trace : Creating Save Proof Results process...
2020-05-16 07:19:36.782814 [Thread 0x000039ac] debug : Building query for query process...
2020-05-16 07:19:36.782814 [Thread 0x000039ac] trace : Setting up result-saving query...
2020-05-16 07:19:36.782814 [Thread 0x000039ac] debug : Obtained query builder.
2020-05-16 07:19:36.782814 [Thread 0x000039ac] debug : Built query "INSERT INTO theorems (stmt, ctx) SELECT 'i(*(x1, x0)) = *(i(x0), i(x1))', 1 WHERE NOT EXISTS(SELECT 1 FROM theorems WHERE stmt == 'i(*(x1, x0)) = *(i(x0), i(x1))');

WITH my_thm(my_id) AS (SELECT id FROM theorems WHERE stmt = 'i(*(x1, x0)) = *(i(x0), i(x1))')
INSERT INTO proof_attempts(thm_id, ss_id, time_cost, max_mem, num_expansions) VALUES ((SELECT my_id FROM my_thm), 3, 3.625, 110, 5001);

".
2020-05-16 07:19:36.782814 [Thread 0x000039ac] trace : Beginning a transaction...
2020-05-16 07:19:36.782814 [Thread 0x000039ac] debug : Successfully built SQLite statement from "INSERT INTO theorems (stmt, ctx) SELECT 'i(*(x1, x0)) = *(i(x0), i(x1))', 1 WHERE NOT EXISTS(SELECT 1 FROM theorems WHERE stmt == 'i(*(x1, x0)) = *(i(x0), i(x1))');".
2020-05-16 07:19:36.782814 [Thread 0x000039ac] debug : Successfully built SQLite statement from "

WITH my_thm(my_id) AS (SELECT id FROM theorems WHERE stmt = 'i(*(x1, x0)) = *(i(x0), i(x1))')
INSERT INTO proof_attempts(thm_id, ss_id, time_cost, max_mem, num_expansions) VALUES ((SELECT my_id FROM my_thm), 3, 3.625, 110, 5001);".
2020-05-16 07:19:36.782814 [Thread 0x000039ac] debug : Successfully built query!
2020-05-16 07:19:36.782814 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:36.782814 [Thread 0x000039ac] debug : Finishing SQLite query...
2020-05-16 07:19:36.782814 [Thread 0x000039ac] debug : Stepping SQLite statement...
2020-05-16 07:19:36.802945 [Thread 0x000039ac] debug : Finishing SQLite query...
2020-05-16 07:19:36.802945 [Thread 0x000039ac] debug : Completed database transaction.
2020-05-16 07:19:36.802945 [Thread 0x000039ac] trace : Finishing saving proof results data.
2020-05-16 07:19:36.820724 [Thread 0x000039ac] trace : Waiting for worker threads to join...
2020-05-16 07:19:36.820724 [Thread 0x000039ac] trace : Done. Exiting...
2020-05-16 07:19:36.820724 [Thread 0x000039ac] debug : Closing SQLite database...
2020-05-16 07:23:33.238690 [Thread 0x00001390] trace : Starting up application...
2020-05-16 07:23:33.240685 [Thread 0x00001390] trace : Successfully loaded database file at "../Data/DB/eqlogic.db"
2020-05-16 07:23:33.240685 [Thread 0x00001390] debug : Querying SQLite database for model context name "".
2020-05-16 07:23:33.240685 [Thread 0x00001390] trace : Beginning a transaction...
2020-05-16 07:23:33.241682 [Thread 0x00001390] debug : Successfully built SQLite statement from "SELECT filename FROM model_contexts WHERE name = "";".
2020-05-16 07:23:33.241682 [Thread 0x00001390] debug : Stepping SQLite statement...
2020-05-16 07:23:33.241682 [Thread 0x00001390] warning : SQLite query "SELECT filename FROM model_contexts WHERE name = "";" turned up no results, even though it finished.
2020-05-16 07:23:33.241682 [Thread 0x00001390] debug : Finishing SQLite query...
2020-05-16 07:23:33.241682 [Thread 0x00001390] debug : Querying SQLite database for model context name "".
2020-05-16 07:23:33.241682 [Thread 0x00001390] trace : Beginning a transaction...
2020-05-16 07:23:33.241682 [Thread 0x00001390] debug : Successfully built SQLite statement from "SELECT ctx_id FROM model_contexts WHERE name = "";".
2020-05-16 07:23:33.241682 [Thread 0x00001390] debug : Stepping SQLite statement...
2020-05-16 07:23:33.241682 [Thread 0x00001390] warning : SQLite query "SELECT ctx_id FROM model_contexts WHERE name = "";" turned up no results, even though it finished.
2020-05-16 07:23:33.241682 [Thread 0x00001390] debug : Finishing SQLite query...
2020-05-16 07:23:33.241682 [Thread 0x00001390] error : Context name "" could not be obtained from the database. Check spelling and the database's `model_contexts` table.
2020-05-16 07:23:33.241682 [Thread 0x00001390] debug : Closing SQLite database...
2020-05-16 07:24:57.714459 [Thread 0x00002be0] trace : Starting up application...
2020-05-16 07:24:57.717452 [Thread 0x00002be0] trace : Successfully loaded database file at "../Data/DB/eqlogic.db"
2020-05-16 07:24:57.717452 [Thread 0x00002be0] debug : Querying SQLite database for model context name "boolean-algebra".
2020-05-16 07:24:57.717452 [Thread 0x00002be0] trace : Beginning a transaction...
2020-05-16 07:24:57.718449 [Thread 0x00002be0] debug : Successfully built SQLite statement from "SELECT filename FROM model_contexts WHERE name = "boolean-algebra";".
2020-05-16 07:24:57.718449 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:57.718449 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:57.718449 [Thread 0x00002be0] debug : Querying SQLite database for model context name "boolean-algebra".
2020-05-16 07:24:57.718449 [Thread 0x00002be0] trace : Beginning a transaction...
2020-05-16 07:24:57.718449 [Thread 0x00002be0] debug : Successfully built SQLite statement from "SELECT ctx_id FROM model_contexts WHERE name = "boolean-algebra";".
2020-05-16 07:24:57.718449 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:57.718449 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:57.719444 [Thread 0x00002be0] trace : Successfully loaded the context file "Boolean Algebra".
2020-05-16 07:24:57.719444 [Thread 0x00002be0] trace : Checking that the model context's axioms are loaded in the database properly, before we begin...
2020-05-16 07:24:57.720472 [Thread 0x00002be0] trace : Beginning a transaction...
2020-05-16 07:24:57.720472 [Thread 0x00002be0] debug : Successfully built SQLite statement from "INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( 'and(x1, x0) = and(x0, x1)', 2);".
2020-05-16 07:24:57.720472 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='and(x1, x0) = and(x0, x1)'), 1);".
2020-05-16 07:24:57.720472 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( 'and(x0, and(x1, x2)) = and(and(x0, x1), x2)', 2);".
2020-05-16 07:24:57.721472 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='and(x0, and(x1, x2)) = and(and(x0, x1), x2)'), 1);".
2020-05-16 07:24:57.721472 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( 'and(x0, or(x0, x1)) = x0', 2);".
2020-05-16 07:24:57.721472 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='and(x0, or(x0, x1)) = x0'), 1);".
2020-05-16 07:24:57.721472 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( 'and(x0, true) = x0', 2);".
2020-05-16 07:24:57.721472 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='and(x0, true) = x0'), 1);".
2020-05-16 07:24:57.721472 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( 'or(x1, x0) = or(x0, x1)', 2);".
2020-05-16 07:24:57.721472 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='or(x1, x0) = or(x0, x1)'), 1);".
2020-05-16 07:24:57.721472 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( 'or(x0, or(x1, x2)) = or(or(x0, x1), x2)', 2);".
2020-05-16 07:24:57.721472 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='or(x0, or(x1, x2)) = or(or(x0, x1), x2)'), 1);".
2020-05-16 07:24:57.721472 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( 'or(x0, and(x0, x1)) = x0', 2);".
2020-05-16 07:24:57.721472 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='or(x0, and(x0, x1)) = x0'), 1);".
2020-05-16 07:24:57.721472 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( 'or(x0, false) = x0', 2);".
2020-05-16 07:24:57.721472 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='or(x0, false) = x0'), 1);".
2020-05-16 07:24:57.721472 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( 'or(x0, and(x1, x2)) = and(or(x0, x1), or(x0, x2))', 2);".
2020-05-16 07:24:57.721472 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='or(x0, and(x1, x2)) = and(or(x0, x1), or(x0, x2))'), 1);".
2020-05-16 07:24:57.721472 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( 'and(x0, or(x1, x2)) = or(and(x0, x1), and(x0, x2))', 2);".
2020-05-16 07:24:57.721472 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='and(x0, or(x1, x2)) = or(and(x0, x1), and(x0, x2))'), 1);".
2020-05-16 07:24:57.721472 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( 'or(x0, not(x0)) = true', 2);".
2020-05-16 07:24:57.721472 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='or(x0, not(x0)) = true'), 1);".
2020-05-16 07:24:57.721472 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( 'and(x0, not(x0)) = false', 2);".
2020-05-16 07:24:57.721472 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='and(x0, not(x0)) = false'), 1);".
2020-05-16 07:24:57.721472 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( 'not(or(x0, x1)) = and(not(x0), not(x1))', 2);".
2020-05-16 07:24:57.721472 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='not(or(x0, x1)) = and(not(x0), not(x1))'), 1);".
2020-05-16 07:24:57.721472 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( 'not(false) = true', 2);".
2020-05-16 07:24:57.721472 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='not(false) = true'), 1);".
2020-05-16 07:24:57.721472 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( 'not(true) = false', 2);".
2020-05-16 07:24:57.721472 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='not(true) = false'), 1);".
2020-05-16 07:24:57.722469 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( 'implies(x0, x1) = or(not(x0), x1)', 2);".
2020-05-16 07:24:57.722469 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='implies(x0, x1) = or(not(x0), x1)'), 1);".
2020-05-16 07:24:57.722469 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( 'and(x1, x0) = and(x0, x1)', 2);".
2020-05-16 07:24:57.722469 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='and(x1, x0) = and(x0, x1)'), 1);".
2020-05-16 07:24:57.722469 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( 'and(x1, x0) = and(x0, x1)', 2);".
2020-05-16 07:24:57.722469 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='and(x1, x0) = and(x0, x1)'), 1);".
2020-05-16 07:24:57.722469 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( 'and(x1, x0) = and(x0, x1)', 2);".
2020-05-16 07:24:57.722469 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='and(x1, x0) = and(x0, x1)'), 1);".
2020-05-16 07:24:57.722469 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( 'and(x1, x0) = and(x0, x1)', 2);".
2020-05-16 07:24:57.722469 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='and(x1, x0) = and(x0, x1)'), 1);".
2020-05-16 07:24:57.722469 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( 'and(x1, x0) = and(x0, x1)', 2);".
2020-05-16 07:24:57.722469 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='and(x1, x0) = and(x0, x1)'), 1);".
2020-05-16 07:24:57.722469 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( 'and(x1, x0) = and(x0, x1)', 2);".
2020-05-16 07:24:57.722469 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='and(x1, x0) = and(x0, x1)'), 1);".
2020-05-16 07:24:57.722469 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( 'and(x1, x0) = and(x0, x1)', 2);".
2020-05-16 07:24:57.722469 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='and(x1, x0) = and(x0, x1)'), 1);".
2020-05-16 07:24:57.722469 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( 'and(x1, x0) = and(x0, x1)', 2);".
2020-05-16 07:24:57.722469 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='and(x1, x0) = and(x0, x1)'), 1);".
2020-05-16 07:24:57.722469 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( 'and(x1, x0) = and(x0, x1)', 2);".
2020-05-16 07:24:57.722469 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='and(x1, x0) = and(x0, x1)'), 1);".
2020-05-16 07:24:57.722469 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( 'and(x1, x0) = and(x0, x1)', 2);".
2020-05-16 07:24:57.722469 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='and(x1, x0) = and(x0, x1)'), 1);".
2020-05-16 07:24:57.722469 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( 'and(x1, x0) = and(x0, x1)', 2);".
2020-05-16 07:24:57.722469 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='and(x1, x0) = and(x0, x1)'), 1);".
2020-05-16 07:24:57.722469 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( 'and(x1, x0) = and(x0, x1)', 2);".
2020-05-16 07:24:57.722469 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='and(x1, x0) = and(x0, x1)'), 1);".
2020-05-16 07:24:57.723470 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( 'and(x1, x0) = and(x0, x1)', 2);".
2020-05-16 07:24:57.723470 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='and(x1, x0) = and(x0, x1)'), 1);".
2020-05-16 07:24:57.723470 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( 'and(x1, x0) = and(x0, x1)', 2);".
2020-05-16 07:24:57.723470 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='and(x1, x0) = and(x0, x1)'), 1);".
2020-05-16 07:24:57.723470 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( 'and(x1, x0) = and(x0, x1)', 2);".
2020-05-16 07:24:57.723470 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='and(x1, x0) = and(x0, x1)'), 1);".
2020-05-16 07:24:57.723470 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( 'and(x1, x0) = and(x0, x1)', 2);".
2020-05-16 07:24:57.723470 [Thread 0x00002be0] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='and(x1, x0) = and(x0, x1)'), 1);".
2020-05-16 07:24:57.723470 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:57.733407 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:57.734406 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:57.744378 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:57.744378 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:57.753356 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:57.753356 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:57.763331 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:57.763331 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:57.773299 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:57.773299 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:57.784276 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:57.784276 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:57.794547 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:57.794547 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:57.804518 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:57.804518 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:57.814572 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:57.814572 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:57.825511 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:57.825511 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:57.835481 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:57.835481 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:57.844578 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:57.844578 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:57.853613 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:57.853613 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:57.863531 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:57.863531 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:57.880660 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:57.880660 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:57.890533 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:57.890533 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:57.900428 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:57.900428 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:57.909592 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:57.909592 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:57.919380 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:57.919380 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:57.929354 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:57.929354 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:57.939328 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:57.939328 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:57.948493 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:57.948493 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:57.959272 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:57.959272 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:57.969442 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:57.969442 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:57.980449 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:57.980449 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:57.989474 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:57.989474 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:58.000449 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:58.000449 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:58.009757 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:58.009757 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:58.019800 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:58.019800 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:58.029147 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:58.029147 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:58.040210 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:58.040210 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:58.049191 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:58.049191 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:58.060399 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:58.060399 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:58.060399 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:58.060399 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:58.069794 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:58.070612 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:58.070612 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:58.070612 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:58.079790 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:58.079790 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:58.080604 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:58.080604 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:58.089025 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:58.090031 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:58.090031 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:58.090031 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:58.099261 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:58.099261 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:58.100258 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:58.100258 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:58.110582 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:58.110582 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:58.110582 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:58.110582 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:58.119979 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:58.119979 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:58.120765 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:58.120765 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:58.129976 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:58.129976 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:58.129976 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:58.129976 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:58.140199 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:58.140199 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:58.140199 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:58.140199 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:58.150393 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:58.150393 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:58.150393 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:58.150393 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:58.160365 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:58.160365 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:58.160365 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:58.160365 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:58.170343 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:58.170343 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:58.170343 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:58.170343 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:58.179503 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:58.179503 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:58.180315 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:58.180315 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:58.189390 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:58.189390 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:58.189390 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:58.189390 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:58.199600 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:58.199600 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:58.199600 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:58.199600 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:58.209988 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:58.209988 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:58.210987 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:58.210987 [Thread 0x00002be0] trace : Successfully checked the axioms are set up in the database properly.
2020-05-16 07:24:58.210987 [Thread 0x00002be0] debug : Querying SQLite database for model context name "ids-informed-limited".
2020-05-16 07:24:58.210987 [Thread 0x00002be0] trace : Beginning a transaction...
2020-05-16 07:24:58.210987 [Thread 0x00002be0] debug : Successfully built SQLite statement from "SELECT filename FROM search_settings WHERE name = "ids-informed-limited";".
2020-05-16 07:24:58.210987 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:58.210987 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:58.210987 [Thread 0x00002be0] debug : Querying SQLite database for model context name "ids-informed-limited".
2020-05-16 07:24:58.210987 [Thread 0x00002be0] trace : Beginning a transaction...
2020-05-16 07:24:58.210987 [Thread 0x00002be0] debug : Successfully built SQLite statement from "SELECT ss_id FROM search_settings WHERE name = "ids-informed-limited";".
2020-05-16 07:24:58.210987 [Thread 0x00002be0] debug : Stepping SQLite statement...
2020-05-16 07:24:58.210987 [Thread 0x00002be0] debug : Finishing SQLite query...
2020-05-16 07:24:58.211982 [Thread 0x00002be0] trace : Successfully loaded search settings "Informed Limited Iterative-Deepening Solver"
2020-05-16 07:24:58.211982 [Thread 0x00002be0] error : Failed to load statements: " i(i(x0)) = x0 ". Check syntax and types.
2020-05-16 07:24:58.211982 [Thread 0x00002be0] error : Failed to load proof task: ' i(i(x0)) = x0 '
2020-05-16 07:24:58.211982 [Thread 0x00002be0] debug : Closing SQLite database...
2020-05-16 07:25:12.335708 [Thread 0x00003858] trace : Starting up application...
2020-05-16 07:25:12.338664 [Thread 0x00003858] trace : Successfully loaded database file at "../Data/DB/eqlogic.db"
2020-05-16 07:25:12.338664 [Thread 0x00003858] debug : Querying SQLite database for model context name "group-theory".
2020-05-16 07:25:12.338664 [Thread 0x00003858] trace : Beginning a transaction...
2020-05-16 07:25:12.339661 [Thread 0x00003858] debug : Successfully built SQLite statement from "SELECT filename FROM model_contexts WHERE name = "group-theory";".
2020-05-16 07:25:12.339661 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.340662 [Thread 0x00003858] debug : Finishing SQLite query...
2020-05-16 07:25:12.340662 [Thread 0x00003858] debug : Querying SQLite database for model context name "group-theory".
2020-05-16 07:25:12.340662 [Thread 0x00003858] trace : Beginning a transaction...
2020-05-16 07:25:12.340662 [Thread 0x00003858] debug : Successfully built SQLite statement from "SELECT ctx_id FROM model_contexts WHERE name = "group-theory";".
2020-05-16 07:25:12.340662 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.340662 [Thread 0x00003858] debug : Finishing SQLite query...
2020-05-16 07:25:12.341654 [Thread 0x00003858] trace : Successfully loaded the context file "Group Theory".
2020-05-16 07:25:12.341654 [Thread 0x00003858] trace : Checking that the model context's axioms are loaded in the database properly, before we begin...
2020-05-16 07:25:12.341654 [Thread 0x00003858] trace : Beginning a transaction...
2020-05-16 07:25:12.341654 [Thread 0x00003858] debug : Successfully built SQLite statement from "INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(*(x0, x1), x2) = *(x0, *(x1, x2))', 1);".
2020-05-16 07:25:12.341654 [Thread 0x00003858] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(*(x0, x1), x2) = *(x0, *(x1, x2))'), 1);".
2020-05-16 07:25:12.341654 [Thread 0x00003858] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(x0, e) = x0', 1);".
2020-05-16 07:25:12.341654 [Thread 0x00003858] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(x0, e) = x0'), 1);".
2020-05-16 07:25:12.341654 [Thread 0x00003858] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(e, x0) = x0', 1);".
2020-05-16 07:25:12.341654 [Thread 0x00003858] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(e, x0) = x0'), 1);".
2020-05-16 07:25:12.341654 [Thread 0x00003858] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(x0, i(x0)) = e', 1);".
2020-05-16 07:25:12.342652 [Thread 0x00003858] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(x0, i(x0)) = e'), 1);".
2020-05-16 07:25:12.342652 [Thread 0x00003858] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(i(x0), x0) = e', 1);".
2020-05-16 07:25:12.342652 [Thread 0x00003858] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(i(x0), x0) = e'), 1);".
2020-05-16 07:25:12.342652 [Thread 0x00003858] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(x0, *(x1, x2)) = *(*(x0, x1), x2)', 1);".
2020-05-16 07:25:12.342652 [Thread 0x00003858] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(x0, *(x1, x2)) = *(*(x0, x1), x2)'), 1);".
2020-05-16 07:25:12.342652 [Thread 0x00003858] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(x0, *(x1, x2)) = *(*(x0, x1), x2)', 1);".
2020-05-16 07:25:12.342652 [Thread 0x00003858] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(x0, *(x1, x2)) = *(*(x0, x1), x2)'), 1);".
2020-05-16 07:25:12.342652 [Thread 0x00003858] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(x0, *(x1, x2)) = *(*(x0, x1), x2)', 1);".
2020-05-16 07:25:12.342652 [Thread 0x00003858] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(x0, *(x1, x2)) = *(*(x0, x1), x2)'), 1);".
2020-05-16 07:25:12.342652 [Thread 0x00003858] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(x0, *(x1, x2)) = *(*(x0, x1), x2)', 1);".
2020-05-16 07:25:12.342652 [Thread 0x00003858] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(x0, *(x1, x2)) = *(*(x0, x1), x2)'), 1);".
2020-05-16 07:25:12.342652 [Thread 0x00003858] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(x0, *(x1, x2)) = *(*(x0, x1), x2)', 1);".
2020-05-16 07:25:12.342652 [Thread 0x00003858] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(x0, *(x1, x2)) = *(*(x0, x1), x2)'), 1);".
2020-05-16 07:25:12.342652 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.351811 [Thread 0x00003858] debug : Finishing SQLite query...
2020-05-16 07:25:12.351811 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.352631 [Thread 0x00003858] debug : Finishing SQLite query...
2020-05-16 07:25:12.352631 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.361606 [Thread 0x00003858] debug : Finishing SQLite query...
2020-05-16 07:25:12.361606 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.361606 [Thread 0x00003858] debug : Finishing SQLite query...
2020-05-16 07:25:12.361606 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.370577 [Thread 0x00003858] debug : Finishing SQLite query...
2020-05-16 07:25:12.370577 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.371585 [Thread 0x00003858] debug : Finishing SQLite query...
2020-05-16 07:25:12.371585 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.382596 [Thread 0x00003858] debug : Finishing SQLite query...
2020-05-16 07:25:12.382596 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.382596 [Thread 0x00003858] debug : Finishing SQLite query...
2020-05-16 07:25:12.382596 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.392814 [Thread 0x00003858] debug : Finishing SQLite query...
2020-05-16 07:25:12.392814 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.392814 [Thread 0x00003858] debug : Finishing SQLite query...
2020-05-16 07:25:12.392814 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.403091 [Thread 0x00003858] debug : Finishing SQLite query...
2020-05-16 07:25:12.403091 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.403091 [Thread 0x00003858] debug : Finishing SQLite query...
2020-05-16 07:25:12.403091 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.413063 [Thread 0x00003858] debug : Finishing SQLite query...
2020-05-16 07:25:12.413063 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.413063 [Thread 0x00003858] debug : Finishing SQLite query...
2020-05-16 07:25:12.413063 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.423038 [Thread 0x00003858] debug : Finishing SQLite query...
2020-05-16 07:25:12.423038 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.424034 [Thread 0x00003858] debug : Finishing SQLite query...
2020-05-16 07:25:12.424034 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.434205 [Thread 0x00003858] debug : Finishing SQLite query...
2020-05-16 07:25:12.434205 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.434205 [Thread 0x00003858] debug : Finishing SQLite query...
2020-05-16 07:25:12.434205 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.447166 [Thread 0x00003858] debug : Finishing SQLite query...
2020-05-16 07:25:12.447166 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.447166 [Thread 0x00003858] debug : Finishing SQLite query...
2020-05-16 07:25:12.447166 [Thread 0x00003858] trace : Successfully checked the axioms are set up in the database properly.
2020-05-16 07:25:12.447166 [Thread 0x00003858] debug : Querying SQLite database for model context name "ids-informed-limited".
2020-05-16 07:25:12.447166 [Thread 0x00003858] trace : Beginning a transaction...
2020-05-16 07:25:12.447166 [Thread 0x00003858] debug : Successfully built SQLite statement from "SELECT filename FROM search_settings WHERE name = "ids-informed-limited";".
2020-05-16 07:25:12.447166 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.447166 [Thread 0x00003858] debug : Finishing SQLite query...
2020-05-16 07:25:12.447166 [Thread 0x00003858] debug : Querying SQLite database for model context name "ids-informed-limited".
2020-05-16 07:25:12.447166 [Thread 0x00003858] trace : Beginning a transaction...
2020-05-16 07:25:12.447166 [Thread 0x00003858] debug : Successfully built SQLite statement from "SELECT ss_id FROM search_settings WHERE name = "ids-informed-limited";".
2020-05-16 07:25:12.447166 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.448165 [Thread 0x00003858] debug : Finishing SQLite query...
2020-05-16 07:25:12.448165 [Thread 0x00003858] trace : Successfully loaded search settings "Informed Limited Iterative-Deepening Solver"
2020-05-16 07:25:12.448165 [Thread 0x00003858] trace : Successfully loaded statements " i(i(x0)) = x0 ". Creating corresponding proof process...
2020-05-16 07:25:12.448165 [Thread 0x00003858] trace : Committing main thread...
2020-05-16 07:25:12.448165 [Thread 0x00003858] trace : Creating proof initialisation process...
2020-05-16 07:25:12.448165 [Thread 0x00003858] trace : Creating knowledge kernel...
2020-05-16 07:25:12.449164 [Thread 0x00003858] trace : Creating solver...
2020-05-16 07:25:12.451155 [Thread 0x00003858] debug : Building query for query process...
2020-05-16 07:25:12.451155 [Thread 0x00003858] trace : Setting up kernel initialisation query...
2020-05-16 07:25:12.451155 [Thread 0x00003858] debug : Obtained query builder.
2020-05-16 07:25:12.451155 [Thread 0x00003858] debug : Built query "SELECT stmt FROM theorems WHERE ctx = 1 AND  EXISTS (SELECT 1 FROM proofs WHERE thm_id=id AND is_axiom = 0) ORDER BY RANDOM() LIMIT 50;".
2020-05-16 07:25:12.451155 [Thread 0x00003858] trace : Beginning a transaction...
2020-05-16 07:25:12.451155 [Thread 0x00003858] debug : Successfully built SQLite statement from "SELECT stmt FROM theorems WHERE ctx = 1 AND  EXISTS (SELECT 1 FROM proofs WHERE thm_id=id AND is_axiom = 0) ORDER BY RANDOM() LIMIT 50;".
2020-05-16 07:25:12.451155 [Thread 0x00003858] debug : Successfully built query!
2020-05-16 07:25:12.451155 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.453151 [Thread 0x00003858] debug : Extracting values from query...
2020-05-16 07:25:12.453151 [Thread 0x00003858] trace : Adding 'i(i(e)) = *(i(*(e, e)), e)' to helper theorems.
2020-05-16 07:25:12.453151 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.453151 [Thread 0x00003858] debug : Extracting values from query...
2020-05-16 07:25:12.453151 [Thread 0x00003858] trace : Adding 'i(i(*(x0, x1))) = *(x0, x1)' to helper theorems.
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Extracting values from query...
2020-05-16 07:25:12.454148 [Thread 0x00003858] trace : Adding 'e = *(e, i(*(i(e), e)))' to helper theorems.
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Extracting values from query...
2020-05-16 07:25:12.454148 [Thread 0x00003858] trace : Adding 'e = *(*(*(e, e), e), e)' to helper theorems.
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Extracting values from query...
2020-05-16 07:25:12.454148 [Thread 0x00003858] trace : Adding '*(e, *(*(e, x0), i(x0))) = e' to helper theorems.
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Extracting values from query...
2020-05-16 07:25:12.454148 [Thread 0x00003858] trace : Adding '*(i(e), i(e)) = e' to helper theorems.
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Extracting values from query...
2020-05-16 07:25:12.454148 [Thread 0x00003858] trace : Adding '*(x0, *(x1, i(*(x0, x1)))) = *(*(x0, x1), i(*(x0, x1)))' to helper theorems.
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Extracting values from query...
2020-05-16 07:25:12.454148 [Thread 0x00003858] trace : Adding 'x0 = *(i(i(e)), x0)' to helper theorems.
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Extracting values from query...
2020-05-16 07:25:12.454148 [Thread 0x00003858] trace : Adding 'e = i(*(*(e, e), e))' to helper theorems.
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Extracting values from query...
2020-05-16 07:25:12.454148 [Thread 0x00003858] trace : Adding '*(e, i(i(e))) = *(e, e)' to helper theorems.
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Extracting values from query...
2020-05-16 07:25:12.454148 [Thread 0x00003858] trace : Adding '*(i(*(*(i(x0), x0), e)), e) = e' to helper theorems.
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Extracting values from query...
2020-05-16 07:25:12.454148 [Thread 0x00003858] trace : Adding 'i(i(i(e))) = *(i(e), e)' to helper theorems.
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Extracting values from query...
2020-05-16 07:25:12.454148 [Thread 0x00003858] trace : Adding '*(e, *(i(i(e)), e)) = i(e)' to helper theorems.
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Extracting values from query...
2020-05-16 07:25:12.454148 [Thread 0x00003858] trace : Adding 'i(e) = *(*(i(e), *(i(e), e)), e)' to helper theorems.
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Extracting values from query...
2020-05-16 07:25:12.454148 [Thread 0x00003858] trace : Adding '*(x0, i(x0)) = *(e, e)' to helper theorems.
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Extracting values from query...
2020-05-16 07:25:12.454148 [Thread 0x00003858] trace : Adding '*(i(*(*(e, *(e, e)), e)), e) = e' to helper theorems.
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Extracting values from query...
2020-05-16 07:25:12.454148 [Thread 0x00003858] trace : Adding 'x0 = i(i(*(x0, e)))' to helper theorems.
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Extracting values from query...
2020-05-16 07:25:12.454148 [Thread 0x00003858] trace : Adding 'x0 = *(i(i(*(x0, i(i(e))))), e)' to helper theorems.
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Extracting values from query...
2020-05-16 07:25:12.454148 [Thread 0x00003858] trace : Adding '*(i(i(e)), e) = *(e, e)' to helper theorems.
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Extracting values from query...
2020-05-16 07:25:12.454148 [Thread 0x00003858] trace : Adding 'e = *(i(x0), *(e, x0))' to helper theorems.
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Extracting values from query...
2020-05-16 07:25:12.454148 [Thread 0x00003858] trace : Adding 'i(*(x0, x1)) = *(e, i(*(x0, x1)))' to helper theorems.
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Extracting values from query...
2020-05-16 07:25:12.454148 [Thread 0x00003858] trace : Adding '*(e, i(*(e, e))) = e' to helper theorems.
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Extracting values from query...
2020-05-16 07:25:12.454148 [Thread 0x00003858] trace : Adding 'i(*(i(*(e, e)), e)) = e' to helper theorems.
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Extracting values from query...
2020-05-16 07:25:12.454148 [Thread 0x00003858] trace : Adding '*(x0, *(i(x0), x0)) = x0' to helper theorems.
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Extracting values from query...
2020-05-16 07:25:12.454148 [Thread 0x00003858] trace : Adding '*(e, i(i(e))) = e' to helper theorems.
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Extracting values from query...
2020-05-16 07:25:12.454148 [Thread 0x00003858] trace : Adding '*(e, e) = i(i(e))' to helper theorems.
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Extracting values from query...
2020-05-16 07:25:12.454148 [Thread 0x00003858] trace : Adding 'i(*(x1, x0)) = *(i(x0), *(e, *(x0, i(*(x1, x0)))))' to helper theorems.
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Extracting values from query...
2020-05-16 07:25:12.454148 [Thread 0x00003858] trace : Adding '*(i(e), e) = *(i(e), e)' to helper theorems.
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Extracting values from query...
2020-05-16 07:25:12.454148 [Thread 0x00003858] trace : Adding 'e = i(*(*(e, i(e)), e))' to helper theorems.
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Extracting values from query...
2020-05-16 07:25:12.454148 [Thread 0x00003858] trace : Adding '*(i(*(x0, x1)), *(x0, x1)) = e' to helper theorems.
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Extracting values from query...
2020-05-16 07:25:12.454148 [Thread 0x00003858] trace : Adding '*(i(x0), *(x0, x0)) = x0' to helper theorems.
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Extracting values from query...
2020-05-16 07:25:12.454148 [Thread 0x00003858] trace : Adding '*(*(e, e), e) = e' to helper theorems.
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Extracting values from query...
2020-05-16 07:25:12.454148 [Thread 0x00003858] trace : Adding 'x0 = *(*(*(e, x0), e), e)' to helper theorems.
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Extracting values from query...
2020-05-16 07:25:12.454148 [Thread 0x00003858] trace : Adding 'e = *(*(e, i(*(*(e, e), x0))), x0)' to helper theorems.
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Extracting values from query...
2020-05-16 07:25:12.454148 [Thread 0x00003858] trace : Adding 'i(i(e)) = e' to helper theorems.
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Extracting values from query...
2020-05-16 07:25:12.454148 [Thread 0x00003858] trace : Adding 'i(e) = *(*(i(i(e)), e), e)' to helper theorems.
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Extracting values from query...
2020-05-16 07:25:12.454148 [Thread 0x00003858] trace : Adding 'e = *(e, i(e))' to helper theorems.
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Extracting values from query...
2020-05-16 07:25:12.454148 [Thread 0x00003858] trace : Adding 'i(*(e, e)) = *(e, e)' to helper theorems.
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Extracting values from query...
2020-05-16 07:25:12.454148 [Thread 0x00003858] trace : Adding '*(i(x1), *(x1, i(*(x0, x1)))) = i(*(x0, x1))' to helper theorems.
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Extracting values from query...
2020-05-16 07:25:12.454148 [Thread 0x00003858] trace : Adding 'e = i(*(e, i(i(i(e)))))' to helper theorems.
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Extracting values from query...
2020-05-16 07:25:12.454148 [Thread 0x00003858] trace : Adding 'i(i(*(i(x0), x0))) = e' to helper theorems.
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.454148 [Thread 0x00003858] debug : Extracting values from query...
2020-05-16 07:25:12.455143 [Thread 0x00003858] trace : Adding 'i(i(i(i(*(i(e), e))))) = e' to helper theorems.
2020-05-16 07:25:12.455143 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.455143 [Thread 0x00003858] debug : Extracting values from query...
2020-05-16 07:25:12.455143 [Thread 0x00003858] trace : Adding 'i(i(*(e, i(i(e))))) = e' to helper theorems.
2020-05-16 07:25:12.455143 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.455143 [Thread 0x00003858] debug : Extracting values from query...
2020-05-16 07:25:12.455143 [Thread 0x00003858] trace : Adding '*(x0, i(x0)) = *(e, *(i(*(e, x0)), x0))' to helper theorems.
2020-05-16 07:25:12.455143 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.455143 [Thread 0x00003858] debug : Extracting values from query...
2020-05-16 07:25:12.455143 [Thread 0x00003858] trace : Adding 'e = *(*(e, i(e)), e)' to helper theorems.
2020-05-16 07:25:12.455143 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.455143 [Thread 0x00003858] debug : Extracting values from query...
2020-05-16 07:25:12.455143 [Thread 0x00003858] trace : Adding 'i(*(i(i(e)), e)) = e' to helper theorems.
2020-05-16 07:25:12.455143 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.455143 [Thread 0x00003858] debug : Extracting values from query...
2020-05-16 07:25:12.455143 [Thread 0x00003858] trace : Adding '*(e, e) = *(e, *(i(*(*(e, e), e)), e))' to helper theorems.
2020-05-16 07:25:12.455143 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.455143 [Thread 0x00003858] debug : Extracting values from query...
2020-05-16 07:25:12.455143 [Thread 0x00003858] trace : Adding 'i(i(i(i(e)))) = *(i(e), e)' to helper theorems.
2020-05-16 07:25:12.455143 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.455143 [Thread 0x00003858] debug : Extracting values from query...
2020-05-16 07:25:12.455143 [Thread 0x00003858] trace : Adding 'e = *(i(e), *(x0, i(x0)))' to helper theorems.
2020-05-16 07:25:12.455143 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.455143 [Thread 0x00003858] debug : Extracting values from query...
2020-05-16 07:25:12.455143 [Thread 0x00003858] trace : Adding '*(e, *(*(*(i(e), e), e), x0)) = x0' to helper theorems.
2020-05-16 07:25:12.455143 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:12.455143 [Thread 0x00003858] debug : Completed database transaction.
2020-05-16 07:25:12.455143 [Thread 0x00003858] trace : Finishing loading of proof data...
2020-05-16 07:25:12.458136 [Thread 0x00003858] info : Proof initialisation process loaded 50 theorems from the database. Now picking the best of them...
2020-05-16 07:25:12.460129 [Thread 0x00003858] trace : Selected "x0 = i(i(*(x0, e)))" as a good statement to help prove the target theorems (utility was 0.5).
2020-05-16 07:25:12.460129 [Thread 0x00003858] trace : Selected "*(e, *(*(*(i(e), e), e), x0)) = x0" as a good statement to help prove the target theorems (utility was 0.333333).
2020-05-16 07:25:12.460129 [Thread 0x00003858] trace : Selected "i(i(i(i(e)))) = *(i(e), e)" as a good statement to help prove the target theorems (utility was 0.333333).
2020-05-16 07:25:12.460129 [Thread 0x00003858] trace : Selected "i(i(*(e, i(i(e))))) = e" as a good statement to help prove the target theorems (utility was 0.333333).
2020-05-16 07:25:12.460129 [Thread 0x00003858] trace : Selected "i(i(i(i(*(i(e), e))))) = e" as a good statement to help prove the target theorems (utility was 0.333333).
2020-05-16 07:25:12.460129 [Thread 0x00003858] trace : Selected "i(i(*(i(x0), x0))) = e" as a good statement to help prove the target theorems (utility was 0.333333).
2020-05-16 07:25:12.460129 [Thread 0x00003858] trace : Selected "i(i(e)) = e" as a good statement to help prove the target theorems (utility was 0.333333).
2020-05-16 07:25:12.460129 [Thread 0x00003858] trace : Selected "x0 = *(*(*(e, x0), e), e)" as a good statement to help prove the target theorems (utility was 0.333333).
2020-05-16 07:25:12.460129 [Thread 0x00003858] trace : Selected "*(i(x0), *(x0, x0)) = x0" as a good statement to help prove the target theorems (utility was 0.333333).
2020-05-16 07:25:12.460129 [Thread 0x00003858] trace : Selected "*(e, e) = i(i(e))" as a good statement to help prove the target theorems (utility was 0.333333).
2020-05-16 07:25:12.460129 [Thread 0x00003858] info : Proof Process loaded and selected 10 theorems from the database to aid in the proof.
2020-05-16 07:25:12.460129 [Thread 0x00003858] debug : Finishing SQLite query...
2020-05-16 07:25:12.460129 [Thread 0x00003858] info : Beginning proof sequence...
2020-05-16 07:25:13.006703 [Thread 0x00003858] info : Proof Process: Step 1/10 : 1 proof(s) remaining.
2020-05-16 07:25:13.498356 [Thread 0x00003858] info : Proof Process: Step 2/10 : 1 proof(s) remaining.
2020-05-16 07:25:13.915912 [Thread 0x00003858] info : Proof Process: Step 3/10 : 1 proof(s) remaining.
2020-05-16 07:25:14.480370 [Thread 0x00003858] info : Proof Process: Step 4/10 : 1 proof(s) remaining.
2020-05-16 07:25:14.856060 [Thread 0x00003858] info : Proof Process: Step 5/10 : 1 proof(s) remaining.
2020-05-16 07:25:15.146318 [Thread 0x00003858] info : Proof Process: Step 6/10 : 1 proof(s) remaining.
2020-05-16 07:25:15.614236 [Thread 0x00003858] info : Proof Process: Step 7/10 : 1 proof(s) remaining.
2020-05-16 07:25:15.922378 [Thread 0x00003858] info : Proof Process: Step 8/10 : 1 proof(s) remaining.
2020-05-16 07:25:16.443984 [Thread 0x00003858] info : Proof Process: Step 9/10 : 0 proof(s) remaining.
2020-05-16 07:25:16.443984 [Thread 0x00003858] trace : Finished running solver, for 9/10 steps.
2020-05-16 07:25:16.443984 [Thread 0x00003858] info : Proof process finished proving! Results:
	1 theorem(s) were proven true,
	0 theorem(s) have no proof,
	0 theorem(s) did not finish in the allotted time.
2020-05-16 07:25:16.443984 [Thread 0x00003858] trace : Proof of "i(i(x0)) = x0" was successful; the statement is true.
2020-05-16 07:25:16.443984 [Thread 0x00003858] trace : 	Total time taken: 3.875s
2020-05-16 07:25:16.443984 [Thread 0x00003858] trace : 	Max nodes in memory: 98
2020-05-16 07:25:16.443984 [Thread 0x00003858] trace : 	Total node expansions: 4267
2020-05-16 07:25:16.443984 [Thread 0x00003858] trace : Creating Save Proof Results process...
2020-05-16 07:25:16.443984 [Thread 0x00003858] debug : Building query for query process...
2020-05-16 07:25:16.443984 [Thread 0x00003858] trace : Setting up result-saving query...
2020-05-16 07:25:16.443984 [Thread 0x00003858] debug : Obtained query builder.
2020-05-16 07:25:16.444981 [Thread 0x00003858] debug : Built query "INSERT INTO theorems (stmt, ctx) SELECT 'i(i(x0)) = x0', 1 WHERE NOT EXISTS(SELECT 1 FROM theorems WHERE stmt == 'i(i(x0)) = x0');

WITH my_thm(my_id) AS (SELECT id FROM theorems WHERE stmt = 'i(i(x0)) = x0')
INSERT INTO proof_attempts(thm_id, ss_id, time_cost, max_mem, num_expansions) VALUES ((SELECT my_id FROM my_thm), 3, 3.875, 98, 4267);

WITH my_thm(my_id) AS (SELECT id FROM theorems WHERE stmt = 'i(i(x0)) = x0')
INSERT OR IGNORE INTO proofs (thm_id, proof) SELECT (SELECT my_id FROM my_thm), 'i(i(x3)) = x3
i(*(e, i(x3))) = x3
i(*(e, i(*(x3, e)))) = x3
i(i(*(x3, e))) = x3' WHERE NOT EXISTS (SELECT 1 FROM proofs WHERE thm_id=(SELECT my_id FROM my_thm));

".
2020-05-16 07:25:16.444981 [Thread 0x00003858] trace : Beginning a transaction...
2020-05-16 07:25:16.444981 [Thread 0x00003858] debug : Successfully built SQLite statement from "INSERT INTO theorems (stmt, ctx) SELECT 'i(i(x0)) = x0', 1 WHERE NOT EXISTS(SELECT 1 FROM theorems WHERE stmt == 'i(i(x0)) = x0');".
2020-05-16 07:25:16.444981 [Thread 0x00003858] debug : Successfully built SQLite statement from "

WITH my_thm(my_id) AS (SELECT id FROM theorems WHERE stmt = 'i(i(x0)) = x0')
INSERT INTO proof_attempts(thm_id, ss_id, time_cost, max_mem, num_expansions) VALUES ((SELECT my_id FROM my_thm), 3, 3.875, 98, 4267);".
2020-05-16 07:25:16.444981 [Thread 0x00003858] debug : Successfully built SQLite statement from "

WITH my_thm(my_id) AS (SELECT id FROM theorems WHERE stmt = 'i(i(x0)) = x0')
INSERT OR IGNORE INTO proofs (thm_id, proof) SELECT (SELECT my_id FROM my_thm), 'i(i(x3)) = x3
i(*(e, i(x3))) = x3
i(*(e, i(*(x3, e)))) = x3
i(i(*(x3, e))) = x3' WHERE NOT EXISTS (SELECT 1 FROM proofs WHERE thm_id=(SELECT my_id FROM my_thm));".
2020-05-16 07:25:16.444981 [Thread 0x00003858] debug : Successfully built query!
2020-05-16 07:25:16.444981 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:16.445979 [Thread 0x00003858] debug : Finishing SQLite query...
2020-05-16 07:25:16.445979 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:16.467207 [Thread 0x00003858] debug : Finishing SQLite query...
2020-05-16 07:25:16.467207 [Thread 0x00003858] debug : Stepping SQLite statement...
2020-05-16 07:25:16.467207 [Thread 0x00003858] debug : Finishing SQLite query...
2020-05-16 07:25:16.467207 [Thread 0x00003858] debug : Completed database transaction.
2020-05-16 07:25:16.467207 [Thread 0x00003858] trace : Finishing saving proof results data.
2020-05-16 07:25:16.493136 [Thread 0x00003858] trace : Waiting for worker threads to join...
2020-05-16 07:25:16.493136 [Thread 0x00003858] trace : Done. Exiting...
2020-05-16 07:25:16.494134 [Thread 0x00003858] debug : Closing SQLite database...
2020-05-16 07:29:30.755050 [Thread 0x0000360c] trace : Starting up application...
2020-05-16 07:29:30.758041 [Thread 0x0000360c] trace : Successfully loaded database file at "../Data/DB/eqlogic.db"
2020-05-16 07:29:30.758041 [Thread 0x0000360c] debug : Querying SQLite database for model context name "group-theory".
2020-05-16 07:29:30.758041 [Thread 0x0000360c] trace : Beginning a transaction...
2020-05-16 07:29:30.760035 [Thread 0x0000360c] debug : Successfully built SQLite statement from "SELECT filename FROM model_contexts WHERE name = "group-theory";".
2020-05-16 07:29:30.760035 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.760035 [Thread 0x0000360c] debug : Finishing SQLite query...
2020-05-16 07:29:30.760035 [Thread 0x0000360c] debug : Querying SQLite database for model context name "group-theory".
2020-05-16 07:29:30.760035 [Thread 0x0000360c] trace : Beginning a transaction...
2020-05-16 07:29:30.760035 [Thread 0x0000360c] debug : Successfully built SQLite statement from "SELECT ctx_id FROM model_contexts WHERE name = "group-theory";".
2020-05-16 07:29:30.760035 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.760035 [Thread 0x0000360c] debug : Finishing SQLite query...
2020-05-16 07:29:30.761033 [Thread 0x0000360c] trace : Successfully loaded the context file "Group Theory".
2020-05-16 07:29:30.761033 [Thread 0x0000360c] trace : Checking that the model context's axioms are loaded in the database properly, before we begin...
2020-05-16 07:29:30.762030 [Thread 0x0000360c] trace : Beginning a transaction...
2020-05-16 07:29:30.762030 [Thread 0x0000360c] debug : Successfully built SQLite statement from "INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(*(x0, x1), x2) = *(x0, *(x1, x2))', 1);".
2020-05-16 07:29:30.762030 [Thread 0x0000360c] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(*(x0, x1), x2) = *(x0, *(x1, x2))'), 1);".
2020-05-16 07:29:30.762030 [Thread 0x0000360c] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(x0, e) = x0', 1);".
2020-05-16 07:29:30.762030 [Thread 0x0000360c] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(x0, e) = x0'), 1);".
2020-05-16 07:29:30.762030 [Thread 0x0000360c] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(e, x0) = x0', 1);".
2020-05-16 07:29:30.762030 [Thread 0x0000360c] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(e, x0) = x0'), 1);".
2020-05-16 07:29:30.762030 [Thread 0x0000360c] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(x0, i(x0)) = e', 1);".
2020-05-16 07:29:30.762030 [Thread 0x0000360c] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(x0, i(x0)) = e'), 1);".
2020-05-16 07:29:30.762030 [Thread 0x0000360c] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(i(x0), x0) = e', 1);".
2020-05-16 07:29:30.762030 [Thread 0x0000360c] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(i(x0), x0) = e'), 1);".
2020-05-16 07:29:30.762030 [Thread 0x0000360c] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(x0, *(x1, x2)) = *(*(x0, x1), x2)', 1);".
2020-05-16 07:29:30.762030 [Thread 0x0000360c] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(x0, *(x1, x2)) = *(*(x0, x1), x2)'), 1);".
2020-05-16 07:29:30.762030 [Thread 0x0000360c] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(x0, *(x1, x2)) = *(*(x0, x1), x2)', 1);".
2020-05-16 07:29:30.763027 [Thread 0x0000360c] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(x0, *(x1, x2)) = *(*(x0, x1), x2)'), 1);".
2020-05-16 07:29:30.763027 [Thread 0x0000360c] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(x0, *(x1, x2)) = *(*(x0, x1), x2)', 1);".
2020-05-16 07:29:30.763027 [Thread 0x0000360c] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(x0, *(x1, x2)) = *(*(x0, x1), x2)'), 1);".
2020-05-16 07:29:30.763027 [Thread 0x0000360c] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(x0, *(x1, x2)) = *(*(x0, x1), x2)', 1);".
2020-05-16 07:29:30.763027 [Thread 0x0000360c] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(x0, *(x1, x2)) = *(*(x0, x1), x2)'), 1);".
2020-05-16 07:29:30.763027 [Thread 0x0000360c] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(x0, *(x1, x2)) = *(*(x0, x1), x2)', 1);".
2020-05-16 07:29:30.763027 [Thread 0x0000360c] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(x0, *(x1, x2)) = *(*(x0, x1), x2)'), 1);".
2020-05-16 07:29:30.763027 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.783296 [Thread 0x0000360c] debug : Finishing SQLite query...
2020-05-16 07:29:30.783296 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.784257 [Thread 0x0000360c] debug : Finishing SQLite query...
2020-05-16 07:29:30.784257 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.793234 [Thread 0x0000360c] debug : Finishing SQLite query...
2020-05-16 07:29:30.793234 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.793234 [Thread 0x0000360c] debug : Finishing SQLite query...
2020-05-16 07:29:30.793234 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.803226 [Thread 0x0000360c] debug : Finishing SQLite query...
2020-05-16 07:29:30.803226 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.803226 [Thread 0x0000360c] debug : Finishing SQLite query...
2020-05-16 07:29:30.803226 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.813242 [Thread 0x0000360c] debug : Finishing SQLite query...
2020-05-16 07:29:30.813242 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.813242 [Thread 0x0000360c] debug : Finishing SQLite query...
2020-05-16 07:29:30.813242 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.823488 [Thread 0x0000360c] debug : Finishing SQLite query...
2020-05-16 07:29:30.824424 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.824424 [Thread 0x0000360c] debug : Finishing SQLite query...
2020-05-16 07:29:30.824424 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.833393 [Thread 0x0000360c] debug : Finishing SQLite query...
2020-05-16 07:29:30.833393 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.834391 [Thread 0x0000360c] debug : Finishing SQLite query...
2020-05-16 07:29:30.834391 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.843456 [Thread 0x0000360c] debug : Finishing SQLite query...
2020-05-16 07:29:30.843456 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.843456 [Thread 0x0000360c] debug : Finishing SQLite query...
2020-05-16 07:29:30.843456 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.852450 [Thread 0x0000360c] debug : Finishing SQLite query...
2020-05-16 07:29:30.852450 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.853449 [Thread 0x0000360c] debug : Finishing SQLite query...
2020-05-16 07:29:30.853449 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.862605 [Thread 0x0000360c] debug : Finishing SQLite query...
2020-05-16 07:29:30.862605 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.863421 [Thread 0x0000360c] debug : Finishing SQLite query...
2020-05-16 07:29:30.863421 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.872393 [Thread 0x0000360c] debug : Finishing SQLite query...
2020-05-16 07:29:30.872393 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.873393 [Thread 0x0000360c] debug : Finishing SQLite query...
2020-05-16 07:29:30.873393 [Thread 0x0000360c] trace : Successfully checked the axioms are set up in the database properly.
2020-05-16 07:29:30.873393 [Thread 0x0000360c] debug : Querying SQLite database for model context name "ids-informed-limited".
2020-05-16 07:29:30.873393 [Thread 0x0000360c] trace : Beginning a transaction...
2020-05-16 07:29:30.873393 [Thread 0x0000360c] debug : Successfully built SQLite statement from "SELECT filename FROM search_settings WHERE name = "ids-informed-limited";".
2020-05-16 07:29:30.873393 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.873393 [Thread 0x0000360c] debug : Finishing SQLite query...
2020-05-16 07:29:30.873393 [Thread 0x0000360c] debug : Querying SQLite database for model context name "ids-informed-limited".
2020-05-16 07:29:30.873393 [Thread 0x0000360c] trace : Beginning a transaction...
2020-05-16 07:29:30.873393 [Thread 0x0000360c] debug : Successfully built SQLite statement from "SELECT ss_id FROM search_settings WHERE name = "ids-informed-limited";".
2020-05-16 07:29:30.873393 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.873393 [Thread 0x0000360c] debug : Finishing SQLite query...
2020-05-16 07:29:30.874421 [Thread 0x0000360c] trace : Successfully loaded search settings "Informed Limited Iterative-Deepening Solver"
2020-05-16 07:29:30.874421 [Thread 0x0000360c] trace : Successfully loaded statements " i(i(x0)) = x0 ". Creating corresponding proof process...
2020-05-16 07:29:30.874421 [Thread 0x0000360c] trace : Committing main thread...
2020-05-16 07:29:30.874421 [Thread 0x0000360c] trace : Creating proof initialisation process...
2020-05-16 07:29:30.874421 [Thread 0x0000360c] trace : Creating knowledge kernel...
2020-05-16 07:29:30.874421 [Thread 0x0000360c] trace : Creating solver...
2020-05-16 07:29:30.877416 [Thread 0x0000360c] debug : Building query for query process...
2020-05-16 07:29:30.877416 [Thread 0x0000360c] trace : Setting up kernel initialisation query...
2020-05-16 07:29:30.877416 [Thread 0x0000360c] debug : Obtained query builder.
2020-05-16 07:29:30.877416 [Thread 0x0000360c] debug : Built query "SELECT stmt FROM theorems WHERE ctx = 1 AND  EXISTS (SELECT 1 FROM proofs WHERE thm_id=id AND is_axiom = 0) ORDER BY RANDOM() LIMIT 50;".
2020-05-16 07:29:30.877416 [Thread 0x0000360c] trace : Beginning a transaction...
2020-05-16 07:29:30.877416 [Thread 0x0000360c] debug : Successfully built SQLite statement from "SELECT stmt FROM theorems WHERE ctx = 1 AND  EXISTS (SELECT 1 FROM proofs WHERE thm_id=id AND is_axiom = 0) ORDER BY RANDOM() LIMIT 50;".
2020-05-16 07:29:30.877416 [Thread 0x0000360c] debug : Successfully built query!
2020-05-16 07:29:30.877416 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.879410 [Thread 0x0000360c] debug : Extracting values from query...
2020-05-16 07:29:30.879410 [Thread 0x0000360c] trace : Adding 'x0 = *(i(e), x0)' to helper theorems.
2020-05-16 07:29:30.879410 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.879410 [Thread 0x0000360c] debug : Extracting values from query...
2020-05-16 07:29:30.879410 [Thread 0x0000360c] trace : Adding 'x0 = *(*(x0, e), e)' to helper theorems.
2020-05-16 07:29:30.879410 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.879410 [Thread 0x0000360c] debug : Extracting values from query...
2020-05-16 07:29:30.879410 [Thread 0x0000360c] trace : Adding 'i(*(e, i(e))) = e' to helper theorems.
2020-05-16 07:29:30.879410 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.879410 [Thread 0x0000360c] debug : Extracting values from query...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] trace : Adding 'i(*(x1, x0)) = *(*(i(x0), x0), i(*(x1, x0)))' to helper theorems.
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Extracting values from query...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] trace : Adding '*(i(x0), *(x0, x0)) = x0' to helper theorems.
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Extracting values from query...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] trace : Adding 'e = *(*(i(*(e, e)), e), e)' to helper theorems.
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Extracting values from query...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] trace : Adding 'i(*(x0, x1)) = *(e, i(*(x0, x1)))' to helper theorems.
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Extracting values from query...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] trace : Adding 'e = *(i(e), *(i(x0), x0))' to helper theorems.
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Extracting values from query...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] trace : Adding 'x0 = *(*(e, i(*(e, e))), x0)' to helper theorems.
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Extracting values from query...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] trace : Adding '*(e, i(i(e))) = e' to helper theorems.
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Extracting values from query...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] trace : Adding 'i(x0) = i(i(*(e, i(x0))))' to helper theorems.
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Extracting values from query...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] trace : Adding 'i(e) = *(*(i(e), *(i(e), e)), e)' to helper theorems.
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Extracting values from query...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] trace : Adding 'x0 = *(*(*(e, x0), e), e)' to helper theorems.
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Extracting values from query...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] trace : Adding 'i(e) = *(i(i(*(e, i(e)))), e)' to helper theorems.
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Extracting values from query...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] trace : Adding 'i(*(x1, x0)) = *(i(x0), *(x0, i(*(x1, x0))))' to helper theorems.
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Extracting values from query...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] trace : Adding '*(i(x0), x0) = i(e)' to helper theorems.
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Extracting values from query...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] trace : Adding '*(i(*(*(i(x0), x0), e)), e) = e' to helper theorems.
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Extracting values from query...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] trace : Adding '*(i(i(i(e))), e) = e' to helper theorems.
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Extracting values from query...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] trace : Adding 'e = *(i(e), *(e, e))' to helper theorems.
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Extracting values from query...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] trace : Adding 'i(*(x1, x0)) = *(i(x0), *(i(x1), *(*(x1, x0), i(*(x1, x0)))))' to helper theorems.
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Extracting values from query...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] trace : Adding 'e = *(*(*(e, e), e), e)' to helper theorems.
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Extracting values from query...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] trace : Adding 'e = *(*(e, i(*(e, i(e)))), e)' to helper theorems.
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Extracting values from query...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] trace : Adding 'i(e) = *(e, *(x0, i(x0)))' to helper theorems.
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Extracting values from query...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] trace : Adding '*(i(*(x0, i(x0))), e) = e' to helper theorems.
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Extracting values from query...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] trace : Adding 'x0 = i(i(*(e, x0)))' to helper theorems.
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Extracting values from query...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] trace : Adding '*(i(e), x0) = x0' to helper theorems.
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Extracting values from query...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] trace : Adding '*(*(i(i(e)), e), *(i(e), i(e))) = e' to helper theorems.
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Extracting values from query...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] trace : Adding '*(e, e) = *(e, e)' to helper theorems.
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Extracting values from query...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] trace : Adding 'i(*(*(*(e, e), e), e)) = e' to helper theorems.
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Extracting values from query...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] trace : Adding 'e = *(*(e, x0), i(*(e, x0)))' to helper theorems.
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Extracting values from query...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] trace : Adding 'i(i(i(x0))) = *(e, i(x0))' to helper theorems.
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Extracting values from query...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] trace : Adding 'e = *(*(e, e), i(e))' to helper theorems.
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Extracting values from query...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] trace : Adding 'x0 = *(i(i(*(x0, i(i(e))))), e)' to helper theorems.
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Extracting values from query...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] trace : Adding '*(x0, *(i(x0), i(i(x0)))) = x0' to helper theorems.
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Extracting values from query...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] trace : Adding '*(i(x1), *(*(i(x0), x0), *(x1, i(*(x0, x1))))) = i(*(x0, x1))' to helper theorems.
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Extracting values from query...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] trace : Adding 'i(e) = *(e, *(*(x0, i(x0)), e))' to helper theorems.
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Extracting values from query...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] trace : Adding '*(e, e) = *(e, *(i(*(*(e, e), e)), e))' to helper theorems.
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Extracting values from query...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] trace : Adding '*(*(e, e), x0) = x0' to helper theorems.
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Extracting values from query...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] trace : Adding 'i(i(i(i(e)))) = *(i(e), e)' to helper theorems.
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Extracting values from query...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] trace : Adding '*(e, *(*(*(i(e), e), e), x0)) = x0' to helper theorems.
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Extracting values from query...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] trace : Adding 'i(*(i(e), e)) = e' to helper theorems.
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Extracting values from query...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] trace : Adding 'e = *(*(e, i(x0)), x0)' to helper theorems.
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Extracting values from query...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] trace : Adding 'i(e) = e' to helper theorems.
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Extracting values from query...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] trace : Adding 'x0 = i(*(e, i(x0)))' to helper theorems.
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] debug : Extracting values from query...
2020-05-16 07:29:30.880406 [Thread 0x0000360c] trace : Adding '*(i(*(e, e)), e) = e' to helper theorems.
2020-05-16 07:29:30.881403 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.881403 [Thread 0x0000360c] debug : Extracting values from query...
2020-05-16 07:29:30.881403 [Thread 0x0000360c] trace : Adding 'i(i(e)) = i(e)' to helper theorems.
2020-05-16 07:29:30.881403 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.881403 [Thread 0x0000360c] debug : Extracting values from query...
2020-05-16 07:29:30.881403 [Thread 0x0000360c] trace : Adding '*(i(*(*(e, *(e, e)), e)), e) = e' to helper theorems.
2020-05-16 07:29:30.881403 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.881403 [Thread 0x0000360c] debug : Extracting values from query...
2020-05-16 07:29:30.881403 [Thread 0x0000360c] trace : Adding '*(*(e, i(e)), e) = e' to helper theorems.
2020-05-16 07:29:30.881403 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.881403 [Thread 0x0000360c] debug : Extracting values from query...
2020-05-16 07:29:30.881403 [Thread 0x0000360c] trace : Adding 'x0 = *(x0, e)' to helper theorems.
2020-05-16 07:29:30.881403 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.881403 [Thread 0x0000360c] debug : Extracting values from query...
2020-05-16 07:29:30.881403 [Thread 0x0000360c] trace : Adding 'i(i(i(e))) = e' to helper theorems.
2020-05-16 07:29:30.881403 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.881403 [Thread 0x0000360c] debug : Completed database transaction.
2020-05-16 07:29:30.881403 [Thread 0x0000360c] trace : Finishing loading of proof data...
2020-05-16 07:29:30.883398 [Thread 0x0000360c] info : Proof initialisation process loaded 50 theorems from the database. Now picking the best of them...
2020-05-16 07:29:30.885396 [Thread 0x0000360c] trace : Selected "x0 = i(i(*(e, x0)))" as a good statement to help prove the target theorems (utility was 0.5).
2020-05-16 07:29:30.885396 [Thread 0x0000360c] trace : Selected "i(i(i(e))) = e" as a good statement to help prove the target theorems (utility was 0.333333).
2020-05-16 07:29:30.885396 [Thread 0x0000360c] trace : Selected "x0 = *(x0, e)" as a good statement to help prove the target theorems (utility was 0.333333).
2020-05-16 07:29:30.885396 [Thread 0x0000360c] trace : Selected "i(i(e)) = i(e)" as a good statement to help prove the target theorems (utility was 0.333333).
2020-05-16 07:29:30.885396 [Thread 0x0000360c] trace : Selected "x0 = i(*(e, i(x0)))" as a good statement to help prove the target theorems (utility was 0.333333).
2020-05-16 07:29:30.885396 [Thread 0x0000360c] trace : Selected "*(e, *(*(*(i(e), e), e), x0)) = x0" as a good statement to help prove the target theorems (utility was 0.333333).
2020-05-16 07:29:30.885396 [Thread 0x0000360c] trace : Selected "i(i(i(i(e)))) = *(i(e), e)" as a good statement to help prove the target theorems (utility was 0.333333).
2020-05-16 07:29:30.885396 [Thread 0x0000360c] trace : Selected "*(*(e, e), x0) = x0" as a good statement to help prove the target theorems (utility was 0.333333).
2020-05-16 07:29:30.885396 [Thread 0x0000360c] trace : Selected "*(x0, *(i(x0), i(i(x0)))) = x0" as a good statement to help prove the target theorems (utility was 0.333333).
2020-05-16 07:29:30.885396 [Thread 0x0000360c] trace : Selected "x0 = *(i(i(*(x0, i(i(e))))), e)" as a good statement to help prove the target theorems (utility was 0.333333).
2020-05-16 07:29:30.885396 [Thread 0x0000360c] info : Proof Process loaded and selected 10 theorems from the database to aid in the proof.
2020-05-16 07:29:30.885396 [Thread 0x0000360c] debug : Finishing SQLite query...
2020-05-16 07:29:30.885396 [Thread 0x0000360c] info : Beginning proof sequence...
2020-05-16 07:29:30.885396 [Thread 0x0000360c] info : Proof Process: Step 1/10 : 0 proof(s) remaining.
2020-05-16 07:29:30.885396 [Thread 0x0000360c] trace : Finished running solver, for 1/10 steps.
2020-05-16 07:29:30.885396 [Thread 0x0000360c] info : Proof process finished proving! Results:
	1 theorem(s) were proven true,
	0 theorem(s) have no proof,
	0 theorem(s) did not finish in the allotted time.
2020-05-16 07:29:30.885396 [Thread 0x0000360c] trace : Proof of "i(i(x0)) = x0" was successful; the statement is true.
2020-05-16 07:29:30.885396 [Thread 0x0000360c] trace : 	Total time taken: 0s
2020-05-16 07:29:30.885396 [Thread 0x0000360c] trace : 	Max nodes in memory: 1
2020-05-16 07:29:30.885396 [Thread 0x0000360c] trace : 	Total node expansions: 2
2020-05-16 07:29:30.885396 [Thread 0x0000360c] trace : Creating Save Proof Results process...
2020-05-16 07:29:30.885396 [Thread 0x0000360c] debug : Building query for query process...
2020-05-16 07:29:30.885396 [Thread 0x0000360c] trace : Setting up result-saving query...
2020-05-16 07:29:30.885396 [Thread 0x0000360c] debug : Obtained query builder.
2020-05-16 07:29:30.886394 [Thread 0x0000360c] debug : Built query "INSERT INTO theorems (stmt, ctx) SELECT 'i(i(x0)) = x0', 1 WHERE NOT EXISTS(SELECT 1 FROM theorems WHERE stmt == 'i(i(x0)) = x0');

WITH my_thm(my_id) AS (SELECT id FROM theorems WHERE stmt = 'i(i(x0)) = x0')
INSERT INTO proof_attempts(thm_id, ss_id, time_cost, max_mem, num_expansions) VALUES ((SELECT my_id FROM my_thm), 3, 0, 1, 2);

WITH my_thm(my_id) AS (SELECT id FROM theorems WHERE stmt = 'i(i(x0)) = x0')
INSERT OR IGNORE INTO proofs (thm_id, proof) SELECT (SELECT my_id FROM my_thm), 'i(i(x3)) = x3
i(*(e, i(x3))) = x3' WHERE NOT EXISTS (SELECT 1 FROM proofs WHERE thm_id=(SELECT my_id FROM my_thm));

".
2020-05-16 07:29:30.886394 [Thread 0x0000360c] trace : Beginning a transaction...
2020-05-16 07:29:30.886394 [Thread 0x0000360c] debug : Successfully built SQLite statement from "INSERT INTO theorems (stmt, ctx) SELECT 'i(i(x0)) = x0', 1 WHERE NOT EXISTS(SELECT 1 FROM theorems WHERE stmt == 'i(i(x0)) = x0');".
2020-05-16 07:29:30.886394 [Thread 0x0000360c] debug : Successfully built SQLite statement from "

WITH my_thm(my_id) AS (SELECT id FROM theorems WHERE stmt = 'i(i(x0)) = x0')
INSERT INTO proof_attempts(thm_id, ss_id, time_cost, max_mem, num_expansions) VALUES ((SELECT my_id FROM my_thm), 3, 0, 1, 2);".
2020-05-16 07:29:30.886394 [Thread 0x0000360c] debug : Successfully built SQLite statement from "

WITH my_thm(my_id) AS (SELECT id FROM theorems WHERE stmt = 'i(i(x0)) = x0')
INSERT OR IGNORE INTO proofs (thm_id, proof) SELECT (SELECT my_id FROM my_thm), 'i(i(x3)) = x3
i(*(e, i(x3))) = x3' WHERE NOT EXISTS (SELECT 1 FROM proofs WHERE thm_id=(SELECT my_id FROM my_thm));".
2020-05-16 07:29:30.886394 [Thread 0x0000360c] debug : Successfully built query!
2020-05-16 07:29:30.886394 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.887352 [Thread 0x0000360c] debug : Finishing SQLite query...
2020-05-16 07:29:30.887352 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.897331 [Thread 0x0000360c] debug : Finishing SQLite query...
2020-05-16 07:29:30.897331 [Thread 0x0000360c] debug : Stepping SQLite statement...
2020-05-16 07:29:30.897331 [Thread 0x0000360c] debug : Finishing SQLite query...
2020-05-16 07:29:30.897331 [Thread 0x0000360c] debug : Completed database transaction.
2020-05-16 07:29:30.897331 [Thread 0x0000360c] trace : Finishing saving proof results data.
2020-05-16 07:29:30.898352 [Thread 0x0000360c] trace : Waiting for worker threads to join...
2020-05-16 07:29:30.898352 [Thread 0x0000360c] trace : Done. Exiting...
2020-05-16 07:29:30.898352 [Thread 0x0000360c] debug : Closing SQLite database...
2020-05-16 07:30:56.000072 [Thread 0x00002be8] trace : Starting up application...
2020-05-16 07:30:56.002075 [Thread 0x00002be8] trace : Successfully loaded database file at "../Data/DB/eqlogic.db"
2020-05-16 07:30:56.002075 [Thread 0x00002be8] debug : Querying SQLite database for model context name "group-theory".
2020-05-16 07:30:56.002075 [Thread 0x00002be8] trace : Beginning a transaction...
2020-05-16 07:30:56.004035 [Thread 0x00002be8] debug : Successfully built SQLite statement from "SELECT filename FROM model_contexts WHERE name = "group-theory";".
2020-05-16 07:30:56.004035 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.004035 [Thread 0x00002be8] debug : Finishing SQLite query...
2020-05-16 07:30:56.004035 [Thread 0x00002be8] debug : Querying SQLite database for model context name "group-theory".
2020-05-16 07:30:56.004035 [Thread 0x00002be8] trace : Beginning a transaction...
2020-05-16 07:30:56.004035 [Thread 0x00002be8] debug : Successfully built SQLite statement from "SELECT ctx_id FROM model_contexts WHERE name = "group-theory";".
2020-05-16 07:30:56.004035 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.005045 [Thread 0x00002be8] debug : Finishing SQLite query...
2020-05-16 07:30:56.006030 [Thread 0x00002be8] trace : Successfully loaded the context file "Group Theory".
2020-05-16 07:30:56.006030 [Thread 0x00002be8] trace : Checking that the model context's axioms are loaded in the database properly, before we begin...
2020-05-16 07:30:56.007069 [Thread 0x00002be8] trace : Beginning a transaction...
2020-05-16 07:30:56.007069 [Thread 0x00002be8] debug : Successfully built SQLite statement from "INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(*(x0, x1), x2) = *(x0, *(x1, x2))', 1);".
2020-05-16 07:30:56.007069 [Thread 0x00002be8] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(*(x0, x1), x2) = *(x0, *(x1, x2))'), 1);".
2020-05-16 07:30:56.007069 [Thread 0x00002be8] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(x0, e) = x0', 1);".
2020-05-16 07:30:56.007069 [Thread 0x00002be8] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(x0, e) = x0'), 1);".
2020-05-16 07:30:56.007069 [Thread 0x00002be8] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(e, x0) = x0', 1);".
2020-05-16 07:30:56.007069 [Thread 0x00002be8] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(e, x0) = x0'), 1);".
2020-05-16 07:30:56.007069 [Thread 0x00002be8] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(x0, i(x0)) = e', 1);".
2020-05-16 07:30:56.007069 [Thread 0x00002be8] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(x0, i(x0)) = e'), 1);".
2020-05-16 07:30:56.007069 [Thread 0x00002be8] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(i(x0), x0) = e', 1);".
2020-05-16 07:30:56.007069 [Thread 0x00002be8] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(i(x0), x0) = e'), 1);".
2020-05-16 07:30:56.007069 [Thread 0x00002be8] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(x0, *(x1, x2)) = *(*(x0, x1), x2)', 1);".
2020-05-16 07:30:56.007069 [Thread 0x00002be8] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(x0, *(x1, x2)) = *(*(x0, x1), x2)'), 1);".
2020-05-16 07:30:56.007069 [Thread 0x00002be8] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(x0, *(x1, x2)) = *(*(x0, x1), x2)', 1);".
2020-05-16 07:30:56.007069 [Thread 0x00002be8] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(x0, *(x1, x2)) = *(*(x0, x1), x2)'), 1);".
2020-05-16 07:30:56.007069 [Thread 0x00002be8] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(x0, *(x1, x2)) = *(*(x0, x1), x2)', 1);".
2020-05-16 07:30:56.007069 [Thread 0x00002be8] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(x0, *(x1, x2)) = *(*(x0, x1), x2)'), 1);".
2020-05-16 07:30:56.007069 [Thread 0x00002be8] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(x0, *(x1, x2)) = *(*(x0, x1), x2)', 1);".
2020-05-16 07:30:56.008058 [Thread 0x00002be8] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(x0, *(x1, x2)) = *(*(x0, x1), x2)'), 1);".
2020-05-16 07:30:56.008058 [Thread 0x00002be8] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO theorems(stmt, ctx) VALUES ( '*(x0, *(x1, x2)) = *(*(x0, x1), x2)', 1);".
2020-05-16 07:30:56.008058 [Thread 0x00002be8] debug : Successfully built SQLite statement from "

INSERT OR IGNORE INTO proofs(thm_id, is_axiom) VALUES ((SELECT id FROM theorems WHERE stmt='*(x0, *(x1, x2)) = *(*(x0, x1), x2)'), 1);".
2020-05-16 07:30:56.008058 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.028260 [Thread 0x00002be8] debug : Finishing SQLite query...
2020-05-16 07:30:56.028260 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.028260 [Thread 0x00002be8] debug : Finishing SQLite query...
2020-05-16 07:30:56.028260 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.037238 [Thread 0x00002be8] debug : Finishing SQLite query...
2020-05-16 07:30:56.038230 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.038230 [Thread 0x00002be8] debug : Finishing SQLite query...
2020-05-16 07:30:56.038230 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.048204 [Thread 0x00002be8] debug : Finishing SQLite query...
2020-05-16 07:30:56.048204 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.048204 [Thread 0x00002be8] debug : Finishing SQLite query...
2020-05-16 07:30:56.048204 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.058180 [Thread 0x00002be8] debug : Finishing SQLite query...
2020-05-16 07:30:56.058180 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.058180 [Thread 0x00002be8] debug : Finishing SQLite query...
2020-05-16 07:30:56.058180 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.068149 [Thread 0x00002be8] debug : Finishing SQLite query...
2020-05-16 07:30:56.068149 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.068149 [Thread 0x00002be8] debug : Finishing SQLite query...
2020-05-16 07:30:56.068149 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.079120 [Thread 0x00002be8] debug : Finishing SQLite query...
2020-05-16 07:30:56.079120 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.079120 [Thread 0x00002be8] debug : Finishing SQLite query...
2020-05-16 07:30:56.079120 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.090092 [Thread 0x00002be8] debug : Finishing SQLite query...
2020-05-16 07:30:56.090092 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.090092 [Thread 0x00002be8] debug : Finishing SQLite query...
2020-05-16 07:30:56.091123 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.100067 [Thread 0x00002be8] debug : Finishing SQLite query...
2020-05-16 07:30:56.100067 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.100067 [Thread 0x00002be8] debug : Finishing SQLite query...
2020-05-16 07:30:56.100067 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.109225 [Thread 0x00002be8] debug : Finishing SQLite query...
2020-05-16 07:30:56.109225 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.110056 [Thread 0x00002be8] debug : Finishing SQLite query...
2020-05-16 07:30:56.110056 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.120010 [Thread 0x00002be8] debug : Finishing SQLite query...
2020-05-16 07:30:56.120010 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.121008 [Thread 0x00002be8] debug : Finishing SQLite query...
2020-05-16 07:30:56.121008 [Thread 0x00002be8] trace : Successfully checked the axioms are set up in the database properly.
2020-05-16 07:30:56.121008 [Thread 0x00002be8] debug : Querying SQLite database for model context name "ids-informed-limited".
2020-05-16 07:30:56.121008 [Thread 0x00002be8] trace : Beginning a transaction...
2020-05-16 07:30:56.121008 [Thread 0x00002be8] debug : Successfully built SQLite statement from "SELECT filename FROM search_settings WHERE name = "ids-informed-limited";".
2020-05-16 07:30:56.121008 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.121008 [Thread 0x00002be8] debug : Finishing SQLite query...
2020-05-16 07:30:56.121008 [Thread 0x00002be8] debug : Querying SQLite database for model context name "ids-informed-limited".
2020-05-16 07:30:56.121008 [Thread 0x00002be8] trace : Beginning a transaction...
2020-05-16 07:30:56.121008 [Thread 0x00002be8] debug : Successfully built SQLite statement from "SELECT ss_id FROM search_settings WHERE name = "ids-informed-limited";".
2020-05-16 07:30:56.121008 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.121008 [Thread 0x00002be8] debug : Finishing SQLite query...
2020-05-16 07:30:56.122042 [Thread 0x00002be8] trace : Successfully loaded search settings "Informed Limited Iterative-Deepening Solver"
2020-05-16 07:30:56.122042 [Thread 0x00002be8] trace : Successfully loaded statements " i(i(x0)) = x0 ". Creating corresponding proof process...
2020-05-16 07:30:56.122042 [Thread 0x00002be8] trace : Committing main thread...
2020-05-16 07:30:56.122042 [Thread 0x00002be8] trace : Creating proof initialisation process...
2020-05-16 07:30:56.122042 [Thread 0x00002be8] trace : Creating knowledge kernel...
2020-05-16 07:30:56.122042 [Thread 0x00002be8] trace : Creating solver...
2020-05-16 07:30:56.124032 [Thread 0x00002be8] debug : Building query for query process...
2020-05-16 07:30:56.124032 [Thread 0x00002be8] trace : Setting up kernel initialisation query...
2020-05-16 07:30:56.124032 [Thread 0x00002be8] debug : Obtained query builder.
2020-05-16 07:30:56.124032 [Thread 0x00002be8] debug : Built query "SELECT stmt FROM theorems WHERE ctx = 1 AND  EXISTS (SELECT 1 FROM proofs WHERE thm_id=id AND is_axiom = 0) ORDER BY RANDOM() LIMIT 50;".
2020-05-16 07:30:56.124032 [Thread 0x00002be8] trace : Beginning a transaction...
2020-05-16 07:30:56.124032 [Thread 0x00002be8] debug : Successfully built SQLite statement from "SELECT stmt FROM theorems WHERE ctx = 1 AND  EXISTS (SELECT 1 FROM proofs WHERE thm_id=id AND is_axiom = 0) ORDER BY RANDOM() LIMIT 50;".
2020-05-16 07:30:56.124032 [Thread 0x00002be8] debug : Successfully built query!
2020-05-16 07:30:56.124032 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Extracting values from query...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] trace : Adding 'i(*(x1, x0)) = *(i(x0), *(x0, i(*(x1, x0))))' to helper theorems.
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Extracting values from query...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] trace : Adding '*(e, e) = *(i(e), i(e))' to helper theorems.
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Extracting values from query...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] trace : Adding 'x0 = *(i(i(*(x0, e))), e)' to helper theorems.
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Extracting values from query...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] trace : Adding 'e = *(e, *(i(e), *(e, e)))' to helper theorems.
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Extracting values from query...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] trace : Adding 'e = *(i(*(i(i(*(e, e))), i(e))), e)' to helper theorems.
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Extracting values from query...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] trace : Adding 'i(i(i(i(e)))) = *(i(e), e)' to helper theorems.
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Extracting values from query...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] trace : Adding 'x0 = *(x0, *(e, e))' to helper theorems.
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Extracting values from query...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] trace : Adding 'i(*(i(i(e)), e)) = e' to helper theorems.
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Extracting values from query...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] trace : Adding 'i(i(i(e))) = *(e, i(i(i(e))))' to helper theorems.
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Extracting values from query...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] trace : Adding 'i(*(*(*(e, e), e), e)) = e' to helper theorems.
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Extracting values from query...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] trace : Adding 'i(x0) = i(i(*(e, i(x0))))' to helper theorems.
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Extracting values from query...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] trace : Adding '*(e, i(*(e, e))) = e' to helper theorems.
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Extracting values from query...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] trace : Adding 'i(*(x1, x0)) = *(*(i(x0), i(x1)), *(*(x1, x0), i(*(x1, x0))))' to helper theorems.
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Extracting values from query...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] trace : Adding '*(i(i(*(e, e))), x0) = x0' to helper theorems.
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Extracting values from query...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] trace : Adding 'e = *(x0, i(x0))' to helper theorems.
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Extracting values from query...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] trace : Adding '*(e, i(i(x0))) = x0' to helper theorems.
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Extracting values from query...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] trace : Adding 'i(*(e, i(e))) = e' to helper theorems.
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Extracting values from query...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] trace : Adding 'e = *(i(*(e, e)), i(i(i(e))))' to helper theorems.
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Extracting values from query...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] trace : Adding '*(i(e), i(e)) = e' to helper theorems.
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Extracting values from query...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] trace : Adding 'e = *(e, i(i(i(e))))' to helper theorems.
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Extracting values from query...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] trace : Adding '*(e, i(e)) = i(e)' to helper theorems.
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Extracting values from query...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] trace : Adding '*(e, e) = i(i(e))' to helper theorems.
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Extracting values from query...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] trace : Adding '*(i(x1), *(e, *(x1, i(*(x0, x1))))) = i(*(x0, x1))' to helper theorems.
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Extracting values from query...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] trace : Adding 'e = *(e, *(*(e, i(*(e, e))), e))' to helper theorems.
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Extracting values from query...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] trace : Adding '*(x0, i(x0)) = *(*(e, *(e, e)), e)' to helper theorems.
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Extracting values from query...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] trace : Adding 'e = *(i(*(i(x0), x0)), e)' to helper theorems.
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Extracting values from query...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] trace : Adding 'x0 = i(i(*(e, x0)))' to helper theorems.
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Extracting values from query...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] trace : Adding 'e = *(e, i(e))' to helper theorems.
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Extracting values from query...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] trace : Adding 'e = *(i(e), *(x0, i(x0)))' to helper theorems.
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Extracting values from query...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] trace : Adding 'i(*(x1, x0)) = *(i(x0), *(i(x1), *(x1, *(x0, i(*(x1, x0))))))' to helper theorems.
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Extracting values from query...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] trace : Adding 'x0 = *(e, x0)' to helper theorems.
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Extracting values from query...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] trace : Adding 'e = *(*(e, e), i(e))' to helper theorems.
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Extracting values from query...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] trace : Adding 'i(i(i(x0))) = *(e, i(x0))' to helper theorems.
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Extracting values from query...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] trace : Adding '*(x0, *(e, e)) = *(x0, e)' to helper theorems.
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.127024 [Thread 0x00002be8] debug : Extracting values from query...
2020-05-16 07:30:56.128022 [Thread 0x00002be8] trace : Adding 'x0 = *(x0, e)' to helper theorems.
2020-05-16 07:30:56.128022 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.128022 [Thread 0x00002be8] debug : Extracting values from query...
2020-05-16 07:30:56.128022 [Thread 0x00002be8] trace : Adding '*(*(x0, x1), i(*(x0, x1))) = e' to helper theorems.
2020-05-16 07:30:56.128022 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.128022 [Thread 0x00002be8] debug : Extracting values from query...
2020-05-16 07:30:56.128022 [Thread 0x00002be8] trace : Adding 'i(e) = i(*(e, e))' to helper theorems.
2020-05-16 07:30:56.128022 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.128022 [Thread 0x00002be8] debug : Extracting values from query...
2020-05-16 07:30:56.128022 [Thread 0x00002be8] trace : Adding 'i(e) = *(e, e)' to helper theorems.
2020-05-16 07:30:56.128022 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.128022 [Thread 0x00002be8] debug : Extracting values from query...
2020-05-16 07:30:56.128022 [Thread 0x00002be8] trace : Adding '*(i(x1), *(x1, i(*(x0, x1)))) = i(*(x0, x1))' to helper theorems.
2020-05-16 07:30:56.128022 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.128022 [Thread 0x00002be8] debug : Extracting values from query...
2020-05-16 07:30:56.128022 [Thread 0x00002be8] trace : Adding '*(i(*(x0, x1)), *(x0, x1)) = e' to helper theorems.
2020-05-16 07:30:56.128022 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.128022 [Thread 0x00002be8] debug : Extracting values from query...
2020-05-16 07:30:56.128022 [Thread 0x00002be8] trace : Adding 'e = *(*(i(e), i(e)), e)' to helper theorems.
2020-05-16 07:30:56.128022 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.128022 [Thread 0x00002be8] debug : Extracting values from query...
2020-05-16 07:30:56.128022 [Thread 0x00002be8] trace : Adding '*(x0, i(x0)) = *(e, e)' to helper theorems.
2020-05-16 07:30:56.128022 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.128022 [Thread 0x00002be8] debug : Extracting values from query...
2020-05-16 07:30:56.128022 [Thread 0x00002be8] trace : Adding '*(e, *(e, x0)) = x0' to helper theorems.
2020-05-16 07:30:56.128022 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.128022 [Thread 0x00002be8] debug : Extracting values from query...
2020-05-16 07:30:56.128022 [Thread 0x00002be8] trace : Adding '*(e, *(i(i(e)), e)) = i(e)' to helper theorems.
2020-05-16 07:30:56.128022 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.128022 [Thread 0x00002be8] debug : Extracting values from query...
2020-05-16 07:30:56.128022 [Thread 0x00002be8] trace : Adding 'i(*(x1, x0)) = *(i(x0), *(*(i(x1), x1), *(x0, i(*(x1, x0)))))' to helper theorems.
2020-05-16 07:30:56.128022 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.128022 [Thread 0x00002be8] debug : Extracting values from query...
2020-05-16 07:30:56.128022 [Thread 0x00002be8] trace : Adding 'e = *(*(e, i(e)), e)' to helper theorems.
2020-05-16 07:30:56.128022 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.128022 [Thread 0x00002be8] debug : Extracting values from query...
2020-05-16 07:30:56.128022 [Thread 0x00002be8] trace : Adding 'i(e) = *(i(i(*(e, i(e)))), e)' to helper theorems.
2020-05-16 07:30:56.128022 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.128022 [Thread 0x00002be8] debug : Extracting values from query...
2020-05-16 07:30:56.128022 [Thread 0x00002be8] trace : Adding 'i(e) = *(e, *(i(e), e))' to helper theorems.
2020-05-16 07:30:56.128022 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.128022 [Thread 0x00002be8] debug : Extracting values from query...
2020-05-16 07:30:56.128022 [Thread 0x00002be8] trace : Adding 'i(i(i(e))) = i(i(e))' to helper theorems.
2020-05-16 07:30:56.128022 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.128022 [Thread 0x00002be8] debug : Extracting values from query...
2020-05-16 07:30:56.128022 [Thread 0x00002be8] trace : Adding '*(i(x0), *(x0, e)) = *(*(e, e), e)' to helper theorems.
2020-05-16 07:30:56.128022 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.128022 [Thread 0x00002be8] debug : Completed database transaction.
2020-05-16 07:30:56.128022 [Thread 0x00002be8] trace : Finishing loading of proof data...
2020-05-16 07:30:56.130015 [Thread 0x00002be8] info : Proof initialisation process loaded 50 theorems from the database. Now picking the best of them...
2020-05-16 07:30:56.132015 [Thread 0x00002be8] trace : Selected "x0 = i(i(*(e, x0)))" as a good statement to help prove the target theorems (utility was 0.5).
2020-05-16 07:30:56.132015 [Thread 0x00002be8] trace : Selected "i(i(i(e))) = i(i(e))" as a good statement to help prove the target theorems (utility was 0.333333).
2020-05-16 07:30:56.132015 [Thread 0x00002be8] trace : Selected "*(e, *(e, x0)) = x0" as a good statement to help prove the target theorems (utility was 0.333333).
2020-05-16 07:30:56.132015 [Thread 0x00002be8] trace : Selected "x0 = *(x0, e)" as a good statement to help prove the target theorems (utility was 0.333333).
2020-05-16 07:30:56.132015 [Thread 0x00002be8] trace : Selected "i(i(i(x0))) = *(e, i(x0))" as a good statement to help prove the target theorems (utility was 0.333333).
2020-05-16 07:30:56.132015 [Thread 0x00002be8] trace : Selected "x0 = *(e, x0)" as a good statement to help prove the target theorems (utility was 0.333333).
2020-05-16 07:30:56.132015 [Thread 0x00002be8] trace : Selected "*(e, e) = i(i(e))" as a good statement to help prove the target theorems (utility was 0.333333).
2020-05-16 07:30:56.132015 [Thread 0x00002be8] trace : Selected "*(e, i(i(x0))) = x0" as a good statement to help prove the target theorems (utility was 0.333333).
2020-05-16 07:30:56.132015 [Thread 0x00002be8] trace : Selected "*(i(i(*(e, e))), x0) = x0" as a good statement to help prove the target theorems (utility was 0.333333).
2020-05-16 07:30:56.132015 [Thread 0x00002be8] trace : Selected "i(x0) = i(i(*(e, i(x0))))" as a good statement to help prove the target theorems (utility was 0.333333).
2020-05-16 07:30:56.132015 [Thread 0x00002be8] info : Proof Process loaded and selected 10 theorems from the database to aid in the proof.
2020-05-16 07:30:56.132015 [Thread 0x00002be8] debug : Finishing SQLite query...
2020-05-16 07:30:56.132015 [Thread 0x00002be8] info : Beginning proof sequence...
2020-05-16 07:30:56.409900 [Thread 0x00002be8] info : Proof Process: Step 1/10 : 0 proof(s) remaining.
2020-05-16 07:30:56.409900 [Thread 0x00002be8] trace : Finished running solver, for 1/10 steps.
2020-05-16 07:30:56.409900 [Thread 0x00002be8] info : Proof process finished proving! Results:
	1 theorem(s) were proven true,
	0 theorem(s) have no proof,
	0 theorem(s) did not finish in the allotted time.
2020-05-16 07:30:56.409900 [Thread 0x00002be8] trace : Proof of "i(i(x0)) = x0" was successful; the statement is true.
2020-05-16 07:30:56.409900 [Thread 0x00002be8] trace : 	Total time taken: 0.28125s
2020-05-16 07:30:56.409900 [Thread 0x00002be8] trace : 	Max nodes in memory: 78
2020-05-16 07:30:56.409900 [Thread 0x00002be8] trace : 	Total node expansions: 342
2020-05-16 07:30:56.409900 [Thread 0x00002be8] trace : Creating Save Proof Results process...
2020-05-16 07:30:56.409900 [Thread 0x00002be8] debug : Building query for query process...
2020-05-16 07:30:56.409900 [Thread 0x00002be8] trace : Setting up result-saving query...
2020-05-16 07:30:56.409900 [Thread 0x00002be8] debug : Obtained query builder.
2020-05-16 07:30:56.411893 [Thread 0x00002be8] debug : Built query "INSERT INTO theorems (stmt, ctx) SELECT 'i(i(x0)) = x0', 1 WHERE NOT EXISTS(SELECT 1 FROM theorems WHERE stmt == 'i(i(x0)) = x0');

WITH my_thm(my_id) AS (SELECT id FROM theorems WHERE stmt = 'i(i(x0)) = x0')
INSERT INTO proof_attempts(thm_id, ss_id, time_cost, max_mem, num_expansions) VALUES ((SELECT my_id FROM my_thm), 3, 0.28125, 78, 342);

WITH my_thm(my_id) AS (SELECT id FROM theorems WHERE stmt = 'i(i(x0)) = x0')
INSERT OR IGNORE INTO proofs (thm_id, proof) SELECT (SELECT my_id FROM my_thm), 'i(i(x3)) = x3
i(*(e, i(x3))) = x3
i(i(i(i(x3)))) = x3
i(i(i(i(x3)))) = *(e, i(i(x3)))' WHERE NOT EXISTS (SELECT 1 FROM proofs WHERE thm_id=(SELECT my_id FROM my_thm));

WITH my_thm(my_id) AS (SELECT id FROM theorems WHERE stmt = 'i(i(x0)) = x0')
, helper_thm(helper_id) AS (SELECT id FROM theorems WHERE stmt = 'i(i(i(x0))) = *(e, i(x0))')
INSERT OR IGNORE INTO theorem_usage (target_thm_id, used_thm_id, cnt) VALUES((SELECT my_id FROM my_thm), (SELECT helper_id FROM helper_thm), 1);

WITH my_thm(my_id) AS (SELECT id FROM theorems WHERE stmt = 'i(i(x0)) = x0')
, helper_thm(helper_id) AS (SELECT id FROM theorems WHERE stmt = 'x0 = *(e, x0)')
INSERT OR IGNORE INTO theorem_usage (target_thm_id, used_thm_id, cnt) VALUES((SELECT my_id FROM my_thm), (SELECT helper_id FROM helper_thm), 1);

WITH my_thm(my_id) AS (SELECT id FROM theorems WHERE stmt = 'i(i(x0)) = x0')
, helper_thm(helper_id) AS (SELECT id FROM theorems WHERE stmt = '*(e, i(i(x0))) = x0')
INSERT OR IGNORE INTO theorem_usage (target_thm_id, used_thm_id, cnt) VALUES((SELECT my_id FROM my_thm), (SELECT helper_id FROM helper_thm), 1);

".
2020-05-16 07:30:56.411893 [Thread 0x00002be8] trace : Beginning a transaction...
2020-05-16 07:30:56.411893 [Thread 0x00002be8] debug : Successfully built SQLite statement from "INSERT INTO theorems (stmt, ctx) SELECT 'i(i(x0)) = x0', 1 WHERE NOT EXISTS(SELECT 1 FROM theorems WHERE stmt == 'i(i(x0)) = x0');".
2020-05-16 07:30:56.411893 [Thread 0x00002be8] debug : Successfully built SQLite statement from "

WITH my_thm(my_id) AS (SELECT id FROM theorems WHERE stmt = 'i(i(x0)) = x0')
INSERT INTO proof_attempts(thm_id, ss_id, time_cost, max_mem, num_expansions) VALUES ((SELECT my_id FROM my_thm), 3, 0.28125, 78, 342);".
2020-05-16 07:30:56.411893 [Thread 0x00002be8] debug : Successfully built SQLite statement from "

WITH my_thm(my_id) AS (SELECT id FROM theorems WHERE stmt = 'i(i(x0)) = x0')
INSERT OR IGNORE INTO proofs (thm_id, proof) SELECT (SELECT my_id FROM my_thm), 'i(i(x3)) = x3
i(*(e, i(x3))) = x3
i(i(i(i(x3)))) = x3
i(i(i(i(x3)))) = *(e, i(i(x3)))' WHERE NOT EXISTS (SELECT 1 FROM proofs WHERE thm_id=(SELECT my_id FROM my_thm));".
2020-05-16 07:30:56.411893 [Thread 0x00002be8] debug : Successfully built SQLite statement from "

WITH my_thm(my_id) AS (SELECT id FROM theorems WHERE stmt = 'i(i(x0)) = x0')
, helper_thm(helper_id) AS (SELECT id FROM theorems WHERE stmt = 'i(i(i(x0))) = *(e, i(x0))')
INSERT OR IGNORE INTO theorem_usage (target_thm_id, used_thm_id, cnt) VALUES((SELECT my_id FROM my_thm), (SELECT helper_id FROM helper_thm), 1);".
2020-05-16 07:30:56.411893 [Thread 0x00002be8] debug : Successfully built SQLite statement from "

WITH my_thm(my_id) AS (SELECT id FROM theorems WHERE stmt = 'i(i(x0)) = x0')
, helper_thm(helper_id) AS (SELECT id FROM theorems WHERE stmt = 'x0 = *(e, x0)')
INSERT OR IGNORE INTO theorem_usage (target_thm_id, used_thm_id, cnt) VALUES((SELECT my_id FROM my_thm), (SELECT helper_id FROM helper_thm), 1);".
2020-05-16 07:30:56.411893 [Thread 0x00002be8] debug : Successfully built SQLite statement from "

WITH my_thm(my_id) AS (SELECT id FROM theorems WHERE stmt = 'i(i(x0)) = x0')
, helper_thm(helper_id) AS (SELECT id FROM theorems WHERE stmt = '*(e, i(i(x0))) = x0')
INSERT OR IGNORE INTO theorem_usage (target_thm_id, used_thm_id, cnt) VALUES((SELECT my_id FROM my_thm), (SELECT helper_id FROM helper_thm), 1);".
2020-05-16 07:30:56.411893 [Thread 0x00002be8] debug : Successfully built query!
2020-05-16 07:30:56.411893 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.412891 [Thread 0x00002be8] debug : Finishing SQLite query...
2020-05-16 07:30:56.412891 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.427852 [Thread 0x00002be8] debug : Finishing SQLite query...
2020-05-16 07:30:56.427852 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.428851 [Thread 0x00002be8] debug : Finishing SQLite query...
2020-05-16 07:30:56.428851 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.436781 [Thread 0x00002be8] debug : Finishing SQLite query...
2020-05-16 07:30:56.436781 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.436781 [Thread 0x00002be8] debug : Finishing SQLite query...
2020-05-16 07:30:56.436781 [Thread 0x00002be8] debug : Stepping SQLite statement...
2020-05-16 07:30:56.436781 [Thread 0x00002be8] debug : Finishing SQLite query...
2020-05-16 07:30:56.436781 [Thread 0x00002be8] debug : Completed database transaction.
2020-05-16 07:30:56.436781 [Thread 0x00002be8] trace : Finishing saving proof results data.
2020-05-16 07:30:56.436781 [Thread 0x00002be8] trace : Waiting for worker threads to join...
2020-05-16 07:30:56.436781 [Thread 0x00002be8] trace : Done. Exiting...
2020-05-16 07:30:56.436781 [Thread 0x00002be8] debug : Closing SQLite database...
