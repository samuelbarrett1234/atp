var searchData=
[
  ['begin_413',['begin',['../classatp_1_1logic_1_1equational_1_1_identifier_parse_node.html#a6618f693f5e35cb6a1858b21e1a9b1a2',1,'atp::logic::equational::IdentifierParseNode::begin()'],['../classatp_1_1logic_1_1equational_1_1_statement_array.html#a2ccb4aef63b072e6a5b61f820d552ab6',1,'atp::logic::equational::StatementArray::begin()'],['../classatp_1_1logic_1_1equational_1_1_func_syntax_node.html#a36a4fa343fb0952573b0761b3ccb6141',1,'atp::logic::equational::FuncSyntaxNode::begin()']]],
  ['boost_5fauto_5ftest_5fcase_414',['BOOST_AUTO_TEST_CASE',['../_knowledge_kernel_definitions_tests_8cpp.html#acd5f94f676ef99660c81bfc3a2d850d4',1,'BOOST_AUTO_TEST_CASE(test_define_symbol_and_recall_arity):&#160;KnowledgeKernelDefinitionsTests.cpp'],['../_knowledge_kernel_definitions_tests_8cpp.html#a508614dcc5799fbc3619a918abfa5d91',1,'BOOST_AUTO_TEST_CASE(test_define_symbol_and_get_id):&#160;KnowledgeKernelDefinitionsTests.cpp'],['../_language_tests_8cpp.html#a29781dffcb6632930478d93135f9aa0b',1,'BOOST_AUTO_TEST_CASE(check_integrity_of_empty_kernel):&#160;LanguageTests.cpp'],['../_language_tests_8cpp.html#a8613a27b01ffcb4a199d800a865c0c17',1,'BOOST_AUTO_TEST_CASE(check_definition_loading):&#160;LanguageTests.cpp'],['../_language_tests_8cpp.html#af9bab97517600cac583230b667316111',1,'BOOST_AUTO_TEST_CASE(check_definition_loading_when_incorrect):&#160;LanguageTests.cpp'],['../_language_tests_8cpp.html#a7ab914f31c691e1fc22add9b1379d393',1,'BOOST_AUTO_TEST_CASE(check_definition_no_partial_load):&#160;LanguageTests.cpp'],['../_parse_definitions_tests_8cpp.html#aba48693f13a58a46c98f513043484e86',1,'BOOST_AUTO_TEST_CASE(parse_definitions_works_with_none):&#160;ParseDefinitionsTests.cpp'],['../_parse_definitions_tests_8cpp.html#a3b58ff471fb6cf1fc19dd8533ed8b339',1,'BOOST_AUTO_TEST_CASE(parse_definitions_handles_trailing_whitespace):&#160;ParseDefinitionsTests.cpp'],['../_parse_definitions_tests_8cpp.html#a0f088dac4b40539fe4990a66405a251f',1,'BOOST_AUTO_TEST_CASE(parse_definitions_handles_words):&#160;ParseDefinitionsTests.cpp'],['../_parse_definitions_tests_8cpp.html#acf67c93c0a5808c58fef73eb00d8fc4b',1,'BOOST_AUTO_TEST_CASE(test_no_partial_load):&#160;ParseDefinitionsTests.cpp'],['../_parse_statements_tests_8cpp.html#aa853ae4d9a1ae76af3b903e691dc5918',1,'BOOST_AUTO_TEST_CASE(parse_statements_returns_empty_results_but_some):&#160;ParseStatementsTests.cpp'],['../_parse_statements_tests_8cpp.html#a6a2d49db649e1c49a7cf7a81657394e6',1,'BOOST_AUTO_TEST_CASE(parse_statements_returns_one_result):&#160;ParseStatementsTests.cpp'],['../_parse_statements_tests_8cpp.html#aea6349e7084c55b2b7ce58f07fa6ecd9',1,'BOOST_AUTO_TEST_CASE(parse_statements_handles_no_spaces):&#160;ParseStatementsTests.cpp'],['../_parse_statements_tests_8cpp.html#aaf14ff71770d98ec06c72c560a39ece9',1,'BOOST_AUTO_TEST_CASE(parse_statements_handles_trailing_whitespace):&#160;ParseStatementsTests.cpp'],['../_parse_statements_tests_8cpp.html#a77df6bdd653d6b0ced350ae03ca21283',1,'BOOST_AUTO_TEST_CASE(parse_statements_handles_words_and_numbers):&#160;ParseStatementsTests.cpp'],['../_parse_statements_tests_8cpp.html#ab86dd79cb854ec9d7b6e9316beb79dfd',1,'BOOST_AUTO_TEST_CASE(parse_statements_returns_three_results):&#160;ParseStatementsTests.cpp'],['../_parse_statements_tests_8cpp.html#a6730f90ca63adc07062465de35c2d9a9',1,'BOOST_AUTO_TEST_CASE(parse_statements_handles_special_chars):&#160;ParseStatementsTests.cpp'],['../_parse_statements_tests_8cpp.html#a15cea3b5870df9b95f30fc76cc81a400',1,'BOOST_AUTO_TEST_CASE(parse_statements_ignores_comment_at_eol):&#160;ParseStatementsTests.cpp'],['../_parse_statements_tests_8cpp.html#a0ac6989762c2f64bad7215a8862a7c68',1,'BOOST_AUTO_TEST_CASE(parse_statements_correctly_interprets_equality):&#160;ParseStatementsTests.cpp'],['../_parse_statements_tests_8cpp.html#af6d4f44deca03e86e6dad6778ff89381',1,'BOOST_AUTO_TEST_CASE(parse_statements_correctly_interprets_functions):&#160;ParseStatementsTests.cpp'],['../_parse_statements_tests_8cpp.html#acf67c93c0a5808c58fef73eb00d8fc4b',1,'BOOST_AUTO_TEST_CASE(test_no_partial_load):&#160;ParseStatementsTests.cpp'],['../_semantics_tests_8cpp.html#af5299414cd1e034d625bd038fd49dacc',1,'BOOST_AUTO_TEST_CASE(test_equivalent_invariant_to_reflection):&#160;SemanticsTests.cpp'],['../_statement_array_tests_8cpp.html#aa4fb32e8cb3b82583f1177ff5f2d2433',1,'BOOST_AUTO_TEST_CASE(size_test):&#160;StatementArrayTests.cpp'],['../_statement_array_tests_8cpp.html#a2770d284b035271b7a2747c23c5be589',1,'BOOST_AUTO_TEST_CASE(basic_iterator_tests):&#160;StatementArrayTests.cpp'],['../_statement_array_tests_8cpp.html#ab87d3c4aade85b27ec5d7216422a545d',1,'BOOST_AUTO_TEST_CASE(empty_arr_iterator_tests):&#160;StatementArrayTests.cpp'],['../_statement_array_tests_8cpp.html#a078359bc65a5267d920fc6d1f541ad27',1,'BOOST_AUTO_TEST_CASE(test_slice_start_end):&#160;StatementArrayTests.cpp'],['../_statement_array_tests_8cpp.html#ad399870bf53070147bab8d24f74e8cc0',1,'BOOST_AUTO_TEST_CASE(test_slice_step):&#160;StatementArrayTests.cpp'],['../_statement_array_tests_8cpp.html#ab4e77a8340023c96b2acd036cc82d26e',1,'BOOST_AUTO_TEST_CASE(concat_test):&#160;StatementArrayTests.cpp'],['../_statement_array_tests_8cpp.html#a453f47a896f2737eb557a14827ddb84f',1,'BOOST_AUTO_TEST_CASE(test_slice_iterator):&#160;StatementArrayTests.cpp'],['../_statement_tests_8cpp.html#a3f6de86a8ba8297685167d96f1804be1',1,'BOOST_AUTO_TEST_CASE(test_string_fold_is_inverse_to_parser_for_two_free_vars):&#160;StatementTests.cpp'],['../_statement_tests_8cpp.html#a08b3de0f2930151f41b73e3f0da43fae',1,'BOOST_AUTO_TEST_CASE(test_pair_fold_with_conflicting_func_arities):&#160;StatementTests.cpp'],['../_statement_tests_8cpp.html#aaa288b3e0520f7fe5344c38cb7dbd2c5',1,'BOOST_AUTO_TEST_CASE(test_pair_fold_by_converting_pair_to_str):&#160;StatementTests.cpp'],['../_statement_tests_8cpp.html#af09c76ff42456303b6885f8eb8ff8423',1,'BOOST_AUTO_TEST_CASE(test_adjoint_rhs):&#160;StatementTests.cpp'],['../_syntax_tree_fold_tests_8cpp.html#a7a950006315e7676ef5e452117696631',1,'BOOST_AUTO_TEST_CASE(test_to_str_is_inverse_to_parser_1):&#160;SyntaxTreeFoldTests.cpp'],['../_syntax_tree_fold_tests_8cpp.html#aa4ad2be22458552fe2d49564aff40e61',1,'BOOST_AUTO_TEST_CASE(test_to_str_is_inverse_to_parser_2):&#160;SyntaxTreeFoldTests.cpp'],['../_syntax_tree_fold_tests_8cpp.html#a12b7465a23a1c6d91cda79f03a8bcbb8',1,'BOOST_AUTO_TEST_CASE(test_to_str_is_inverse_to_parser_3):&#160;SyntaxTreeFoldTests.cpp'],['../_syntax_tree_fold_tests_8cpp.html#adc3ac7cbde0c6c4264fa2441cacdb50a',1,'BOOST_AUTO_TEST_CASE(test_to_str_is_inverse_to_parser_4):&#160;SyntaxTreeFoldTests.cpp']]],
  ['boost_5fauto_5ftest_5fsuite_415',['BOOST_AUTO_TEST_SUITE',['../_knowledge_kernel_definitions_tests_8cpp.html#a1d45c6389fedad978f4da790368ee9bf',1,'BOOST_AUTO_TEST_SUITE(EquationalTests):&#160;KnowledgeKernelDefinitionsTests.cpp'],['../_knowledge_kernel_inference_tests_8cpp.html#a1d45c6389fedad978f4da790368ee9bf',1,'BOOST_AUTO_TEST_SUITE(EquationalTests):&#160;KnowledgeKernelInferenceTests.cpp'],['../_language_tests_8cpp.html#a1d45c6389fedad978f4da790368ee9bf',1,'BOOST_AUTO_TEST_SUITE(EquationalTests):&#160;LanguageTests.cpp'],['../_parse_definitions_tests_8cpp.html#a1d45c6389fedad978f4da790368ee9bf',1,'BOOST_AUTO_TEST_SUITE(EquationalTests):&#160;ParseDefinitionsTests.cpp'],['../_parse_statements_tests_8cpp.html#a1d45c6389fedad978f4da790368ee9bf',1,'BOOST_AUTO_TEST_SUITE(EquationalTests):&#160;ParseStatementsTests.cpp'],['../_parse_tree_fold_tests_8cpp.html#a1d45c6389fedad978f4da790368ee9bf',1,'BOOST_AUTO_TEST_SUITE(EquationalTests):&#160;ParseTreeFoldTests.cpp'],['../_parse_tree_fold_tests_8cpp.html#a50d5051c7eab2e8926bd2f542e490e20',1,'BOOST_AUTO_TEST_SUITE(ParseTreeFoldTests, *boost::unit_test_framework::depends_on(&quot;EquationalTests/ParseStatementsTests&quot;)):&#160;ParseTreeFoldTests.cpp'],['../_parse_tree_to_syntax_tree_tests_8cpp.html#a1d45c6389fedad978f4da790368ee9bf',1,'BOOST_AUTO_TEST_SUITE(EquationalTests):&#160;ParseTreeToSyntaxTreeTests.cpp'],['../_semantics_tests_8cpp.html#a1d45c6389fedad978f4da790368ee9bf',1,'BOOST_AUTO_TEST_SUITE(EquationalTests):&#160;SemanticsTests.cpp'],['../_statement_array_tests_8cpp.html#a1d45c6389fedad978f4da790368ee9bf',1,'BOOST_AUTO_TEST_SUITE(EquationalTests):&#160;StatementArrayTests.cpp'],['../_statement_tests_8cpp.html#a1d45c6389fedad978f4da790368ee9bf',1,'BOOST_AUTO_TEST_SUITE(EquationalTests):&#160;StatementTests.cpp'],['../_syntax_tree_fold_tests_8cpp.html#a1d45c6389fedad978f4da790368ee9bf',1,'BOOST_AUTO_TEST_SUITE(EquationalTests):&#160;SyntaxTreeFoldTests.cpp']]],
  ['boost_5fauto_5ftest_5fsuite_5fend_416',['BOOST_AUTO_TEST_SUITE_END',['../_knowledge_kernel_definitions_tests_8cpp.html#af7f71af5c6c124222dd1c42c5df892f4',1,'BOOST_AUTO_TEST_SUITE_END():&#160;KnowledgeKernelDefinitionsTests.cpp'],['../_knowledge_kernel_inference_tests_8cpp.html#af7f71af5c6c124222dd1c42c5df892f4',1,'BOOST_AUTO_TEST_SUITE_END():&#160;KnowledgeKernelInferenceTests.cpp'],['../_language_tests_8cpp.html#af7f71af5c6c124222dd1c42c5df892f4',1,'BOOST_AUTO_TEST_SUITE_END():&#160;LanguageTests.cpp'],['../_parse_definitions_tests_8cpp.html#af7f71af5c6c124222dd1c42c5df892f4',1,'BOOST_AUTO_TEST_SUITE_END():&#160;ParseDefinitionsTests.cpp'],['../_parse_statements_tests_8cpp.html#af7f71af5c6c124222dd1c42c5df892f4',1,'BOOST_AUTO_TEST_SUITE_END():&#160;ParseStatementsTests.cpp'],['../_parse_tree_fold_tests_8cpp.html#af7f71af5c6c124222dd1c42c5df892f4',1,'BOOST_AUTO_TEST_SUITE_END():&#160;ParseTreeFoldTests.cpp'],['../_parse_tree_to_syntax_tree_tests_8cpp.html#af7f71af5c6c124222dd1c42c5df892f4',1,'BOOST_AUTO_TEST_SUITE_END():&#160;ParseTreeToSyntaxTreeTests.cpp'],['../_semantics_tests_8cpp.html#af7f71af5c6c124222dd1c42c5df892f4',1,'BOOST_AUTO_TEST_SUITE_END():&#160;SemanticsTests.cpp'],['../_statement_array_tests_8cpp.html#af7f71af5c6c124222dd1c42c5df892f4',1,'BOOST_AUTO_TEST_SUITE_END():&#160;StatementArrayTests.cpp'],['../_statement_tests_8cpp.html#af7f71af5c6c124222dd1c42c5df892f4',1,'BOOST_AUTO_TEST_SUITE_END():&#160;StatementTests.cpp'],['../_syntax_tree_fold_tests_8cpp.html#af7f71af5c6c124222dd1c42c5df892f4',1,'BOOST_AUTO_TEST_SUITE_END():&#160;SyntaxTreeFoldTests.cpp']]],
  ['boost_5fdata_5ftest_5fcase_417',['BOOST_DATA_TEST_CASE',['../_knowledge_kernel_inference_tests_8cpp.html#a3c6c646c73c8454c568bb8db11054a0d',1,'BOOST_DATA_TEST_CASE(test_form_canonical_true, boost::unit_test::data::make({ &quot;*(*(x, y), z) = *(x, *(y, z))&quot;, &quot;e = e&quot;, &quot;x = x&quot;, &quot;i(x) = i(x)&quot;, &quot;e = *(i(y), y)&quot;, &quot;*(x, y) = *(x, y)&quot;, &quot;*(i(x), i(i(x))) = e&quot;, &quot;*(e, e) = e&quot;, }), stmt):&#160;KnowledgeKernelInferenceTests.cpp'],['../_knowledge_kernel_inference_tests_8cpp.html#ada000a8c4ebb0e3a83028d34b2bbe417',1,'BOOST_DATA_TEST_CASE(test_form_not_canonical, boost::unit_test::data::make({ &quot;i(e) = e&quot;, &quot;*(x, y) = *(y, x)&quot; }), stmt):&#160;KnowledgeKernelInferenceTests.cpp'],['../_knowledge_kernel_inference_tests_8cpp.html#a27dfd7d24e5d5dbe999481e9c4d0bad1',1,'BOOST_DATA_TEST_CASE(test_is_a_succ, boost::unit_test::data::make({ &quot;x = i(x)&quot;, &quot;x = *(x, i(x))&quot;, &quot;*(*(x, y), i(*(x, y))) = *(*(x, y), *(i(y), i(x)))&quot;, &quot;*(*(x, y), i(*(x, y))) = *(x, i(x))&quot;, }) ^ boost::unit_test::data::make({ &quot;x = *(e, i(x))&quot;, &quot;x = e&quot;, &quot;*(*(x, y), i(*(x, y))) = *(x, *(y, *(i(y), i(x))))&quot;, &quot;*(*(x, y), i(*(x, y))) = *(x, *(e, i(x)))&quot;, }), stmt, succ_stmt):&#160;KnowledgeKernelInferenceTests.cpp'],['../_language_tests_8cpp.html#ae5a5d2cad9249e316742c9e02f3dd6f7',1,'BOOST_DATA_TEST_CASE(test_text_deserialisation_in_correct_cases, boost::unit_test::data::make({ &quot; x = i(x) \n *(x, y) = y&quot;, &quot; *(*(x, y), z) = *(x, *(y, z))&quot;, &quot; *(x, i(x)) = e \n e = e \n x = x&quot;, &quot;&quot;, &quot;*(x, y) = i(y) # a comment \n i(x) = i(i(x))&quot;}), stmts):&#160;LanguageTests.cpp'],['../_language_tests_8cpp.html#a63b797e47400307917da5683c59b6ce4',1,'BOOST_DATA_TEST_CASE(test_text_deserialisation_in_incorrect_cases, boost::unit_test::data::make({ &quot;x = x \n f(x)&quot;, &quot;f(x) = y  # free function f&quot;, &quot;*(x, y) = y  # valid \n i(*) = y&quot;}), stmt):&#160;LanguageTests.cpp'],['../_language_tests_8cpp.html#ac749c3a48e986032029c2a3b318f40cb',1,'BOOST_DATA_TEST_CASE(test_serialisation_in_one_free_variable, boost::unit_test::data::make({ &quot;x0 = x0&quot;, &quot;i(x0) = x0&quot;, &quot;*(x0, i(x0)) = e&quot;, &quot;e = e&quot;, &quot;*(e, e) = e&quot; }), stmt):&#160;LanguageTests.cpp'],['../_parse_definitions_tests_8cpp.html#a88bee50f5bbb81fad9081b699ad0b3bd',1,'BOOST_DATA_TEST_CASE(parse_definitions_returns_correct_mapping, boost::unit_test::data::random(boost::unit_test::data::distribution=boost::random::uniform_int_distribution&lt; size_t &gt;(0, 10)) ^ boost::unit_test::data::make(symbol_names), arity, name):&#160;ParseDefinitionsTests.cpp'],['../_parse_definitions_tests_8cpp.html#aefbeb9a49f1175f8fd332e9e54e407f6',1,'BOOST_DATA_TEST_CASE(parse_definitions_returns_none_when_incorrect, boost::unit_test::data::make(ill_formed_definitions), def):&#160;ParseDefinitionsTests.cpp'],['../_parse_statements_tests_8cpp.html#a711c2c6a516f65f79c3760876260cfb5',1,'BOOST_DATA_TEST_CASE(parse_statements_returns_none_when_incorrect, boost::unit_test::data::make(ill_formed_statements), stmt):&#160;ParseStatementsTests.cpp'],['../_parse_tree_fold_tests_8cpp.html#ae4f7b11e62bd09975be74f6d34b63285',1,'BOOST_DATA_TEST_CASE(test_fold_for_converting_to_str, boost::unit_test::data::make(stmts), stmt):&#160;ParseTreeFoldTests.cpp'],['../_parse_tree_to_syntax_tree_tests_8cpp.html#aa2bc4cb40f4d112cc7971674304661f8',1,'BOOST_DATA_TEST_CASE(test_validity, boost::unit_test::data::make(stmts_to_check_validity) ^ boost::unit_test::data::make(stmts_is_valid), stmt, is_valid):&#160;ParseTreeToSyntaxTreeTests.cpp'],['../_semantics_tests_8cpp.html#a8e8129b3330774f99dc4ea2788b58da5',1,'BOOST_DATA_TEST_CASE(test_true_by_reflexivity_works_on_examples, boost::unit_test::data::make({ &quot;x=x&quot;, &quot;x=y&quot;, &quot;i(x)=x&quot;, &quot;x=e&quot;, &quot;e=e&quot;, &quot;i(x)=i(x)&quot;, &quot;*(x, y)=*(x, y)&quot;, &quot;*(x, y)=*(y, x)&quot; }) ^ boost::unit_test::data::make({ true, false, false, false, true, true, true, false}), stmt, is_symmetric):&#160;SemanticsTests.cpp'],['../_semantics_tests_8cpp.html#a8b5b7ce62a23e1a0f84b868c840e2679',1,'BOOST_DATA_TEST_CASE(test_transpose, boost::unit_test::data::make({ &quot;x0 = i(x0)&quot;, &quot;i(x0) = *(x0, x1)&quot;, &quot;*(x0, x0) = i(*(x0, x0))&quot;, &quot;*( i(x), i(i(x)) ) = e&quot; }) ^ boost::unit_test::data::make({ &quot;i(x0) = x0&quot;, &quot;*(x0, x1) = i(x0)&quot;, &quot;i(*(x0, x0)) = *(x0, x0)&quot;, &quot;e = *( i(x), i(i(x)) )&quot; }), original, target):&#160;SemanticsTests.cpp'],['../_semantics_tests_8cpp.html#a72cd90b1a5dde4a305cff157926070af',1,'BOOST_DATA_TEST_CASE(test_identical_and_equivalent, boost::unit_test::data::make({ &quot;x = x&quot;, &quot;i(x) = x&quot;, &quot;x = e&quot;, &quot;e = e&quot;, &quot;*(x, x) = *( i(x), i(i(x)) )&quot; }) ^ boost::unit_test::data::make({ &quot;y = y&quot;, &quot;i(y) = y&quot;, &quot;e = e&quot;, &quot;e = e&quot;, &quot;*(x, x) = *( x, i(x) )&quot; }) ^ boost::unit_test::data::make({ true, true, false, true, false }), stmt1, stmt2, is_equivalent_and_identical):&#160;SemanticsTests.cpp'],['../_semantics_tests_8cpp.html#a253133bd008f2981d49f5b6454468a6e',1,'BOOST_DATA_TEST_CASE(test_equivalent_but_not_identical, boost::unit_test::data::make({ &quot;x = x&quot;, &quot;i(x) = x&quot;, &quot;x = e&quot;, &quot;*(x, y) = x&quot;, &quot;*(x, y) = i(*(x, y))&quot; }), stmt):&#160;SemanticsTests.cpp'],['../_semantics_tests_8cpp.html#a507ad6266ce5383615328bea3010a0be',1,'BOOST_DATA_TEST_CASE(test_neither_equivalent_nor_identical, boost::unit_test::data::make({ &quot;x = y&quot;, &quot;i(x) = y&quot;, &quot;x = *(e, y)&quot;, &quot;*(x, y) = x&quot; }), stmt):&#160;SemanticsTests.cpp'],['../_semantics_tests_8cpp.html#a032b8e78a9bf35cc8b44e4f05b3c3b8a',1,'BOOST_DATA_TEST_CASE(test_get_substitutions, boost::unit_test::data::make({ &quot;*(x, x) = *( i(x), i(i(x)) )&quot;, &quot;x = *(e, *(x, e))&quot;, &quot;i(x) = e&quot;, &quot;*(i(x), e) = x&quot;, &quot;x = *(x, i(x))&quot; }) ^ boost::unit_test::data::make({ &quot;*(x, i(x)) = e&quot;, &quot;*(x, *(y, z)) = *(*(x, y), z)&quot;, &quot;x = x&quot;, &quot;*(x, e) = x&quot;, &quot;x = *(x, e)&quot; }) ^ boost::unit_test::data::make({ &quot;*(x, x) = e&quot;, &quot;x = *(*(e, x), e)&quot;, &quot;e = i(x)&quot;, &quot;i(x) = x&quot;, &quot;x = *(x, *(i(x), e))&quot; }), subst_candidate, subst_rule, a_subst_result):&#160;SemanticsTests.cpp'],['../_semantics_tests_8cpp.html#abefa1ba51e069682335469417f735795',1,'BOOST_DATA_TEST_CASE(test_implies, boost::unit_test::data::make({ &quot;*(x, i(x)) = e&quot;, &quot;*(x, y) = *(y, x)&quot;, &quot;x = x&quot;, &quot;x = x&quot;, &quot;x = i(x)&quot;, &quot;*(*(x, y), z) = *(x, *(y, z))&quot; }) ^ boost::unit_test::data::make({ &quot;*(i(x), i(i(x))) = e&quot;, &quot;*(x, i(x)) = *(i(x), x)&quot;, &quot;e = e&quot;, &quot;i(x) = i(x)&quot;, &quot;i(e) = e&quot;, &quot;*(x, *(i(x), x)) = *(*(x, i(x)), x)&quot; }), premise_stmt, concl_stmt):&#160;SemanticsTests.cpp'],['../_statement_array_tests_8cpp.html#a4dd4a2e1ec36596bf3a41cad8e00cd35',1,'BOOST_DATA_TEST_CASE(test_slice_size_computations, boost::unit_test::data::make({ 0, 1, 0, 0, 2, 2 }) ^ boost::unit_test::data::make({ 0, 1, 2, 3, 12, 13 }) ^ boost::unit_test::data::make({ 1, 1, 2, 2, 5, 5 }) ^ boost::unit_test::data::make({ 0, 0, 1, 2, 2, 3 }), start, end, step, size):&#160;StatementArrayTests.cpp'],['../_statement_tests_8cpp.html#a8e5fe7fe10af54052ecd895efe82973f',1,'BOOST_DATA_TEST_CASE(test_statement_with_one_var_to_str, boost::unit_test::data::make({ &quot;x0 = x0&quot;, &quot;i(x0) = i(x0)&quot;, &quot;e = e&quot;, &quot;*(e, x0) = x0&quot; }), stmt):&#160;StatementTests.cpp'],['../_statement_tests_8cpp.html#a830ff050fb0756ef5bab310dd39d66f4',1,'BOOST_DATA_TEST_CASE(num_free_vars_test, boost::unit_test::data::make({ &quot;x0 = x0&quot;, &quot;*(x0, x1) = x1&quot;, &quot;e = e&quot;, &quot;x0 = e&quot;}) ^ boost::unit_test::data::make({ 1, 2, 0, 1 }), stmt, num_free_vars):&#160;StatementTests.cpp'],['../_statement_tests_8cpp.html#a4e4b391c2d9f8aca193e0559d137c704',1,'BOOST_DATA_TEST_CASE(test_string_fold_is_inverse_to_parser, boost::unit_test::data::make({ &quot;x0 = i(x0)&quot;, &quot;*(x0, *(e, i(x0))) = *(x0, x0)&quot;, &quot;*(x0, x1) = i(*(i(x0), i(x1)))&quot;, &quot;*(i(x0), i(i(x0))) = e&quot; }), stmt):&#160;StatementTests.cpp']]],
  ['boost_5ffixture_5ftest_5fsuite_418',['BOOST_FIXTURE_TEST_SUITE',['../_knowledge_kernel_definitions_tests_8cpp.html#ac3e0b1ce9770c1e1467b3c2f84de8bdc',1,'BOOST_FIXTURE_TEST_SUITE(KnowledgeKernelDefinitionsTests, KnowledgeKernelDefinitionsFixture):&#160;KnowledgeKernelDefinitionsTests.cpp'],['../_knowledge_kernel_inference_tests_8cpp.html#a965a9a2aac472cc8616f92c06a950bed',1,'BOOST_FIXTURE_TEST_SUITE(KnowledgeKernelInferenceTests, KnowledgeKernelInferenceTestsFixture, *boost::unit_test_framework::depends_on(&quot;EquationalTests/SemanticsTests&quot;) *boost::unit_test_framework::depends_on(&quot;EquationalTests/LanguageTests&quot;) *boost::unit_test_framework::depends_on(&quot;EquationalTests/StatementTests&quot;) *boost::unit_test_framework::depends_on(&quot;EquationalTests/StatementArrayTests&quot;) *boost::unit_test_framework::depends_on(&quot;EquationalTests/KnowledgeKernelDefinitionsTests&quot;)):&#160;KnowledgeKernelInferenceTests.cpp'],['../_language_tests_8cpp.html#a1602b74931b1f703fd52669e0ee58f90',1,'BOOST_FIXTURE_TEST_SUITE(LanguageTests, LanguageTestsFixture, *boost::unit_test_framework::depends_on(&quot;EquationalTests/KnowledgeKernelDefinitionsTests&quot;) *boost::unit_test_framework::depends_on(&quot;EquationalTests/ParseTreeToSyntaxTreeTests&quot;) *boost::unit_test_framework::depends_on(&quot;EquationalTests/ParseDefinitionsTests&quot;) *boost::unit_test_framework::depends_on(&quot;EquationalTests/SyntaxTreeFoldTests&quot;) *boost::unit_test_framework::depends_on(&quot;EquationalTests/StatementTests&quot;) *boost::unit_test_framework::depends_on(&quot;EquationalTests/SemanticsTests&quot;)):&#160;LanguageTests.cpp'],['../_parse_definitions_tests_8cpp.html#a8ff6ebc08739ed8f45e3d843db110429',1,'BOOST_FIXTURE_TEST_SUITE(ParseDefinitionsTests, ParseDefinitionsTestFixture):&#160;ParseDefinitionsTests.cpp'],['../_parse_tree_to_syntax_tree_tests_8cpp.html#aa6a8c41fa955437f0184028fdd5d79cc',1,'BOOST_FIXTURE_TEST_SUITE(ParseTreeToSyntaxTreeTests, ParseTreeToSyntaxTreeFixture, *boost::unit_test_framework::depends_on(&quot;EquationalTests/ParseStatementsTests&quot;) *boost::unit_test_framework::depends_on(&quot;EquationalTests/KnowledgeKernelDefinitionsTests&quot;)):&#160;ParseTreeToSyntaxTreeTests.cpp'],['../_semantics_tests_8cpp.html#a4dc4bcb94572ed7531c857b90b3a2d56',1,'BOOST_FIXTURE_TEST_SUITE(SemanticsTests, SemanticsTestsFixture, *boost::unit_test_framework::depends_on(&quot;EquationalTests/ParseTreeToSyntaxTreeTests&quot;) *boost::unit_test_framework::depends_on(&quot;EquationalTests/SyntaxTreeFoldTests&quot;) *boost::unit_test_framework::depends_on(&quot;EquationalTests/StatementTests&quot;)):&#160;SemanticsTests.cpp'],['../_statement_array_tests_8cpp.html#af73c09809663b957d38c5a9dd9339d1f',1,'BOOST_FIXTURE_TEST_SUITE(StatementArrayTests, StatementArrayTestsFixture, *boost::unit_test_framework::depends_on(&quot;EquationalTests/StatementTests&quot;) *boost::unit_test_framework::depends_on(&quot;EquationalTests/LanguageTests&quot;) *boost::unit_test_framework::depends_on(&quot;EquationalTests/KnowledgeKernelDefinitionsTests&quot;)):&#160;StatementArrayTests.cpp'],['../_statement_tests_8cpp.html#a3683591f39fe93c2f37120a6b5f45841',1,'BOOST_FIXTURE_TEST_SUITE(StatementTests, StatementTestsFixture, *boost::unit_test_framework::depends_on(&quot;EquationalTests/KnowledgeKernelDefinitionsTests&quot;) *boost::unit_test_framework::depends_on(&quot;EquationalTests/ParseTreeToSyntaxTreeTests&quot;) *boost::unit_test_framework::depends_on(&quot;EquationalTests/ParseDefinitionsTests&quot;) *boost::unit_test_framework::depends_on(&quot;EquationalTests/SyntaxTreeFoldTests&quot;)):&#160;StatementTests.cpp'],['../_syntax_tree_fold_tests_8cpp.html#a098e5ee743802fa92b9772b277699876',1,'BOOST_FIXTURE_TEST_SUITE(SyntaxTreeFoldTests, SyntaxTreeFoldTestsFixture, *boost::unit_test_framework::depends_on(&quot;EquationalTests/ParseTreeToSyntaxTreeTests&quot;)):&#160;SyntaxTreeFoldTests.cpp']]]
];
